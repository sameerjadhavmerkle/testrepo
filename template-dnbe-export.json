{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "workflows_DNBE_Adobe_Pull_Production_name": {
            "defaultValue": "DNBE_Adobe_Pull_Production",
            "type": "String"
        },
        "workflows_DNBE_Adobe_Push_Production_name": {
            "defaultValue": "DNBE_Adobe_Push_Production",
            "type": "String"
        },
        "workflows_DNBE_CreateVitecUrl_Production_name": {
            "defaultValue": "DNBE_CreateVitecUrl_Production",
            "type": "String"
        },
        "workflows_DNBE_ACS_SendHistory_Production_name": {
            "defaultValue": "DNBE_ACS_SendHistory_Production",
            "type": "String"
        },
        "workflows_DNBE_Vitec_Consent_Push_Production_name": {
            "defaultValue": "DNBE_Vitec_Consent_Push_Production",
            "type": "String"
        },
        "workflows_DNBE_Vitec_Delta_Load_Pull_Production_name": {
            "defaultValue": "DNBE_Vitec_Delta_Load_Pull_Production",
            "type": "String"
        },
        "workflows_DNBE_Adobe_Push_Failed_Jobs_Production_name": {
            "defaultValue": "DNBE_Adobe_Push_Failed_Jobs_Production",
            "type": "String"
        },
        "workflows_DNBE_CreateContactActivities_Production_name": {
            "defaultValue": "DNBE_CreateContactActivities_Production",
            "type": "String"
        },
        "workflows_DNBE_CreateOrdersUpdatesFile_Production_name": {
            "defaultValue": "DNBE_CreateOrdersUpdatesFile_Production",
            "type": "String"
        },
        "workflows_DNBE_CreateRemoveObjectsFile_Production_name": {
            "defaultValue": "DNBE_CreateRemoveObjectsFile_Production",
            "type": "String"
        },
        "workflows_DNBE_CreateContactUpdateFiles_Production_name": {
            "defaultValue": "DNBE_CreateContactUpdateFiles_Production",
            "type": "String"
        },
        "workflows_DNBE_CreateEstatesUpdatesFile_Production_name": {
            "defaultValue": "DNBE_CreateEstatesUpdatesFile_Production",
            "type": "String"
        },
        "workflows_DNBE_CreateEmployeesUpdatesFile_Production_name": {
            "defaultValue": "DNBE_CreateEmployeesUpdatesFile_Production",
            "type": "String"
        },
        "workflows_DNBE_Vitec_ContactRelations_Push_Production_name": {
            "defaultValue": "DNBE_Vitec_ContactRelations_Push_Production",
            "type": "String"
        },
        "workflows_DNBE_Adobe_ContactRelations_PushCSV_Production_name": {
            "defaultValue": "DNBE_Adobe_ContactRelations_PushCSV_Production",
            "type": "String"
        },
        "workflows_DNBE_CreateSearchProfileUpdatesFile_Production_name": {
            "defaultValue": "DNBE_CreateSearchProfileUpdatesFile_Production",
            "type": "String"
        },
        "workflows_DNBE_Vitec_Delta_Load_Pull_Checklist_Production_name": {
            "defaultValue": "DNBE_Vitec_Delta_Load_Pull_Checklist_Production",
            "type": "String"
        },
        "workflows_DNBE_CreateContactsConsentUpdatesFile_Production_name": {
            "defaultValue": "DNBE_CreateContactsConsentUpdatesFile_Production",
            "type": "String"
        },
        "workflows_DNBE_CreateEstateContactsUpdatesFiles_Production_name": {
            "defaultValue": "DNBE_CreateEstateContactsUpdatesFiles_Production",
            "type": "String"
        },
        "workflows_DNBE_CreateEstatesChecklistUpdatesFile_Production_name": {
            "defaultValue": "DNBE_CreateEstatesChecklistUpdatesFile_Production",
            "type": "String"
        },
        "sites_dnbefunctionsproductionnew_externalid": {
            "defaultValue": "/subscriptions/6628b4ea-c2aa-41a7-bb87-1998fb75fb46/resourceGroups/XXXXXXXXXXXXXX-AdobeCM-prod-rg/providers/Microsoft.Web/sites/dnbefunctionsproductionnew",
            "type": "String"
        },
        "connections_sftpwithsshproductionconnection_externalid": {
            "defaultValue": "/subscriptions/6628b4ea-c2aa-41a7-bb87-1998fb75fb46/resourceGroups/XXXXXXXXXXXXXX-AdobeCM-prod-rg/providers/Microsoft.Web/connections/sftpwithsshproductionconnection",
            "type": "String"
        },
        "connections_azureblobproductionconnection_externalid": {
            "defaultValue": "/subscriptions/6628b4ea-c2aa-41a7-bb87-1998fb75fb46/resourceGroups/XXXXXXXXXXXXXX-AdobeCM-prod-rg/providers/Microsoft.Web/connections/azureblobproductionconnection",
            "type": "String"
        },
        "connections_office365_externalid": {
            "defaultValue": "/subscriptions/6628b4ea-c2aa-41a7-bb87-1998fb75fb46/resourceGroups/XXXXXXXXXXXXXX-AdobeCM-prod-rg/providers/Microsoft.Web/connections/office365",
            "type": "String"
        },
        "connections_documentdbproductionconnection_externalid": {
            "defaultValue": "/subscriptions/6628b4ea-c2aa-41a7-bb87-1998fb75fb46/resourceGroups/XXXXXXXXXXXXXX-AdobeCM-prod-rg/providers/Microsoft.Web/connections/documentdbproductionconnection",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_DNBE_ACS_SendHistory_Production_name')]",
            "location": "northeurope",
            "tags": {
                "contactEmail": "XXXXXXXXXXXXXX",
                "costAllocation": "XXXXXXXXXXXXXX",
                "environment": "Production"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        },
                        "InstallationId": {
                            "defaultValue": "MSDNB",
                            "type": "String"
                        },
                        "Password": {
                            "defaultValue": "XXXXXXXXXXXXXX",
                            "type": "SecureString"
                        },
                        "Username": {
                            "defaultValue": "XXXXXXXXXXXXXX",
                            "type": "SecureString"
                        },
                        "Vitec Base URL": {
                            "defaultValue": "https://hub.megler.vitec.net/",
                            "type": "String"
                        }
                    },
                    "triggers": {
                        "Recurrence": {
                            "recurrence": {
                                "frequency": "Hour",
                                "interval": 6,
                                "startTime": "2021-05-06T06:00:00Z",
                                "timeZone": "Romance Standard Time"
                            },
                            "evaluatedRecurrence": {
                                "frequency": "Hour",
                                "interval": 6,
                                "startTime": "2021-05-06T06:00:00Z",
                                "timeZone": "Romance Standard Time"
                            },
                            "type": "Recurrence"
                        }
                    },
                    "actions": {
                        "For_each_file": {
                            "foreach": "@body('List_files_in_SFTP_folder')",
                            "actions": {
                                "Condition": {
                                    "actions": {
                                        "Append_to_array_variable": {
                                            "runAfter": {},
                                            "type": "AppendToArrayVariable",
                                            "inputs": {
                                                "name": "FilesPath",
                                                "value": "@items('For_each_file')?['Path']"
                                            }
                                        }
                                    },
                                    "runAfter": {},
                                    "expression": {
                                        "and": [
                                            {
                                                "startsWith": [
                                                    "@items('For_each_file')?['Name']",
                                                    "@string('I023_ACS_Next_activityLog_Activities')"
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                }
                            },
                            "runAfter": {
                                "List_files_in_SFTP_folder": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach",
                            "runtimeConfiguration": {
                                "concurrency": {
                                    "repetitions": 1
                                }
                            }
                        },
                        "For_each_path": {
                            "foreach": "@variables('FilesPath')",
                            "actions": {
                                "Copy_file": {
                                    "runAfter": {
                                        "For_each_row": [
                                            "Succeeded",
                                            "TimedOut",
                                            "Skipped",
                                            "Failed"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "headers": {
                                            "ReadFileMetadataFromServer": true
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['sftpwithssh']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/datasets/default/copyFile",
                                        "queries": {
                                            "destination": "/incoming/Azure_Archive",
                                            "overwrite": true,
                                            "queryParametersSingleEncoded": true,
                                            "source": "@{items('For_each_path')}"
                                        }
                                    }
                                },
                                "CsvWithBreakLinesToJson": {
                                    "runAfter": {
                                        "Get_file_content_": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Function",
                                    "inputs": {
                                        "body": "@body('Get_file_content_')",
                                        "function": {
                                            "id": "[concat(parameters('sites_dnbefunctionsproductionnew_externalid'), '/functions/CsvWithBreakLinesToJson')]"
                                        },
                                        "queries": {
                                            "fileName": "SendHistory",
                                            "rowsToSkip": 1
                                        }
                                    }
                                },
                                "Delete_file": {
                                    "runAfter": {
                                        "Copy_file": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "headers": {
                                            "SkipDeleteIfFileNotFoundOnServer": true
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['sftpwithssh']['connectionId']"
                                            }
                                        },
                                        "method": "delete",
                                        "path": "/datasets/default/files/@{encodeURIComponent(encodeURIComponent(items('For_each_path')))}"
                                    }
                                },
                                "For_each_row": {
                                    "foreach": "@body('Parse_JSON_')?['rows']",
                                    "actions": {
                                        "Post_to_Vitec": {
                                            "runAfter": {},
                                            "type": "Http",
                                            "inputs": {
                                                "authentication": {
                                                    "password": "@parameters('Password')",
                                                    "type": "Basic",
                                                    "username": "@parameters('Username')"
                                                },
                                                "body": {
                                                    "contactIds": [
                                                        "@items('For_each_row')?['Contact ID']"
                                                    ],
                                                    "doneDate": "@items('For_each_row')?['Event Date']",
                                                    "employeeId": "@items('For_each_row')?['Employee ID']",
                                                    "end": "@items('For_each_row')?['Event Date']",
                                                    "estateId": "@items('For_each_row')?['Estate ID']",
                                                    "note": "@items('For_each_row')?['Delivery Description']",
                                                    "start": "@items('For_each_row')?['Event Date']",
                                                    "title": "@items('For_each_row')?['Delivery Label']",
                                                    "type": "@if(equals(items('For_each_row')?['Delivery Type'], 'email'), 33, 7)"
                                                },
                                                "method": "POST",
                                                "uri": "@{parameters('Vitec Base URL')}/@{parameters('InstallationId')}/Activities"
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Parse_JSON_": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Foreach",
                                    "runtimeConfiguration": {
                                        "concurrency": {
                                            "repetitions": 1
                                        }
                                    }
                                },
                                "Get_file_content_": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['sftpwithssh']['connectionId']"
                                            }
                                        },
                                        "method": "get",
                                        "path": "/datasets/default/files/@{encodeURIComponent(encodeURIComponent(items('For_each_path')))}/content",
                                        "queries": {
                                            "inferContentType": true
                                        }
                                    }
                                },
                                "Parse_JSON_": {
                                    "runAfter": {
                                        "CsvWithBreakLinesToJson": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ParseJson",
                                    "inputs": {
                                        "content": "@body('CsvWithBreakLinesToJson')",
                                        "schema": {
                                            "properties": {
                                                "fileName": {
                                                    "type": "string"
                                                },
                                                "rows": {
                                                    "items": {
                                                        "properties": {
                                                            "Contact ID": {
                                                                "type": "string"
                                                            },
                                                            "Delivery Description": {
                                                                "type": "string"
                                                            },
                                                            "Delivery Label": {
                                                                "type": "string"
                                                            },
                                                            "Delivery Type": {
                                                                "type": "string"
                                                            },
                                                            "Employee ID": {
                                                                "type": "string"
                                                            },
                                                            "Estate ID": {
                                                                "type": "string"
                                                            },
                                                            "Event Date": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "Contact ID",
                                                            "Estate ID",
                                                            "Employee ID",
                                                            "Delivery Label",
                                                            "Delivery Description",
                                                            "Delivery Type",
                                                            "Event Date"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "For_each_file": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach",
                            "runtimeConfiguration": {
                                "concurrency": {
                                    "repetitions": 1
                                }
                            }
                        },
                        "Initialize_variable": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "FilesPath",
                                        "type": "array"
                                    }
                                ]
                            }
                        },
                        "List_files_in_SFTP_folder": {
                            "runAfter": {
                                "Initialize_variable": [
                                    "Succeeded"
                                ]
                            },
                            "metadata": {
                                "L2luY29taW5nL0FDU19GaWxlcw==": "/incoming/ACS_Files"
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['sftpwithssh']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/datasets/default/folders/@{encodeURIComponent(encodeURIComponent('L2luY29taW5nL0FDU19GaWxlcw=='))}"
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "sftpwithssh": {
                                "connectionId": "[parameters('connections_sftpwithsshproductionconnection_externalid')]",
                                "connectionName": "sftpwithsshproductionconnection",
                                "id": "/subscriptions/6628b4ea-c2aa-41a7-bb87-1998fb75fb46/providers/Microsoft.Web/locations/northeurope/managedApis/sftpwithssh"
                            }
                        }
                    },
                    "Password": {},
                    "Username": {}
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_DNBE_Adobe_ContactRelations_PushCSV_Production_name')]",
            "location": "northeurope",
            "tags": {
                "environment": "Production",
                "costAllocation": "XXXXXXXXXXXXXX",
                "contactEmail": "XXXXXXXXXXXXXX"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "contactId": {
                                                "type": "string"
                                            },
                                            "estateId": {
                                                "type": "string"
                                            },
                                            "proxyId": {
                                                "type": "string"
                                            },
                                            "relationType": {
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "estateId",
                                            "contactId",
                                            "relationType",
                                            "proxyId"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "actions": {
                        "Create_CSV_table": {
                            "runAfter": {},
                            "type": "Table",
                            "inputs": {
                                "format": "CSV",
                                "from": "@triggerBody()"
                            }
                        },
                        "Create_file": {
                            "runAfter": {
                                "Create_CSV_table": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "@body('Create_CSV_table')",
                                "headers": {
                                    "ReadFileMetadataFromServer": true
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['sftpwithssh']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/datasets/default/files",
                                "queries": {
                                    "folderPath": "/incoming/AzureFiles",
                                    "name": "I022_Next_ACS_contactRelations_EstateContacts_@{utcNow()}.csv",
                                    "queryParametersSingleEncoded": true
                                }
                            },
                            "runtimeConfiguration": {
                                "contentTransfer": {
                                    "transferMode": "Chunked"
                                }
                            }
                        },
                        "Response": {
                            "runAfter": {
                                "Create_file": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Response",
                            "kind": "Http",
                            "inputs": {
                                "statusCode": 200
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "sftpwithssh": {
                                "connectionId": "[parameters('connections_sftpwithsshproductionconnection_externalid')]",
                                "connectionName": "sftpwithssh",
                                "id": "/subscriptions/6628b4ea-c2aa-41a7-bb87-1998fb75fb46/providers/Microsoft.Web/locations/northeurope/managedApis/sftpwithssh"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_DNBE_CreateContactActivities_Production_name')]",
            "location": "northeurope",
            "tags": {
                "CostAllocation": "XXXXXXXXXXXXXX"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        },
                        "VitecBaseUrl": {
                            "defaultValue": "https://hub.megler.vitec.net//MSDNB",
                            "type": "String"
                        },
                        "VitecPassword": {
                            "defaultValue": "XXXXXXXXXXXXXX",
                            "type": "SecureString"
                        },
                        "VitecUsername": {
                            "defaultValue": "XXXXXXXXXXXXXX",
                            "type": "SecureString"
                        }
                    },
                    "triggers": {
                        "Daily,_once_an_hour_between_00_and_06": {
                            "recurrence": {
                                "frequency": "Day",
                                "interval": 1,
                                "schedule": {
                                    "hours": [
                                        "1",
                                        "2",
                                        "3",
                                        "4",
                                        "0"
                                    ],
                                    "minutes": [
                                        50
                                    ]
                                }
                            },
                            "evaluatedRecurrence": {
                                "frequency": "Day",
                                "interval": 1,
                                "schedule": {
                                    "hours": [
                                        "1",
                                        "2",
                                        "3",
                                        "4",
                                        "0"
                                    ],
                                    "minutes": [
                                        50
                                    ]
                                }
                            },
                            "type": "Recurrence"
                        }
                    },
                    "actions": {
                        "Create_Blob_contactActivities": {
                            "runAfter": {
                                "Create_CSV_table_contactActivities": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "@body('Create_CSV_table_contactActivities')",
                                "headers": {
                                    "ReadFileMetadataFromServer": true
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('AccountNameFromSettings'))}/files",
                                "queries": {
                                    "folderPath": "/adobepushfiles",
                                    "name": "I024_Next_ACS_WithActivities_ContactActivities_@{utcNow()}.csv",
                                    "queryParametersSingleEncoded": true
                                }
                            },
                            "runtimeConfiguration": {
                                "contentTransfer": {
                                    "transferMode": "Chunked"
                                }
                            }
                        },
                        "Create_CSV_table_contactActivities": {
                            "runAfter": {
                                "For_each_Contact_in_body": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Table",
                            "inputs": {
                                "format": "CSV",
                                "from": "@variables('contactActivities')"
                            }
                        },
                        "Create_file_contactActivities": {
                            "runAfter": {
                                "Create_Blob_contactActivities": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "@body('Create_CSV_table_contactActivities')",
                                "headers": {
                                    "ReadFileMetadataFromServer": true
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['sftpwithssh']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/datasets/default/files",
                                "queries": {
                                    "folderPath": "/incoming/AzureFiles",
                                    "name": "I024_Next_ACS_WithActivities_ContactActivities_@{utcNow()}.csv",
                                    "queryParametersSingleEncoded": true
                                }
                            },
                            "runtimeConfiguration": {
                                "contentTransfer": {
                                    "transferMode": "Chunked"
                                }
                            }
                        },
                        "For_each_Contact_in_body": {
                            "foreach": "@body('Remove_wrapper_from_body')?['contacts']",
                            "actions": {
                                "For_each_Activity_in_Contact": {
                                    "foreach": "@items('For_each_Contact_in_body')?['activities']",
                                    "actions": {
                                        "Does_estateRelation_exist": {
                                            "actions": {
                                                "Append_to_array_contactActivities": {
                                                    "runAfter": {},
                                                    "type": "AppendToArrayVariable",
                                                    "inputs": {
                                                        "name": "contactActivities",
                                                        "value": {
                                                            "activityType": "@items('For_each_Activity_in_Contact')?['activityType']",
                                                            "contactID": "@{items('For_each_Contact_in_body')?['contactId']}",
                                                            "contactType": "@items('For_each_Contact_in_body')?['contactType']",
                                                            "endDate": "@convertFromUtc(items('For_each_Activity_in_Contact')?['end'], 'W. Europe Standard Time')",
                                                            "estateID": "@{items('For_each_Activity_in_Contact')?['estateRelation']?['estate']?['estateId']}",
                                                            "relationType": "@items('For_each_Activity_in_Contact')?['estateRelation']?['type']",
                                                            "startDate": "@convertFromUtc(items('For_each_Activity_in_Contact')?['start'], 'W. Europe Standard Time')"
                                                        }
                                                    }
                                                }
                                            },
                                            "runAfter": {
                                                "Set_estateRelationExists": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "expression": {
                                                "and": [
                                                    {
                                                        "greater": [
                                                            "@length(variables('estateRelationExists'))",
                                                            0
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": "If"
                                        },
                                        "Set_estateRelationExists": {
                                            "runAfter": {},
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "estateRelationExists",
                                                "value": "@items('For_each_Activity_in_Contact')?['estateRelation']?['estate']?['estateId']"
                                            }
                                        }
                                    },
                                    "runAfter": {},
                                    "type": "Foreach",
                                    "runtimeConfiguration": {
                                        "concurrency": {
                                            "repetitions": 1
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "Initialize_estateRelationExists_variable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach",
                            "runtimeConfiguration": {
                                "concurrency": {
                                    "repetitions": 1
                                }
                            }
                        },
                        "GET_WithActivities": {
                            "runAfter": {},
                            "type": "Http",
                            "inputs": {
                                "authentication": {
                                    "password": "@parameters('VitecPassword')",
                                    "type": "Basic",
                                    "username": "@parameters('VitecUsername')"
                                },
                                "method": "GET",
                                "queries": {
                                    "activityTypes": "1",
                                    "dateFrom": "@{getFutureTime(1, 'Day', 'yyyy-MM-dd HH:mm:ss')}",
                                    "dateTo": "@{getFutureTime(2, 'Day', 'yyyy-MM-dd HH:mm:ss')}",
                                    "relationTypes[0]": "3"
                                },
                                "uri": "@{parameters('VitecBaseUrl')}/Contacts/WithActivities"
                            }
                        },
                        "Initialize_contactActivities_array": {
                            "runAfter": {
                                "Remove_wrapper_from_body": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "contactActivities",
                                        "type": "array",
                                        "value": []
                                    }
                                ]
                            }
                        },
                        "Initialize_estateRelationExists_variable": {
                            "runAfter": {
                                "Initialize_contactActivities_array": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "estateRelationExists",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Remove_wrapper_from_body": {
                            "runAfter": {
                                "GET_WithActivities": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@body('GET_WithActivities')",
                                "schema": {
                                    "properties": {
                                        "contacts": {
                                            "items": {
                                                "properties": {
                                                    "activities": {
                                                        "items": {
                                                            "properties": {
                                                                "activityType": {
                                                                    "type": "integer"
                                                                },
                                                                "done": {
                                                                    "type": "boolean"
                                                                },
                                                                "end": {
                                                                    "type": "string"
                                                                },
                                                                "estateRelation": {
                                                                    "properties": {
                                                                        "date": {
                                                                            "type": "string"
                                                                        },
                                                                        "estate": {
                                                                            "properties": {
                                                                                "assignmentNum": {
                                                                                    "type": "string"
                                                                                },
                                                                                "assignmentType": {
                                                                                    "type": "integer"
                                                                                },
                                                                                "departmentId": {
                                                                                    "type": "integer"
                                                                                },
                                                                                "estateBaseType": {
                                                                                    "type": "integer"
                                                                                },
                                                                                "estateId": {
                                                                                    "type": "string"
                                                                                },
                                                                                "status": {
                                                                                    "type": "integer"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": {
                                                                            "type": "integer"
                                                                        }
                                                                    },
                                                                    "type": [
                                                                        "object",
                                                                        "null"
                                                                    ]
                                                                },
                                                                "name": {
                                                                    "type": "string"
                                                                },
                                                                "privateActivity": {
                                                                    "type": "boolean"
                                                                },
                                                                "start": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "start",
                                                                "end",
                                                                "activityType",
                                                                "name",
                                                                "done",
                                                                "privateActivity",
                                                                "estateRelation"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "contactId": {
                                                        "type": "string"
                                                    },
                                                    "contactType": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "required": [
                                                    "contactId",
                                                    "contactType",
                                                    "activities"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azureblob": {
                                "connectionId": "[parameters('connections_azureblobproductionconnection_externalid')]",
                                "connectionName": "azureblobproductionconnection",
                                "id": "/subscriptions/bc58fa9e-b6f0-47bf-a58f-f8b9f944407e/providers/Microsoft.Web/locations/northeurope/managedApis/azureblob"
                            },
                            "sftpwithssh": {
                                "connectionId": "[parameters('connections_sftpwithsshproductionconnection_externalid')]",
                                "connectionName": "sftpwithsshproductionconnection",
                                "id": "/subscriptions/bc58fa9e-b6f0-47bf-a58f-f8b9f944407e/providers/Microsoft.Web/locations/northeurope/managedApis/sftpwithssh"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_DNBE_CreateContactsConsentUpdatesFile_Production_name')]",
            "location": "northeurope",
            "tags": {
                "environment": "Production",
                "costAllocation": "XXXXXXXXXXXXXX",
                "contactEmail": "XXXXXXXXXXXXXX"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "method": "POST",
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "changedBy": {
                                                "type": "string"
                                            },
                                            "changedDate": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "integer"
                                            },
                                            "value": {
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "actions": {
                        "Create_CSV_table_ContactsConsentUpdates": {
                            "runAfter": {},
                            "type": "Table",
                            "inputs": {
                                "format": "CSV",
                                "from": "@triggerBody()"
                            }
                        },
                        "Create_blob": {
                            "runAfter": {
                                "Create_CSV_table_ContactsConsentUpdates": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "@body('Create_CSV_table_ContactsConsentUpdates')",
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/datasets/default/files",
                                "queries": {
                                    "folderPath": "/adobepushfiles",
                                    "name": "I005_Next_ACS_contactsConsents_consents_@{utcNow()}.csv",
                                    "queryParametersSingleEncoded": true
                                }
                            },
                            "runtimeConfiguration": {
                                "contentTransfer": {
                                    "transferMode": "Chunked"
                                }
                            }
                        },
                        "Create_file": {
                            "runAfter": {
                                "Create_blob": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "@body('Create_CSV_table_ContactsConsentUpdates')",
                                "headers": {
                                    "ReadFileMetadataFromServer": true
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['sftpwithssh']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/datasets/default/files",
                                "queries": {
                                    "folderPath": "/incoming/AzureFiles",
                                    "name": "I005_Next_ACS_contactsConsents_consents_@{utcNow()}.csv",
                                    "queryParametersSingleEncoded": true
                                }
                            },
                            "runtimeConfiguration": {
                                "contentTransfer": {
                                    "transferMode": "Chunked"
                                }
                            }
                        },
                        "Response": {
                            "runAfter": {
                                "Create_file": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Response",
                            "kind": "Http",
                            "inputs": {
                                "body": {
                                    "fileCreatedName": "@body('Create_file')?['Name']",
                                    "fileCreatedPath": "@body('Create_file')?['Path']",
                                    "fileCreatedSize": "@body('Create_file')?['Size']"
                                },
                                "statusCode": 200
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azureblob": {
                                "connectionId": "[parameters('connections_azureblobproductionconnection_externalid')]",
                                "connectionName": "azureblob",
                                "id": "/subscriptions/6628b4ea-c2aa-41a7-bb87-1998fb75fb46/providers/Microsoft.Web/locations/northeurope/managedApis/azureblob"
                            },
                            "sftpwithssh": {
                                "connectionId": "[parameters('connections_sftpwithsshproductionconnection_externalid')]",
                                "connectionName": "sftpwithssh",
                                "id": "/subscriptions/6628b4ea-c2aa-41a7-bb87-1998fb75fb46/providers/Microsoft.Web/locations/northeurope/managedApis/sftpwithssh"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_DNBE_CreateContactUpdateFiles_Production_name')]",
            "location": "northeurope",
            "tags": {
                "environment": "Production",
                "costAllocation": "XXXXXXXXXXXXXX",
                "contactEmail": "XXXXXXXXXXXXXX"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "method": "POST",
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "address": {
                                                "type": "string"
                                            },
                                            "changedDate": {
                                                "type": "string"
                                            },
                                            "city": {
                                                "type": "string"
                                            },
                                            "companyName": {
                                                "type": "string"
                                            },
                                            "consents": {
                                                "items": {
                                                    "properties": {
                                                        "changedBy": {
                                                            "type": "string"
                                                        },
                                                        "changedDate": {
                                                            "type": "string"
                                                        },
                                                        "type": {
                                                            "type": "integer"
                                                        },
                                                        "value": {
                                                            "type": "boolean"
                                                        }
                                                    },
                                                    "required": [
                                                        "type",
                                                        "value",
                                                        "changedDate",
                                                        "changedBy"
                                                    ],
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "contactId": {
                                                "type": "string"
                                            },
                                            "contactType": {
                                                "type": "integer"
                                            },
                                            "customerReview": {
                                                "type": "string"
                                            },
                                            "departmentId": {
                                                "type": "integer"
                                            },
                                            "email": {
                                                "type": "string"
                                            },
                                            "firstName": {
                                                "type": "string"
                                            },
                                            "lastName": {
                                                "type": "string"
                                            },
                                            "mobilePhone": {
                                                "type": "string"
                                            },
                                            "organisationNumber": {
                                                "type": "string"
                                            },
                                            "postalAddress": {
                                                "type": "string"
                                            },
                                            "postalCode": {
                                                "type": "string"
                                            },
                                            "privatePhone": {
                                                "type": "string"
                                            },
                                            "workPhone": {
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "contactId",
                                            "departmentId",
                                            "contactType",
                                            "companyName",
                                            "organisationNumber",
                                            "firstName",
                                            "lastName",
                                            "mobilePhone",
                                            "privatePhone",
                                            "workPhone",
                                            "email",
                                            "address",
                                            "postalAddress",
                                            "postalCode",
                                            "city",
                                            "consents",
                                            "changedDate",
                                            "customerReview"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "actions": {
                        "Create_CSV_table_ContactsUpdates": {
                            "runAfter": {},
                            "type": "Table",
                            "inputs": {
                                "columns": [
                                    {
                                        "header": "contactId",
                                        "value": "@item()['contactId']"
                                    },
                                    {
                                        "header": "departmentId",
                                        "value": "@item()['departmentId']"
                                    },
                                    {
                                        "header": "contactType",
                                        "value": "@item()['contactType']"
                                    },
                                    {
                                        "header": "companyName",
                                        "value": "@item()['companyName']"
                                    },
                                    {
                                        "header": "organisationNumber",
                                        "value": "@item()['organisationNumber']"
                                    },
                                    {
                                        "header": "firstName",
                                        "value": "@item()['firstName']"
                                    },
                                    {
                                        "header": "lastName",
                                        "value": "@item()['lastName']"
                                    },
                                    {
                                        "header": "mobilePhone",
                                        "value": "@item()['mobilePhone']"
                                    },
                                    {
                                        "header": "privatePhone",
                                        "value": "@item()['privatePhone']"
                                    },
                                    {
                                        "header": "workPhone",
                                        "value": "@item()['workPhone']"
                                    },
                                    {
                                        "header": "email",
                                        "value": "@item()['email']"
                                    },
                                    {
                                        "header": "address",
                                        "value": "@item()['address']"
                                    },
                                    {
                                        "header": "postalAddress",
                                        "value": "@item()['postalAddress']"
                                    },
                                    {
                                        "header": "postalCode",
                                        "value": "@item()['postalCode']"
                                    },
                                    {
                                        "header": "city",
                                        "value": "@item()['city']"
                                    },
                                    {
                                        "header": "changedDate",
                                        "value": "@item()['changedDate']"
                                    },
                                    {
                                        "header": "customerReview",
                                        "value": "@item()['customerReview']"
                                    }
                                ],
                                "format": "CSV",
                                "from": "@triggerBody()"
                            }
                        },
                        "Create_blob": {
                            "runAfter": {
                                "Create_CSV_table_ContactsUpdates": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "@body('Create_CSV_table_ContactsUpdates')",
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/datasets/default/files",
                                "queries": {
                                    "folderPath": "/adobepushfiles",
                                    "name": "I001_Next_ACS_Contact_Recipient_@{utcNow()}.csv",
                                    "queryParametersSingleEncoded": true
                                }
                            },
                            "runtimeConfiguration": {
                                "contentTransfer": {
                                    "transferMode": "Chunked"
                                }
                            }
                        },
                        "Create_file": {
                            "runAfter": {
                                "Create_blob": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "@body('Create_CSV_table_ContactsUpdates')",
                                "headers": {
                                    "ReadFileMetadataFromServer": true
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['sftpwithssh']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/datasets/default/files",
                                "queries": {
                                    "folderPath": "/incoming/AzureFiles",
                                    "name": "I001_Next_ACS_Contact_Recipient_@{utcNow()}.csv",
                                    "queryParametersSingleEncoded": true
                                }
                            },
                            "runtimeConfiguration": {
                                "contentTransfer": {
                                    "transferMode": "Chunked"
                                }
                            }
                        },
                        "Response": {
                            "runAfter": {
                                "Create_file": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Response",
                            "kind": "Http",
                            "inputs": {
                                "body": {
                                    "fileCreatedName": "@body('Create_file')?['Name']",
                                    "fileCreatedPath": "@body('Create_file')?['Path']",
                                    "fileCreatedSize": "@body('Create_file')?['Size']"
                                },
                                "statusCode": 200
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azureblob": {
                                "connectionId": "[parameters('connections_azureblobproductionconnection_externalid')]",
                                "connectionName": "azureblob",
                                "id": "/subscriptions/6628b4ea-c2aa-41a7-bb87-1998fb75fb46/providers/Microsoft.Web/locations/northeurope/managedApis/azureblob"
                            },
                            "sftpwithssh": {
                                "connectionId": "[parameters('connections_sftpwithsshproductionconnection_externalid')]",
                                "connectionName": "sftpwithssh",
                                "id": "/subscriptions/6628b4ea-c2aa-41a7-bb87-1998fb75fb46/providers/Microsoft.Web/locations/northeurope/managedApis/sftpwithssh"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_DNBE_CreateEmployeesUpdatesFile_Production_name')]",
            "location": "northeurope",
            "tags": {
                "environment": "Production",
                "costAllocation": "XXXXXXXXXXXXXX",
                "contactEmail": "XXXXXXXXXXXXXX"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "method": "POST",
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "aboutMe": {
                                                "type": "string"
                                            },
                                            "changedDate": {
                                                "type": "string"
                                            },
                                            "createdDate": {
                                                "type": "string"
                                            },
                                            "departmentId": {
                                                "items": {
                                                    "type": "integer"
                                                },
                                                "type": "array"
                                            },
                                            "email": {
                                                "type": "string"
                                            },
                                            "employeeActive": {
                                                "type": "boolean"
                                            },
                                            "employeeId": {
                                                "type": "string"
                                            },
                                            "imageTimestamp": {
                                                "type": "string"
                                            },
                                            "mobilePhone": {
                                                "type": "string"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "student": {
                                                "type": "boolean"
                                            },
                                            "title": {
                                                "type": "string"
                                            },
                                            "webPublish": {
                                                "type": "boolean"
                                            },
                                            "workPhone": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "actions": {
                        "Create_CSV_table_EmployeesUpdates": {
                            "runAfter": {},
                            "type": "Table",
                            "inputs": {
                                "columns": [
                                    {
                                        "header": "employeeId",
                                        "value": "@item()?['employeeId']"
                                    },
                                    {
                                        "header": "title",
                                        "value": "@item()?['title']"
                                    },
                                    {
                                        "header": "name",
                                        "value": "@item()?['name']"
                                    },
                                    {
                                        "header": "mobilePhone",
                                        "value": "@item()?['mobilePhone']"
                                    },
                                    {
                                        "header": "workPhone",
                                        "value": "@item()?['workPhone']"
                                    },
                                    {
                                        "header": "email",
                                        "value": "@item()?['email']"
                                    },
                                    {
                                        "header": "employeeActive",
                                        "value": "@item()?['employeeActive']"
                                    },
                                    {
                                        "header": "student",
                                        "value": "@item()?['student']"
                                    },
                                    {
                                        "header": "webPublish",
                                        "value": "@item()?['webPublish']"
                                    },
                                    {
                                        "header": "imageTimestamp",
                                        "value": "@item()?['imageTimestamp']"
                                    },
                                    {
                                        "header": "changedDate",
                                        "value": "@item()?['changedDate']"
                                    },
                                    {
                                        "header": "createdDate",
                                        "value": "@item()?['createdDate']"
                                    },
                                    {
                                        "header": "aboutMe",
                                        "value": "@item()?['aboutMe']"
                                    },
                                    {
                                        "header": "departmentId",
                                        "value": "@if(equals(item()['departmentId'], null), null, first(item()['departmentId']))"
                                    }
                                ],
                                "format": "CSV",
                                "from": "@triggerBody()"
                            }
                        },
                        "Create_blob": {
                            "runAfter": {
                                "Create_CSV_table_EmployeesUpdates": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "@body('Create_CSV_table_EmployeesUpdates')",
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/datasets/default/files",
                                "queries": {
                                    "folderPath": "/adobepushfiles",
                                    "name": "I003_Next_ACS_employees_employees_@{utcNow()}.csv",
                                    "queryParametersSingleEncoded": true
                                }
                            },
                            "runtimeConfiguration": {
                                "contentTransfer": {
                                    "transferMode": "Chunked"
                                }
                            }
                        },
                        "Create_file": {
                            "runAfter": {
                                "Create_blob": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "@body('Create_CSV_table_EmployeesUpdates')",
                                "headers": {
                                    "ReadFileMetadataFromServer": true
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['sftpwithssh']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/datasets/default/files",
                                "queries": {
                                    "folderPath": "/incoming/AzureFiles",
                                    "name": "I003_Next_ACS_employees_employees_@{utcNow()}.csv",
                                    "queryParametersSingleEncoded": true
                                }
                            },
                            "runtimeConfiguration": {
                                "contentTransfer": {
                                    "transferMode": "Chunked"
                                }
                            }
                        },
                        "Response": {
                            "runAfter": {
                                "Create_file": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Response",
                            "kind": "Http",
                            "inputs": {
                                "body": {
                                    "fileCreatedName": "@body('Create_file')?['Name']",
                                    "fileCreatedPath": "@body('Create_file')?['Path']",
                                    "fileCreatedSize": "@body('Create_file')?['Size']"
                                },
                                "statusCode": 200
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azureblob": {
                                "connectionId": "[parameters('connections_azureblobproductionconnection_externalid')]",
                                "connectionName": "azureblob",
                                "id": "/subscriptions/6628b4ea-c2aa-41a7-bb87-1998fb75fb46/providers/Microsoft.Web/locations/northeurope/managedApis/azureblob"
                            },
                            "sftpwithssh": {
                                "connectionId": "[parameters('connections_sftpwithsshproductionconnection_externalid')]",
                                "connectionName": "sftpwithssh",
                                "id": "/subscriptions/6628b4ea-c2aa-41a7-bb87-1998fb75fb46/providers/Microsoft.Web/locations/northeurope/managedApis/sftpwithssh"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_DNBE_CreateEstateContactsUpdatesFiles_Production_name')]",
            "location": "northeurope",
            "tags": {
                "contactEmail": "XXXXXXXXXXXXXX",
                "costAllocation": "XXXXXXXXXXXXXX",
                "environment": "Production"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "method": "POST",
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "estateId": {
                                                "type": "string"
                                            },
                                            "update": {
                                                "properties": {
                                                    "buyers": {
                                                        "items": {
                                                            "properties": {
                                                                "address": {
                                                                    "type": "string"
                                                                },
                                                                "changedDate": {
                                                                    "type": "string"
                                                                },
                                                                "city": {
                                                                    "type": "string"
                                                                },
                                                                "companyName": {},
                                                                "consents": {
                                                                    "type": "array"
                                                                },
                                                                "contactId": {
                                                                    "type": "string"
                                                                },
                                                                "contactType": {
                                                                    "type": "integer"
                                                                },
                                                                "customerReview": {},
                                                                "departmentId": {
                                                                    "type": "integer"
                                                                },
                                                                "email": {},
                                                                "firstName": {
                                                                    "type": "string"
                                                                },
                                                                "lastName": {
                                                                    "type": "string"
                                                                },
                                                                "mobilePhone": {
                                                                    "type": "string"
                                                                },
                                                                "organisationNumber": {},
                                                                "postalAddress": {
                                                                    "type": "string"
                                                                },
                                                                "postalCode": {
                                                                    "type": "string"
                                                                },
                                                                "privatePhone": {},
                                                                "socialSecurity": {},
                                                                "workPhone": {}
                                                            },
                                                            "required": [
                                                                "contactId",
                                                                "departmentId",
                                                                "contactType",
                                                                "companyName",
                                                                "organisationNumber",
                                                                "firstName",
                                                                "lastName",
                                                                "mobilePhone",
                                                                "privatePhone",
                                                                "workPhone",
                                                                "email",
                                                                "socialSecurity",
                                                                "address",
                                                                "postalAddress",
                                                                "postalCode",
                                                                "city",
                                                                "consents",
                                                                "customerReview",
                                                                "changedDate"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "proxies": {
                                                        "items": {
                                                            "properties": {
                                                                "address": {
                                                                    "type": "string"
                                                                },
                                                                "changedDate": {
                                                                    "type": "string"
                                                                },
                                                                "city": {
                                                                    "type": "string"
                                                                },
                                                                "companyName": {},
                                                                "consents": {
                                                                    "type": "array"
                                                                },
                                                                "contactId": {
                                                                    "type": "string"
                                                                },
                                                                "contactType": {
                                                                    "type": "integer"
                                                                },
                                                                "customerReview": {},
                                                                "departmentId": {
                                                                    "type": "integer"
                                                                },
                                                                "email": {},
                                                                "firstName": {
                                                                    "type": "string"
                                                                },
                                                                "lastName": {
                                                                    "type": "string"
                                                                },
                                                                "mobilePhone": {
                                                                    "type": "string"
                                                                },
                                                                "organisationNumber": {},
                                                                "postalAddress": {
                                                                    "type": "string"
                                                                },
                                                                "postalCode": {
                                                                    "type": "string"
                                                                },
                                                                "privatePhone": {},
                                                                "socialSecurity": {},
                                                                "workPhone": {}
                                                            },
                                                            "required": [
                                                                "contactId",
                                                                "departmentId",
                                                                "contactType",
                                                                "companyName",
                                                                "organisationNumber",
                                                                "firstName",
                                                                "lastName",
                                                                "mobilePhone",
                                                                "privatePhone",
                                                                "workPhone",
                                                                "email",
                                                                "socialSecurity",
                                                                "address",
                                                                "postalAddress",
                                                                "postalCode",
                                                                "city",
                                                                "consents",
                                                                "customerReview",
                                                                "changedDate"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "sellers": {
                                                        "items": {
                                                            "properties": {
                                                                "address": {
                                                                    "type": "string"
                                                                },
                                                                "changedDate": {
                                                                    "type": "string"
                                                                },
                                                                "city": {
                                                                    "type": "string"
                                                                },
                                                                "companyName": {},
                                                                "consents": {
                                                                    "type": "array"
                                                                },
                                                                "contactId": {
                                                                    "type": "string"
                                                                },
                                                                "contactType": {
                                                                    "type": "integer"
                                                                },
                                                                "customerReview": {},
                                                                "departmentId": {
                                                                    "type": "integer"
                                                                },
                                                                "email": {},
                                                                "firstName": {
                                                                    "type": "string"
                                                                },
                                                                "lastName": {
                                                                    "type": "string"
                                                                },
                                                                "mobilePhone": {
                                                                    "type": "string"
                                                                },
                                                                "organisationNumber": {},
                                                                "postalAddress": {
                                                                    "type": "string"
                                                                },
                                                                "postalCode": {
                                                                    "type": "string"
                                                                },
                                                                "privatePhone": {},
                                                                "socialSecurity": {},
                                                                "workPhone": {}
                                                            },
                                                            "required": [
                                                                "contactId",
                                                                "departmentId",
                                                                "contactType",
                                                                "companyName",
                                                                "organisationNumber",
                                                                "firstName",
                                                                "lastName",
                                                                "mobilePhone",
                                                                "privatePhone",
                                                                "workPhone",
                                                                "email",
                                                                "socialSecurity",
                                                                "address",
                                                                "postalAddress",
                                                                "postalCode",
                                                                "city",
                                                                "consents",
                                                                "customerReview",
                                                                "changedDate"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "required": [
                                            "estateId",
                                            "update"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "actions": {
                        "Condition_Buyers": {
                            "actions": {
                                "Create_CSV_table_Buyers": {
                                    "runAfter": {
                                        "Parse_JSON_Buyers": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Table",
                                    "inputs": {
                                        "columns": [
                                            {
                                                "header": "estateId",
                                                "value": "@item()['estateId']"
                                            },
                                            {
                                                "header": "contactId",
                                                "value": "@item()?['object']?['contactId']"
                                            },
                                            {
                                                "header": "departmentId",
                                                "value": "@item()?['object']?['departmentId']"
                                            },
                                            {
                                                "header": "contactType",
                                                "value": "@item()?['object']?['contactType']"
                                            },
                                            {
                                                "header": "companyName",
                                                "value": "@item()?['object']?['companyName']"
                                            },
                                            {
                                                "header": "organisationNumber",
                                                "value": "@item()?['object']?['organisationNumber']"
                                            },
                                            {
                                                "header": "firstName",
                                                "value": "@item()?['object']?['firstName']"
                                            },
                                            {
                                                "header": "lastName",
                                                "value": "@item()?['object']?['lastName']"
                                            },
                                            {
                                                "header": "mobilePhone",
                                                "value": "@item()?['object']?['mobilePhone']"
                                            },
                                            {
                                                "header": "privatePhone",
                                                "value": "@item()?['object']?['privatePhone']"
                                            },
                                            {
                                                "header": "workPhone",
                                                "value": "@item()?['object']?['workPhone']"
                                            },
                                            {
                                                "header": "email",
                                                "value": "@item()?['object']?['email']"
                                            },
                                            {
                                                "header": "socialSecurity",
                                                "value": "@item()?['object']?['socialSecurity']"
                                            },
                                            {
                                                "header": "address",
                                                "value": "@item()?['object']?['address']"
                                            },
                                            {
                                                "header": "postalAddress",
                                                "value": "@item()?['object']?['postalAddress']"
                                            },
                                            {
                                                "header": "postalCode",
                                                "value": "@item()?['object']?['postalCode']"
                                            },
                                            {
                                                "header": "city",
                                                "value": "@item()?['object']?['city']"
                                            },
                                            {
                                                "header": "customerReview",
                                                "value": "@item()?['object']?['customerReview']"
                                            },
                                            {
                                                "header": "changedDate",
                                                "value": "@item()?['object']?['changedDate']"
                                            }
                                        ],
                                        "format": "CSV",
                                        "from": "@body('Parse_JSON_Buyers')"
                                    }
                                },
                                "Create_blob_Buyers": {
                                    "runAfter": {
                                        "Create_CSV_table_Buyers": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": "@body('Create_CSV_table_Buyers')",
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azureblob']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/datasets/default/files",
                                        "queries": {
                                            "folderPath": "/adobepushfiles",
                                            "name": "I008_Next_ACS_EstateContactsBuyers_EstateBuyers_@{utcNow()}.csv",
                                            "queryParametersSingleEncoded": true
                                        }
                                    },
                                    "runtimeConfiguration": {
                                        "contentTransfer": {
                                            "transferMode": "Chunked"
                                        }
                                    }
                                },
                                "Create_file_Buyers": {
                                    "runAfter": {
                                        "Create_blob_Buyers": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": "@body('Create_CSV_table_Buyers')",
                                        "headers": {
                                            "ReadFileMetadataFromServer": true
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['sftpwithssh']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/datasets/default/files",
                                        "queries": {
                                            "folderPath": "/incoming/AzureFiles",
                                            "name": "I008_Next_ACS_EstateContactsBuyers_EstateBuyers_@{utcNow()}.csv",
                                            "queryParametersSingleEncoded": true
                                        }
                                    },
                                    "runtimeConfiguration": {
                                        "contentTransfer": {
                                            "transferMode": "Chunked"
                                        }
                                    }
                                },
                                "Parse_JSON_Buyers": {
                                    "runAfter": {},
                                    "type": "ParseJson",
                                    "inputs": {
                                        "content": "@variables('Buyers')",
                                        "schema": {
                                            "items": {
                                                "properties": {
                                                    "estateId": {
                                                        "type": "string"
                                                    },
                                                    "object": {
                                                        "properties": {
                                                            "address": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "changedDate": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "city": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "companyName": {},
                                                            "consents": {
                                                                "type": "array"
                                                            },
                                                            "contactId": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "contactType": {
                                                                "type": [
                                                                    "integer",
                                                                    "null"
                                                                ]
                                                            },
                                                            "customerReview": {},
                                                            "departmentId": {
                                                                "type": [
                                                                    "integer",
                                                                    "null"
                                                                ]
                                                            },
                                                            "email": {},
                                                            "firstName": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "lastName": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "mobilePhone": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "organisationNumber": {},
                                                            "postalAddress": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "postalCode": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "privatePhone": {},
                                                            "socialSecurity": {},
                                                            "workPhone": {}
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [
                                                    "estateId",
                                                    "object"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "For_each_EstateContactsUpdate": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "greater": [
                                            "@length(variables('Buyers'))",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Condition_Proxies": {
                            "actions": {
                                "Create_CSV_table_Proxies": {
                                    "runAfter": {
                                        "Parse_JSON_Proxies": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Table",
                                    "inputs": {
                                        "columns": [
                                            {
                                                "header": "estateId",
                                                "value": "@item()['estateId']"
                                            },
                                            {
                                                "header": "contactId",
                                                "value": "@item()?['object']?['contactId']"
                                            },
                                            {
                                                "header": "proxyContactId",
                                                "value": "@item()?['object']?['proxy']?['contactId']"
                                            },
                                            {
                                                "header": "departmentId",
                                                "value": "@item()?['object']?['proxy']?['departmentId']"
                                            },
                                            {
                                                "header": "contactType",
                                                "value": "@item()?['object']?['proxy']?['contactType']"
                                            },
                                            {
                                                "header": "companyName",
                                                "value": "@item()?['object']?['proxy']?['companyName']"
                                            },
                                            {
                                                "header": "organisationNumber",
                                                "value": "@item()?['object']?['proxy']?['organisationNumber']"
                                            },
                                            {
                                                "header": "firstName",
                                                "value": "@item()?['object']?['proxy']?['firstName']"
                                            },
                                            {
                                                "header": "lastName",
                                                "value": "@item()?['object']?['proxy']?['lastName']"
                                            },
                                            {
                                                "header": "mobilePhone",
                                                "value": "@item()?['object']?['proxy']?['mobilePhone']"
                                            },
                                            {
                                                "header": "privatePhone",
                                                "value": "@item()?['object']?['proxy']?['privatePhone']"
                                            },
                                            {
                                                "header": "workPhone",
                                                "value": "@item()?['object']?['proxy']?['workPhone']"
                                            },
                                            {
                                                "header": "email",
                                                "value": "@item()?['object']?['proxy']?['email']"
                                            },
                                            {
                                                "header": "socialSecurity",
                                                "value": "@item()?['object']?['proxy']?['socialSecurity']"
                                            },
                                            {
                                                "header": "address",
                                                "value": "@item()?['object']?['proxy']?['address']"
                                            },
                                            {
                                                "header": "postalAddress",
                                                "value": "@item()?['object']?['proxy']?['postalAddress']"
                                            },
                                            {
                                                "header": "postalCode",
                                                "value": "@item()?['object']?['proxy']?['postalCode']"
                                            },
                                            {
                                                "header": "city",
                                                "value": "@item()?['object']?['proxy']?['city']"
                                            },
                                            {
                                                "header": "customerReview",
                                                "value": "@item()?['object']?['proxy']?['customerReview']"
                                            },
                                            {
                                                "header": "changedDate",
                                                "value": "@item()?['object']?['proxy']?['changedDate']"
                                            }
                                        ],
                                        "format": "CSV",
                                        "from": "@body('Parse_JSON_Proxies')"
                                    }
                                },
                                "Create_blob_Proxies": {
                                    "runAfter": {
                                        "Create_CSV_table_Proxies": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": "@body('Create_CSV_table_Proxies')",
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azureblob']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/datasets/default/files",
                                        "queries": {
                                            "folderPath": "/adobepushfiles",
                                            "name": "I009_Next_ACS_EstateContactsProxies_EstateProxies_@{utcNow()}.csv",
                                            "queryParametersSingleEncoded": true
                                        }
                                    },
                                    "runtimeConfiguration": {
                                        "contentTransfer": {
                                            "transferMode": "Chunked"
                                        }
                                    }
                                },
                                "Create_file_Proxies": {
                                    "runAfter": {
                                        "Create_blob_Proxies": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": "@body('Create_CSV_table_Proxies')",
                                        "headers": {
                                            "ReadFileMetadataFromServer": true
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['sftpwithssh']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/datasets/default/files",
                                        "queries": {
                                            "folderPath": "/incoming/AzureFiles",
                                            "name": "I009_Next_ACS_EstateContactsProxies_EstateProxies_@{utcNow()}.csv",
                                            "queryParametersSingleEncoded": true
                                        }
                                    },
                                    "runtimeConfiguration": {
                                        "contentTransfer": {
                                            "transferMode": "Chunked"
                                        }
                                    }
                                },
                                "Parse_JSON_Proxies": {
                                    "runAfter": {},
                                    "type": "ParseJson",
                                    "inputs": {
                                        "content": "@variables('Proxies')",
                                        "schema": {
                                            "items": {
                                                "properties": {
                                                    "estateId": {
                                                        "type": "string"
                                                    },
                                                    "object": {
                                                        "properties": {
                                                            "address": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "changedDate": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "city": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "companyName": {},
                                                            "consents": {
                                                                "type": "array"
                                                            },
                                                            "contactId": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "contactType": {
                                                                "type": [
                                                                    "integer",
                                                                    "null"
                                                                ]
                                                            },
                                                            "customerReview": {},
                                                            "departmentId": {
                                                                "type": [
                                                                    "integer",
                                                                    "null"
                                                                ]
                                                            },
                                                            "email": {},
                                                            "firstName": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "lastName": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "mobilePhone": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "organisationNumber": {},
                                                            "postalAddress": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "postalCode": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "privatePhone": {},
                                                            "socialSecurity": {},
                                                            "workPhone": {}
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [
                                                    "estateId",
                                                    "object"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "For_each_EstateContactsUpdate": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "greater": [
                                            "@length(variables('Proxies'))",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Condition_Sellers": {
                            "actions": {
                                "Create_CSV_table_Sellers": {
                                    "runAfter": {
                                        "Parse_JSON_Sellers": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Table",
                                    "inputs": {
                                        "columns": [
                                            {
                                                "header": "estateId",
                                                "value": "@item()['estateId']"
                                            },
                                            {
                                                "header": "contactId",
                                                "value": "@item()?['object']?['contactId']"
                                            },
                                            {
                                                "header": "departmentId",
                                                "value": "@item()?['object']?['departmentId']"
                                            },
                                            {
                                                "header": "contactType",
                                                "value": "@item()?['object']?['contactType']"
                                            },
                                            {
                                                "header": "companyName",
                                                "value": "@item()?['object']?['companyName']"
                                            },
                                            {
                                                "header": "organisationNumber",
                                                "value": "@item()?['object']?['organisationNumber']"
                                            },
                                            {
                                                "header": "firstName",
                                                "value": "@item()?['object']?['firstName']"
                                            },
                                            {
                                                "header": "lastName",
                                                "value": "@item()?['object']?['lastName']"
                                            },
                                            {
                                                "header": "mobilePhone",
                                                "value": "@item()?['object']?['mobilePhone']"
                                            },
                                            {
                                                "header": "privatePhone",
                                                "value": "@item()?['object']?['privatePhone']"
                                            },
                                            {
                                                "header": "workPhone",
                                                "value": "@item()?['object']?['workPhone']"
                                            },
                                            {
                                                "header": "email",
                                                "value": "@item()?['object']?['email']"
                                            },
                                            {
                                                "header": "socialSecurity",
                                                "value": "@item()?['object']?['socialSecurity']"
                                            },
                                            {
                                                "header": "address",
                                                "value": "@item()?['object']?['address']"
                                            },
                                            {
                                                "header": "postalAddress",
                                                "value": "@item()?['object']?['postalAddress']"
                                            },
                                            {
                                                "header": "postalCode",
                                                "value": "@item()?['object']?['postalCode']"
                                            },
                                            {
                                                "header": "city",
                                                "value": "@item()?['object']?['city']"
                                            },
                                            {
                                                "header": "customerReview",
                                                "value": "@item()?['object']?['customerReview']"
                                            },
                                            {
                                                "header": "changedDate",
                                                "value": "@item()?['object']?['changedDate']"
                                            }
                                        ],
                                        "format": "CSV",
                                        "from": "@body('Parse_JSON_Sellers')"
                                    }
                                },
                                "Create_blob_Sellers": {
                                    "runAfter": {
                                        "Create_CSV_table_Sellers": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": "@body('Create_CSV_table_Sellers')",
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azureblob']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/datasets/default/files",
                                        "queries": {
                                            "folderPath": "/adobepushfiles",
                                            "name": "I007_Next_ACS_EstateContactsSellers_EstateSellers_@{utcNow()}.csv",
                                            "queryParametersSingleEncoded": true
                                        }
                                    },
                                    "runtimeConfiguration": {
                                        "contentTransfer": {
                                            "transferMode": "Chunked"
                                        }
                                    }
                                },
                                "Create_file_Sellers": {
                                    "runAfter": {
                                        "Create_blob_Sellers": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": "@body('Create_CSV_table_Sellers')",
                                        "headers": {
                                            "ReadFileMetadataFromServer": true
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['sftpwithssh']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/datasets/default/files",
                                        "queries": {
                                            "folderPath": "/incoming/AzureFiles",
                                            "name": "I007_Next_ACS_EstateContactsSellers_EstateSellers_@{utcNow()}.csv",
                                            "queryParametersSingleEncoded": true
                                        }
                                    },
                                    "runtimeConfiguration": {
                                        "contentTransfer": {
                                            "transferMode": "Chunked"
                                        }
                                    }
                                },
                                "Parse_JSON_Sellers": {
                                    "runAfter": {},
                                    "type": "ParseJson",
                                    "inputs": {
                                        "content": "@variables('Sellers')",
                                        "schema": {
                                            "items": {
                                                "properties": {
                                                    "estateId": {
                                                        "type": "string"
                                                    },
                                                    "object": {
                                                        "properties": {
                                                            "address": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "changedDate": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "city": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "companyName": {},
                                                            "consents": {
                                                                "type": "array"
                                                            },
                                                            "contactId": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "contactType": {
                                                                "type": [
                                                                    "integer",
                                                                    "null"
                                                                ]
                                                            },
                                                            "customerReview": {},
                                                            "departmentId": {
                                                                "type": [
                                                                    "integer",
                                                                    "null"
                                                                ]
                                                            },
                                                            "email": {},
                                                            "firstName": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "lastName": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "mobilePhone": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "organisationNumber": {},
                                                            "postalAddress": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "postalCode": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "privatePhone": {},
                                                            "socialSecurity": {},
                                                            "workPhone": {}
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [
                                                    "estateId",
                                                    "object"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "For_each_EstateContactsUpdate": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "greater": [
                                            "@length(variables('Sellers'))",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "For_each_EstateContactsUpdate": {
                            "foreach": "@triggerBody()",
                            "actions": {
                                "For_each_Buyer": {
                                    "foreach": "@items('For_each_EstateContactsUpdate')?['update']?['buyers']",
                                    "actions": {
                                        "Append_to_array_variable_Buyers": {
                                            "runAfter": {},
                                            "type": "AppendToArrayVariable",
                                            "inputs": {
                                                "name": "Buyers",
                                                "value": {
                                                    "estateId": "@items('For_each_EstateContactsUpdate')?['estateId']",
                                                    "object": "@items('For_each_Buyer')"
                                                }
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "For_each_Seller": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Foreach",
                                    "runtimeConfiguration": {
                                        "concurrency": {
                                            "repetitions": 1
                                        }
                                    }
                                },
                                "For_each_Proxy": {
                                    "foreach": "@items('For_each_EstateContactsUpdate')?['update']?['proxies']",
                                    "actions": {
                                        "Append_to_array_variable_Proxies": {
                                            "runAfter": {},
                                            "type": "AppendToArrayVariable",
                                            "inputs": {
                                                "name": "Proxies",
                                                "value": {
                                                    "estateId": "@items('For_each_EstateContactsUpdate')?['estateId']",
                                                    "object": "@items('For_each_Proxy')"
                                                }
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "For_each_Buyer": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Foreach",
                                    "runtimeConfiguration": {
                                        "concurrency": {
                                            "repetitions": 1
                                        }
                                    }
                                },
                                "For_each_Seller": {
                                    "foreach": "@items('For_each_EstateContactsUpdate')?['update']?['sellers']",
                                    "actions": {
                                        "Append_to_array_variable_Sellers": {
                                            "runAfter": {},
                                            "type": "AppendToArrayVariable",
                                            "inputs": {
                                                "name": "Sellers",
                                                "value": {
                                                    "estateId": "@items('For_each_EstateContactsUpdate')?['estateId']",
                                                    "object": "@items('For_each_Seller')"
                                                }
                                            }
                                        }
                                    },
                                    "runAfter": {},
                                    "type": "Foreach",
                                    "runtimeConfiguration": {
                                        "concurrency": {
                                            "repetitions": 1
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "Initialize_variable_Proxies": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach",
                            "runtimeConfiguration": {
                                "concurrency": {
                                    "repetitions": 1
                                }
                            }
                        },
                        "Initialize_variable_Buyers": {
                            "runAfter": {
                                "Initialize_variable_Sellers": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Buyers",
                                        "type": "array",
                                        "value": []
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_Proxies": {
                            "runAfter": {
                                "Initialize_variable_Buyers": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Proxies",
                                        "type": "array",
                                        "value": []
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_Sellers": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Sellers",
                                        "type": "array",
                                        "value": []
                                    }
                                ]
                            }
                        },
                        "Response": {
                            "runAfter": {
                                "Condition_Buyers": [
                                    "Succeeded"
                                ],
                                "Condition_Proxies": [
                                    "Succeeded"
                                ],
                                "Condition_Sellers": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Response",
                            "kind": "Http",
                            "inputs": {
                                "statusCode": 200
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azureblob": {
                                "connectionId": "[parameters('connections_azureblobproductionconnection_externalid')]",
                                "connectionName": "azureblobproductionconnection",
                                "id": "/subscriptions/6628b4ea-c2aa-41a7-bb87-1998fb75fb46/providers/Microsoft.Web/locations/northeurope/managedApis/azureblob"
                            },
                            "sftpwithssh": {
                                "connectionId": "[parameters('connections_sftpwithsshproductionconnection_externalid')]",
                                "connectionName": "sftpwithsshproductionconnection",
                                "id": "/subscriptions/6628b4ea-c2aa-41a7-bb87-1998fb75fb46/providers/Microsoft.Web/locations/northeurope/managedApis/sftpwithssh"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_DNBE_CreateEstatesChecklistUpdatesFile_Production_name')]",
            "location": "northeurope",
            "tags": {
                "CostAllocation": "XXXXXXXXXXXXXX"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "estateId": {
                                                "type": "string"
                                            },
                                            "update": {
                                                "properties": {
                                                    "checkListItems": {
                                                        "items": {
                                                            "properties": {
                                                                "changedBy": {
                                                                    "type": "string"
                                                                },
                                                                "changedDate": {
                                                                    "type": "string"
                                                                },
                                                                "tags": {
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "value": {
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "required": [
                                                                "tags",
                                                                "value",
                                                                "changedBy",
                                                                "changedDate"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "lastChanged": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "required": [
                                            "estateId",
                                            "update"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "actions": {
                        "Create_CSV_table": {
                            "runAfter": {
                                "For_each_Estate": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Table",
                            "inputs": {
                                "format": "CSV",
                                "from": "@variables('ChecklistArray')"
                            }
                        },
                        "Create_blob_(V2)": {
                            "runAfter": {
                                "Create_CSV_table": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "@body('Create_CSV_table')",
                                "headers": {
                                    "ReadFileMetadataFromServer": true
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('AccountNameFromSettings'))}/files",
                                "queries": {
                                    "folderPath": "/adobepushfiles",
                                    "name": "I0025_Next_ACS_Estates_EstateCheckList_@{utcNow()}.csv",
                                    "queryParametersSingleEncoded": true
                                }
                            },
                            "runtimeConfiguration": {
                                "contentTransfer": {
                                    "transferMode": "Chunked"
                                }
                            }
                        },
                        "Create_file": {
                            "runAfter": {
                                "Create_blob_(V2)": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "@body('Create_CSV_table')",
                                "headers": {
                                    "ReadFileMetadataFromServer": true
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['sftpwithssh']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/datasets/default/files",
                                "queries": {
                                    "folderPath": "/incoming/AzureFiles",
                                    "name": "I0025_Next_ACS_Estates_EstateCheckList_@{utcNow()}.csv",
                                    "queryParametersSingleEncoded": true
                                }
                            },
                            "runtimeConfiguration": {
                                "contentTransfer": {
                                    "transferMode": "Chunked"
                                }
                            }
                        },
                        "For_each_Estate": {
                            "foreach": "@triggerBody()",
                            "actions": {
                                "For_each_Checklist": {
                                    "foreach": "@items('For_each_Estate')?['update']?['checkListItems']",
                                    "actions": {
                                        "Append_to_ChecklistArray": {
                                            "runAfter": {},
                                            "type": "AppendToArrayVariable",
                                            "inputs": {
                                                "name": "ChecklistArray",
                                                "value": {
                                                    "ChangedDate": "@items('For_each_Checklist')?['changedDate']",
                                                    "EstateID": "@items('For_each_Estate')['estateId']",
                                                    "TagName": "@items('For_each_Checklist')?['tags'][0]",
                                                    "TagValue": "@items('For_each_Checklist')?['value']"
                                                }
                                            }
                                        }
                                    },
                                    "runAfter": {},
                                    "type": "Foreach"
                                }
                            },
                            "runAfter": {
                                "Initialize_ChecklistArray": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach",
                            "runtimeConfiguration": {
                                "concurrency": {
                                    "repetitions": 1
                                }
                            }
                        },
                        "Initialize_ChecklistArray": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "ChecklistArray",
                                        "type": "array",
                                        "value": []
                                    }
                                ]
                            }
                        },
                        "Response": {
                            "runAfter": {
                                "Create_file": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Response",
                            "kind": "Http",
                            "inputs": {
                                "statusCode": 200
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azureblob": {
                                "connectionId": "[parameters('connections_azureblobproductionconnection_externalid')]",
                                "connectionName": "azureblobproductionconnection",
                                "id": "/subscriptions/bc58fa9e-b6f0-47bf-a58f-f8b9f944407e/providers/Microsoft.Web/locations/northeurope/managedApis/azureblob"
                            },
                            "sftpwithssh": {
                                "connectionId": "[parameters('connections_sftpwithsshproductionconnection_externalid')]",
                                "connectionName": "sftpwithsshproductionconnection",
                                "id": "/subscriptions/bc58fa9e-b6f0-47bf-a58f-f8b9f944407e/providers/Microsoft.Web/locations/northeurope/managedApis/sftpwithssh"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_DNBE_CreateOrdersUpdatesFile_Production_name')]",
            "location": "northeurope",
            "tags": {
                "environment": "Production",
                "costAllocation": "XXXXXXXXXXXXXX",
                "contactEmail": "XXXXXXXXXXXXXX"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "method": "POST",
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "changedDate": {
                                                "type": "string"
                                            },
                                            "employeeId": {
                                                "type": "string"
                                            },
                                            "estateId": {
                                                "type": "string"
                                            },
                                            "estateStatus": {
                                                "type": "integer"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "orderId": {
                                                "type": "string"
                                            },
                                            "orderPlaced": {
                                                "type": "string"
                                            },
                                            "orderStatus": {
                                                "type": "integer"
                                            },
                                            "productId": {
                                                "type": "string"
                                            },
                                            "productName": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "actions": {
                        "Create_CSV_table_OrdersUpdates": {
                            "runAfter": {},
                            "type": "Table",
                            "inputs": {
                                "format": "CSV",
                                "from": "@triggerBody()"
                            }
                        },
                        "Create_blob": {
                            "runAfter": {
                                "Create_CSV_table_OrdersUpdates": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "@body('Create_CSV_table_OrdersUpdates')",
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/datasets/default/files",
                                "queries": {
                                    "folderPath": "/adobepushfiles",
                                    "name": "I004_Next_ACS_orders_orders_@{utcNow()}.csv",
                                    "queryParametersSingleEncoded": true
                                }
                            },
                            "runtimeConfiguration": {
                                "contentTransfer": {
                                    "transferMode": "Chunked"
                                }
                            }
                        },
                        "Create_file": {
                            "runAfter": {
                                "Create_blob": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "@body('Create_CSV_table_OrdersUpdates')",
                                "headers": {
                                    "ReadFileMetadataFromServer": true
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['sftpwithssh']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/datasets/default/files",
                                "queries": {
                                    "folderPath": "/incoming/AzureFiles",
                                    "name": "I004_Next_ACS_orders_orders_@{utcNow()}.csv",
                                    "queryParametersSingleEncoded": true
                                }
                            },
                            "runtimeConfiguration": {
                                "contentTransfer": {
                                    "transferMode": "Chunked"
                                }
                            }
                        },
                        "Response": {
                            "runAfter": {
                                "Create_file": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Response",
                            "kind": "Http",
                            "inputs": {
                                "body": {
                                    "fileCreatedName": "@body('Create_file')?['Name']",
                                    "fileCreatedPath": "@body('Create_file')?['Path']",
                                    "fileCreatedSize": "@body('Create_file')?['Size']"
                                },
                                "statusCode": 200
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azureblob": {
                                "connectionId": "[parameters('connections_azureblobproductionconnection_externalid')]",
                                "connectionName": "azureblob",
                                "id": "/subscriptions/6628b4ea-c2aa-41a7-bb87-1998fb75fb46/providers/Microsoft.Web/locations/northeurope/managedApis/azureblob"
                            },
                            "sftpwithssh": {
                                "connectionId": "[parameters('connections_sftpwithsshproductionconnection_externalid')]",
                                "connectionName": "sftpwithssh",
                                "id": "/subscriptions/6628b4ea-c2aa-41a7-bb87-1998fb75fb46/providers/Microsoft.Web/locations/northeurope/managedApis/sftpwithssh"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_DNBE_CreateRemoveObjectsFile_Production_name')]",
            "location": "northeurope",
            "tags": {
                "environment": "Production",
                "costAllocation": "XXXXXXXXXXXXXX",
                "contactEmail": "XXXXXXXXXXXXXX"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "method": "POST",
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "objectId": {
                                                "type": "string"
                                            },
                                            "objectType": {
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "objectId",
                                            "objectType"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "actions": {
                        "Create_CSV_table_RemoveObjects": {
                            "runAfter": {},
                            "type": "Table",
                            "inputs": {
                                "format": "CSV",
                                "from": "@triggerBody()"
                            }
                        },
                        "Create_blob": {
                            "runAfter": {
                                "Create_CSV_table_RemoveObjects": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "@body('Create_CSV_table_RemoveObjects')",
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/datasets/default/files",
                                "queries": {
                                    "folderPath": "/adobepushfiles",
                                    "name": "I010_Next_ACS_removeObjects_@{utcNow()}.csv",
                                    "queryParametersSingleEncoded": true
                                }
                            },
                            "runtimeConfiguration": {
                                "contentTransfer": {
                                    "transferMode": "Chunked"
                                }
                            }
                        },
                        "Create_file": {
                            "runAfter": {
                                "Create_blob": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "@body('Create_CSV_table_RemoveObjects')",
                                "headers": {
                                    "ReadFileMetadataFromServer": true
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['sftpwithssh']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/datasets/default/files",
                                "queries": {
                                    "folderPath": "/incoming/AzureFiles",
                                    "name": "I010_Next_ACS_removeObjects_@{utcNow()}.csv",
                                    "queryParametersSingleEncoded": true
                                }
                            },
                            "runtimeConfiguration": {
                                "contentTransfer": {
                                    "transferMode": "Chunked"
                                }
                            }
                        },
                        "Response": {
                            "runAfter": {
                                "Create_file": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Response",
                            "kind": "Http",
                            "inputs": {
                                "body": {
                                    "fileCreatedName": "@body('Create_file')?['Name']",
                                    "fileCreatedPath": "@body('Create_file')?['Path']",
                                    "fileCreatedSize": "@body('Create_file')?['Size']"
                                },
                                "statusCode": 200
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azureblob": {
                                "connectionId": "[parameters('connections_azureblobproductionconnection_externalid')]",
                                "connectionName": "azureblob",
                                "id": "/subscriptions/6628b4ea-c2aa-41a7-bb87-1998fb75fb46/providers/Microsoft.Web/locations/northeurope/managedApis/azureblob"
                            },
                            "sftpwithssh": {
                                "connectionId": "[parameters('connections_sftpwithsshproductionconnection_externalid')]",
                                "connectionName": "sftpwithssh",
                                "id": "/subscriptions/6628b4ea-c2aa-41a7-bb87-1998fb75fb46/providers/Microsoft.Web/locations/northeurope/managedApis/sftpwithssh"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_DNBE_CreateSearchProfileUpdatesFile_Production_name')]",
            "location": "northeurope",
            "tags": {
                "contactEmail": "XXXXXXXXXXXXXX",
                "costAllocation": "XXXXXXXXXXXXXX",
                "environment": "Production"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "method": "POST",
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "assignmentTypes": {
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "balcony": {
                                                "type": "integer"
                                            },
                                            "bathsMin": {
                                                "type": "integer"
                                            },
                                            "contactId": {
                                                "type": "string"
                                            },
                                            "createdBy": {
                                                "type": "string"
                                            },
                                            "districtIds": {
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "ended": {
                                                "type": "boolean"
                                            },
                                            "estateTypes": {
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "expire": {
                                                "type": "string"
                                            },
                                            "floorsMax": {
                                                "type": "integer"
                                            },
                                            "floorsMin": {
                                                "type": "integer"
                                            },
                                            "garage": {
                                                "type": "integer"
                                            },
                                            "lift": {
                                                "type": "integer"
                                            },
                                            "modified": {
                                                "type": "string"
                                            },
                                            "municipalityIds": {
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "plotSizeMax": {
                                                "type": "integer"
                                            },
                                            "plotSizeMin": {
                                                "type": "integer"
                                            },
                                            "polygons": {
                                                "items": {
                                                    "items": {
                                                        "properties": {
                                                            "latitude": {
                                                                "type": "number"
                                                            },
                                                            "longitude": {
                                                                "type": "number"
                                                            }
                                                        },
                                                        "required": [
                                                            "latitude",
                                                            "longitude"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "type": "array"
                                            },
                                            "postCodes": {
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "priceMax": {
                                                "type": "number"
                                            },
                                            "priceMin": {
                                                "type": "number"
                                            },
                                            "promMax": {
                                                "type": "number"
                                            },
                                            "promMin": {
                                                "type": "number"
                                            },
                                            "roomsMax": {
                                                "type": "integer"
                                            },
                                            "roomsMin": {
                                                "type": "integer"
                                            },
                                            "searchProfileId": {
                                                "type": "string"
                                            },
                                            "sleepsMin": {
                                                "type": "integer"
                                            },
                                            "stateIds": {
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "type": {
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "contactId",
                                            "searchProfileId",
                                            "modified",
                                            "createdBy",
                                            "ended",
                                            "type",
                                            "expire",
                                            "assignmentTypes",
                                            "estateTypes",
                                            "districtIds",
                                            "postCodes",
                                            "municipalityIds",
                                            "stateIds",
                                            "polygons",
                                            "priceMax",
                                            "priceMin",
                                            "promMax",
                                            "promMin",
                                            "plotSizeMax",
                                            "plotSizeMin",
                                            "roomsMax",
                                            "roomsMin",
                                            "floorsMax",
                                            "floorsMin",
                                            "sleepsMin",
                                            "bathsMin",
                                            "garage",
                                            "lift",
                                            "balcony"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "actions": {
                        "Condition_AssignmentTypes": {
                            "actions": {
                                "Create_CSV_table_AssignmentTypes": {
                                    "runAfter": {},
                                    "type": "Table",
                                    "inputs": {
                                        "format": "CSV",
                                        "from": "@variables('AssignmentTypes')"
                                    }
                                },
                                "Create_blob_AssignmentTypes": {
                                    "runAfter": {
                                        "Create_CSV_table_AssignmentTypes": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": "@body('Create_CSV_table_AssignmentTypes')",
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azureblob']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/datasets/default/files",
                                        "queries": {
                                            "folderPath": "/adobepushfiles",
                                            "name": "I0011_Next_ACS_searchProfilesAssignmentTypes_searchProfilesAssignmentTypes_@{utcNow()}.csv",
                                            "queryParametersSingleEncoded": true
                                        }
                                    },
                                    "runtimeConfiguration": {
                                        "contentTransfer": {
                                            "transferMode": "Chunked"
                                        }
                                    }
                                },
                                "Create_file_AssignmentTypes": {
                                    "runAfter": {
                                        "Create_blob_AssignmentTypes": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": "@body('Create_CSV_table_AssignmentTypes')",
                                        "headers": {
                                            "ReadFileMetadataFromServer": true
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['sftpwithssh']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/datasets/default/files",
                                        "queries": {
                                            "folderPath": "/incoming/AzureFiles",
                                            "name": "I0011_Next_ACS_searchProfilesAssignmentTypes_searchProfilesAssignmentTypes_@{utcNow()}.csv",
                                            "queryParametersSingleEncoded": true
                                        }
                                    },
                                    "runtimeConfiguration": {
                                        "contentTransfer": {
                                            "transferMode": "Chunked"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "For_each_SearchProfileUpdate": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "greater": [
                                            "@length(variables('AssignmentTypes'))",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Condition_DistrictIds": {
                            "actions": {
                                "Create_CSV_table_DistrictIds": {
                                    "runAfter": {},
                                    "type": "Table",
                                    "inputs": {
                                        "format": "CSV",
                                        "from": "@variables('DisctrictIds')"
                                    }
                                },
                                "Create_blob_DistrictIds": {
                                    "runAfter": {
                                        "Create_CSV_table_DistrictIds": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": "@body('Create_CSV_table_DistrictIds')",
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azureblob']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/datasets/default/files",
                                        "queries": {
                                            "folderPath": "/adobepushfiles",
                                            "name": "I0013_Next_ACS_searchProfilesDistrictIds_searchProfilesDistrictIds_@{utcNow()}.csv",
                                            "queryParametersSingleEncoded": true
                                        }
                                    },
                                    "runtimeConfiguration": {
                                        "contentTransfer": {
                                            "transferMode": "Chunked"
                                        }
                                    }
                                },
                                "Create_file_DistrictIds": {
                                    "runAfter": {
                                        "Create_blob_DistrictIds": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": "@body('Create_CSV_table_DistrictIds')",
                                        "headers": {
                                            "ReadFileMetadataFromServer": true
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['sftpwithssh']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/datasets/default/files",
                                        "queries": {
                                            "folderPath": "/incoming/AzureFiles",
                                            "name": "I0013_Next_ACS_searchProfilesDistrictIds_searchProfilesDistrictIds_@{utcNow()}.csv",
                                            "queryParametersSingleEncoded": true
                                        }
                                    },
                                    "runtimeConfiguration": {
                                        "contentTransfer": {
                                            "transferMode": "Chunked"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "For_each_SearchProfileUpdate": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "greater": [
                                            "@length(variables('DisctrictIds'))",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Condition_EstateTypes": {
                            "actions": {
                                "Create_CSV_table_EstateTypes": {
                                    "runAfter": {},
                                    "type": "Table",
                                    "inputs": {
                                        "format": "CSV",
                                        "from": "@variables('EstateTypes')"
                                    }
                                },
                                "Create_blob_EstateTypes": {
                                    "runAfter": {
                                        "Create_CSV_table_EstateTypes": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": "@body('Create_CSV_table_EstateTypes')",
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azureblob']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/datasets/default/files",
                                        "queries": {
                                            "folderPath": "/adobepushfiles",
                                            "name": "I0012_Next_ACS_searchProfilesEstateTypes_searchProfilesEstateTypes_@{utcNow()}.csv",
                                            "queryParametersSingleEncoded": true
                                        }
                                    },
                                    "runtimeConfiguration": {
                                        "contentTransfer": {
                                            "transferMode": "Chunked"
                                        }
                                    }
                                },
                                "Create_file_EstateTypes": {
                                    "runAfter": {
                                        "Create_blob_EstateTypes": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": "@body('Create_CSV_table_EstateTypes')",
                                        "headers": {
                                            "ReadFileMetadataFromServer": true
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['sftpwithssh']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/datasets/default/files",
                                        "queries": {
                                            "folderPath": "/incoming/AzureFiles",
                                            "name": "I0012_Next_ACS_searchProfilesEstateTypes_searchProfilesEstateTypes_@{utcNow()}.csv",
                                            "queryParametersSingleEncoded": true
                                        }
                                    },
                                    "runtimeConfiguration": {
                                        "contentTransfer": {
                                            "transferMode": "Chunked"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "For_each_SearchProfileUpdate": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "greater": [
                                            "@length(variables('EstateTypes'))",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Condition_MunicipalityIds": {
                            "actions": {
                                "Create_CSV_table_MunicipalityIds": {
                                    "runAfter": {},
                                    "type": "Table",
                                    "inputs": {
                                        "format": "CSV",
                                        "from": "@variables('MunicipalityIds')"
                                    }
                                },
                                "Create_blob_MunicipalityIds": {
                                    "runAfter": {
                                        "Create_CSV_table_MunicipalityIds": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": "@body('Create_CSV_table_MunicipalityIds')",
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azureblob']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/datasets/default/files",
                                        "queries": {
                                            "folderPath": "/adobepushfiles",
                                            "name": "I0016_Next_ACS_searchProfilesMunicipalityIds_searchProfilesMunicipalityIds_@{utcNow()}.csv",
                                            "queryParametersSingleEncoded": true
                                        }
                                    },
                                    "runtimeConfiguration": {
                                        "contentTransfer": {
                                            "transferMode": "Chunked"
                                        }
                                    }
                                },
                                "Create_file_MunicipalityIds": {
                                    "runAfter": {
                                        "Create_blob_MunicipalityIds": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": "@body('Create_CSV_table_MunicipalityIds')",
                                        "headers": {
                                            "ReadFileMetadataFromServer": true
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['sftpwithssh']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/datasets/default/files",
                                        "queries": {
                                            "folderPath": "/incoming/AzureFiles",
                                            "name": "I0016_Next_ACS_searchProfilesMunicipalityIds_searchProfilesMunicipalityIds_@{utcNow()}.csv",
                                            "queryParametersSingleEncoded": true
                                        }
                                    },
                                    "runtimeConfiguration": {
                                        "contentTransfer": {
                                            "transferMode": "Chunked"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "For_each_SearchProfileUpdate": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "greater": [
                                            "@length(variables('MunicipalityIds'))",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Condition_PostCodes": {
                            "actions": {
                                "Create_CSV_table_PostCodes": {
                                    "runAfter": {},
                                    "type": "Table",
                                    "inputs": {
                                        "format": "CSV",
                                        "from": "@variables('PostCodes')"
                                    }
                                },
                                "Create_blob_PostCodes": {
                                    "runAfter": {
                                        "Create_CSV_table_PostCodes": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": "@body('Create_CSV_table_PostCodes')",
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azureblob']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/datasets/default/files",
                                        "queries": {
                                            "folderPath": "/adobepushfiles",
                                            "name": "I0014_Next_ACS_searchProfilesPostCodes_searchProfilesPostCodes_@{utcNow()}.csv",
                                            "queryParametersSingleEncoded": true
                                        }
                                    },
                                    "runtimeConfiguration": {
                                        "contentTransfer": {
                                            "transferMode": "Chunked"
                                        }
                                    }
                                },
                                "Create_file_PostCodes": {
                                    "runAfter": {
                                        "Create_blob_PostCodes": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": "@body('Create_CSV_table_PostCodes')",
                                        "headers": {
                                            "ReadFileMetadataFromServer": true
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['sftpwithssh']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/datasets/default/files",
                                        "queries": {
                                            "folderPath": "/incoming/AzureFiles",
                                            "name": "I0014_Next_ACS_searchProfilesPostCodes_searchProfilesPostCodes_@{utcNow()}.csv",
                                            "queryParametersSingleEncoded": true
                                        }
                                    },
                                    "runtimeConfiguration": {
                                        "contentTransfer": {
                                            "transferMode": "Chunked"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "For_each_SearchProfileUpdate": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "greater": [
                                            "@length(variables('PostCodes'))",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Condition_StateIds": {
                            "actions": {
                                "Create_CSV_table_StateIds": {
                                    "runAfter": {},
                                    "type": "Table",
                                    "inputs": {
                                        "format": "CSV",
                                        "from": "@variables('StateIds')"
                                    }
                                },
                                "Create_blob_StateIds": {
                                    "runAfter": {
                                        "Create_CSV_table_StateIds": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": "@body('Create_CSV_table_StateIds')",
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azureblob']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/datasets/default/files",
                                        "queries": {
                                            "folderPath": "/adobepushfiles",
                                            "name": "I0015_Next_ACS_searchProfileStateIds_searchProfilesStateIds_@{utcNow()}.csv",
                                            "queryParametersSingleEncoded": true
                                        }
                                    },
                                    "runtimeConfiguration": {
                                        "contentTransfer": {
                                            "transferMode": "Chunked"
                                        }
                                    }
                                },
                                "Create_file_StateIds": {
                                    "runAfter": {
                                        "Create_blob_StateIds": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": "@body('Create_CSV_table_StateIds')",
                                        "headers": {
                                            "ReadFileMetadataFromServer": true
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['sftpwithssh']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/datasets/default/files",
                                        "queries": {
                                            "folderPath": "/incoming/AzureFiles",
                                            "name": "I0015_Next_ACS_searchProfileStateIds_searchProfilesStateIds_@{utcNow()}.csv",
                                            "queryParametersSingleEncoded": true
                                        }
                                    },
                                    "runtimeConfiguration": {
                                        "contentTransfer": {
                                            "transferMode": "Chunked"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "For_each_SearchProfileUpdate": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "greater": [
                                            "@length(variables('StateIds'))",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Create_CSV_table_SearchProfileUpdates": {
                            "runAfter": {
                                "For_each_SearchProfileUpdate": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Table",
                            "inputs": {
                                "columns": [
                                    {
                                        "header": "contactId",
                                        "value": "@item()['contactId']"
                                    },
                                    {
                                        "header": "searchProfileId",
                                        "value": "@item()['searchProfileId']"
                                    },
                                    {
                                        "header": "modified",
                                        "value": "@item()['modified']"
                                    },
                                    {
                                        "header": "createdBy",
                                        "value": "@item()['createdBy']"
                                    },
                                    {
                                        "header": "ended",
                                        "value": "@item()['ended']"
                                    },
                                    {
                                        "header": "type",
                                        "value": "@item()['type']"
                                    },
                                    {
                                        "header": "expire",
                                        "value": "@item()['expire']"
                                    },
                                    {
                                        "header": "priceMax",
                                        "value": "@item()['priceMax']"
                                    },
                                    {
                                        "header": "priceMin",
                                        "value": "@item()['priceMin']"
                                    },
                                    {
                                        "header": "promMax",
                                        "value": "@item()['promMax']"
                                    },
                                    {
                                        "header": "promMin",
                                        "value": "@item()['promMin']"
                                    },
                                    {
                                        "header": "plotSizeMax",
                                        "value": "@item()['plotSizeMax']"
                                    },
                                    {
                                        "header": "plotSizeMin",
                                        "value": "@item()['plotSizeMin']"
                                    },
                                    {
                                        "header": "roomsMax",
                                        "value": "@item()['roomsMax']"
                                    },
                                    {
                                        "header": "roomsMin",
                                        "value": "@item()['roomsMin']"
                                    },
                                    {
                                        "header": "floorsMax",
                                        "value": "@item()['floorsMax']"
                                    },
                                    {
                                        "header": "floorsMin",
                                        "value": "@item()['floorsMin']"
                                    },
                                    {
                                        "header": "sleepsMin",
                                        "value": "@item()['sleepsMin']"
                                    },
                                    {
                                        "header": "bathsMin",
                                        "value": "@item()['bathsMin']"
                                    },
                                    {
                                        "header": "garage",
                                        "value": "@item()['garage']"
                                    },
                                    {
                                        "header": "lift",
                                        "value": "@item()['lift']"
                                    },
                                    {
                                        "header": "balcony",
                                        "value": "@item()['balcony']"
                                    }
                                ],
                                "format": "CSV",
                                "from": "@triggerBody()"
                            }
                        },
                        "Create_blob_SearchProfilesUpdates": {
                            "runAfter": {
                                "Create_CSV_table_SearchProfileUpdates": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "@body('Create_CSV_table_SearchProfileUpdates')",
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/datasets/default/files",
                                "queries": {
                                    "folderPath": "/adobepushfiles",
                                    "name": "I006_Next_ACS_searchProfiles_searchProfiles_@{utcNow()}.csv",
                                    "queryParametersSingleEncoded": true
                                }
                            },
                            "runtimeConfiguration": {
                                "contentTransfer": {
                                    "transferMode": "Chunked"
                                }
                            }
                        },
                        "Create_file_SearchProfilesUpdates": {
                            "runAfter": {
                                "Create_blob_SearchProfilesUpdates": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "@body('Create_CSV_table_SearchProfileUpdates')",
                                "headers": {
                                    "ReadFileMetadataFromServer": true
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['sftpwithssh']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/datasets/default/files",
                                "queries": {
                                    "folderPath": "/incoming/AzureFiles",
                                    "name": "I006_Next_ACS_searchProfiles_searchProfiles_@{utcNow()}.csv",
                                    "queryParametersSingleEncoded": true
                                }
                            },
                            "runtimeConfiguration": {
                                "contentTransfer": {
                                    "transferMode": "Chunked"
                                }
                            }
                        },
                        "For_each_SearchProfileUpdate": {
                            "foreach": "@triggerBody()",
                            "actions": {
                                "For_each_AssignmentType": {
                                    "foreach": "@items('For_each_SearchProfileUpdate')['assignmentTypes']",
                                    "actions": {
                                        "Append_to_array_variable_AssignmentTypes": {
                                            "runAfter": {},
                                            "type": "AppendToArrayVariable",
                                            "inputs": {
                                                "name": "AssignmentTypes",
                                                "value": {
                                                    "assignmentType": "@items('For_each_AssignmentType')",
                                                    "searchProfileId": "@variables('SearchProfileId')"
                                                }
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Set_variable": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Foreach",
                                    "runtimeConfiguration": {
                                        "concurrency": {
                                            "repetitions": 1
                                        }
                                    }
                                },
                                "For_each_DistrictId": {
                                    "foreach": "@items('For_each_SearchProfileUpdate')['districtIds']",
                                    "actions": {
                                        "Append_to_array_variable_DistrictIds": {
                                            "runAfter": {},
                                            "type": "AppendToArrayVariable",
                                            "inputs": {
                                                "name": "DisctrictIds",
                                                "value": {
                                                    "districtId": "@items('For_each_DistrictId')",
                                                    "searchProfileId": "@variables('SearchProfileId')"
                                                }
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Set_variable": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Foreach",
                                    "runtimeConfiguration": {
                                        "concurrency": {
                                            "repetitions": 1
                                        }
                                    }
                                },
                                "For_each_EstateType": {
                                    "foreach": "@items('For_each_SearchProfileUpdate')['estateTypes']",
                                    "actions": {
                                        "Append_to_array_variable_EstateTypes": {
                                            "runAfter": {},
                                            "type": "AppendToArrayVariable",
                                            "inputs": {
                                                "name": "EstateTypes",
                                                "value": {
                                                    "estateType": "@items('For_each_EstateType')",
                                                    "searchProfileId": "@variables('SearchProfileId')"
                                                }
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Set_variable": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Foreach",
                                    "runtimeConfiguration": {
                                        "concurrency": {
                                            "repetitions": 1
                                        }
                                    }
                                },
                                "For_each_MunicipalityId": {
                                    "foreach": "@items('For_each_SearchProfileUpdate')['municipalityIds']",
                                    "actions": {
                                        "Append_to_array_MunicipalityIds": {
                                            "runAfter": {},
                                            "type": "AppendToArrayVariable",
                                            "inputs": {
                                                "name": "MunicipalityIds",
                                                "value": {
                                                    "municipalityId": "@items('For_each_MunicipalityId')",
                                                    "searchProfileId": "@variables('SearchProfileId')"
                                                }
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Set_variable": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Foreach",
                                    "runtimeConfiguration": {
                                        "concurrency": {
                                            "repetitions": 1
                                        }
                                    }
                                },
                                "For_each_PostCode": {
                                    "foreach": "@items('For_each_SearchProfileUpdate')['postCodes']",
                                    "actions": {
                                        "Append_to_array_variable_PostCodes": {
                                            "runAfter": {},
                                            "type": "AppendToArrayVariable",
                                            "inputs": {
                                                "name": "PostCodes",
                                                "value": {
                                                    "postCode": "@items('For_each_PostCode')",
                                                    "searchProfileId": "@variables('SearchProfileId')"
                                                }
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Set_variable": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Foreach",
                                    "runtimeConfiguration": {
                                        "concurrency": {
                                            "repetitions": 1
                                        }
                                    }
                                },
                                "For_each_StateId": {
                                    "foreach": "@items('For_each_SearchProfileUpdate')['stateIds']",
                                    "actions": {
                                        "Append_to_array_variable_StateIds": {
                                            "runAfter": {},
                                            "type": "AppendToArrayVariable",
                                            "inputs": {
                                                "name": "StateIds",
                                                "value": {
                                                    "searchProfileId": "@variables('SearchProfileId')",
                                                    "stateId": "@items('For_each_StateId')"
                                                }
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Set_variable": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Foreach",
                                    "runtimeConfiguration": {
                                        "concurrency": {
                                            "repetitions": 1
                                        }
                                    }
                                },
                                "Set_variable": {
                                    "runAfter": {},
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "SearchProfileId",
                                        "value": "@{items('For_each_SearchProfileUpdate')?['searchProfileId']}"
                                    }
                                }
                            },
                            "runAfter": {
                                "Initialize_variable_SearchProfileId": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach",
                            "runtimeConfiguration": {
                                "concurrency": {
                                    "repetitions": 1
                                }
                            }
                        },
                        "Initialize_variable_AssignmentTypes": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "AssignmentTypes",
                                        "type": "array",
                                        "value": []
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_DistrictIds": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "DisctrictIds",
                                        "type": "array",
                                        "value": []
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_EstateTypes": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "EstateTypes",
                                        "type": "array",
                                        "value": []
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_MunicipalityIds": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "MunicipalityIds",
                                        "type": "array",
                                        "value": []
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_PostCodes": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "PostCodes",
                                        "type": "array",
                                        "value": []
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_SearchProfileId": {
                            "runAfter": {
                                "Initialize_variable_AssignmentTypes": [
                                    "Succeeded"
                                ],
                                "Initialize_variable_DistrictIds": [
                                    "Succeeded"
                                ],
                                "Initialize_variable_EstateTypes": [
                                    "Succeeded"
                                ],
                                "Initialize_variable_MunicipalityIds": [
                                    "Succeeded"
                                ],
                                "Initialize_variable_PostCodes": [
                                    "Succeeded"
                                ],
                                "Initialize_variable_StateIds": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "SearchProfileId",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_StateIds": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "StateIds",
                                        "type": "array",
                                        "value": []
                                    }
                                ]
                            }
                        },
                        "Response": {
                            "runAfter": {
                                "Condition_AssignmentTypes": [
                                    "Succeeded"
                                ],
                                "Condition_DistrictIds": [
                                    "Succeeded"
                                ],
                                "Condition_EstateTypes": [
                                    "Succeeded"
                                ],
                                "Condition_MunicipalityIds": [
                                    "Succeeded"
                                ],
                                "Condition_PostCodes": [
                                    "Succeeded"
                                ],
                                "Condition_StateIds": [
                                    "Succeeded"
                                ],
                                "Create_file_SearchProfilesUpdates": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Response",
                            "kind": "Http",
                            "inputs": {
                                "statusCode": 200
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azureblob": {
                                "connectionId": "[parameters('connections_azureblobproductionconnection_externalid')]",
                                "connectionName": "azureblobproductionconnection",
                                "id": "/subscriptions/6628b4ea-c2aa-41a7-bb87-1998fb75fb46/providers/Microsoft.Web/locations/northeurope/managedApis/azureblob"
                            },
                            "sftpwithssh": {
                                "connectionId": "[parameters('connections_sftpwithsshproductionconnection_externalid')]",
                                "connectionName": "sftpwithsshproductionconnection",
                                "id": "/subscriptions/6628b4ea-c2aa-41a7-bb87-1998fb75fb46/providers/Microsoft.Web/locations/northeurope/managedApis/sftpwithssh"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_DNBE_CreateVitecUrl_Production_name')]",
            "location": "northeurope",
            "tags": {
                "CostAllocation": "XXXXXXXXXXXXXX"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        },
                        "VitecBaseUrl": {
                            "defaultValue": "https://hub.megler.vitec.net//MSDNB",
                            "type": "String"
                        },
                        "VitecPassword": {
                            "defaultValue": "XXXXXXXXXXXXXX",
                            "type": "SecureString"
                        },
                        "VitecUsername": {
                            "defaultValue": "XXXXXXXXXXXXXX",
                            "type": "SecureString"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {},
                            "description": "Triggered from DNBE_CreateEstatesUpdatesFile"
                        }
                    },
                    "actions": {
                        "Create_CSV_table": {
                            "runAfter": {
                                "For_each": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Table",
                            "inputs": {
                                "format": "CSV",
                                "from": "@variables('EstatePath')"
                            }
                        },
                        "Create_blob_(V2)": {
                            "runAfter": {
                                "Create_CSV_table": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "@body('Create_CSV_table')",
                                "headers": {
                                    "ReadFileMetadataFromServer": true
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('AccountNameFromSettings'))}/files",
                                "queries": {
                                    "folderPath": "/adobepushfiles",
                                    "name": "I026_Next_ACS_Estates_Path_@{utcNow()}.csv",
                                    "queryParametersSingleEncoded": true
                                }
                            },
                            "runtimeConfiguration": {
                                "contentTransfer": {
                                    "transferMode": "Chunked"
                                }
                            }
                        },
                        "Create_file": {
                            "runAfter": {
                                "Create_blob_(V2)": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "@body('Create_CSV_table')",
                                "headers": {
                                    "ReadFileMetadataFromServer": true
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['sftpwithssh']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/datasets/default/files",
                                "queries": {
                                    "folderPath": "/incoming/AzureFiles",
                                    "name": "I026_Next_ACS_Estates_Path_@{utcNow()}.csv",
                                    "queryParametersSingleEncoded": true
                                }
                            },
                            "runtimeConfiguration": {
                                "contentTransfer": {
                                    "transferMode": "Chunked"
                                }
                            }
                        },
                        "For_each": {
                            "foreach": "@triggerBody()",
                            "actions": {
                                "Check_Assignment_Type": {
                                    "actions": {
                                        "Append_to_EstatePath": {
                                            "runAfter": {
                                                "Get_GetPath": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "AppendToArrayVariable",
                                            "inputs": {
                                                "name": "EstatePath",
                                                "value": {
                                                    "estateId": "@items('For_each')['estateId']",
                                                    "path": "@body('Get_GetPath')"
                                                }
                                            }
                                        },
                                        "Get_GetPath": {
                                            "runAfter": {},
                                            "type": "Http",
                                            "inputs": {
                                                "authentication": {
                                                    "password": "@parameters('VitecPassword')",
                                                    "type": "Basic",
                                                    "username": "@parameters('VitecUsername')"
                                                },
                                                "method": "GET",
                                                "queries": {
                                                    "mainId": "@{items('For_each')['estateId']}",
                                                    "pageCategory": "2"
                                                },
                                                "uri": "@{parameters('VitecBaseUrl')}/Next/GetPath"
                                            }
                                        }
                                    },
                                    "runAfter": {},
                                    "expression": {
                                        "and": [
                                            {
                                                "not": {
                                                    "equals": [
                                                        "@{items('For_each')['ownAssignmentType']}",
                                                        "Prosjektmaster"
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "type": "If"
                                }
                            },
                            "runAfter": {
                                "Initialize_EstatePath": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "Initialize_EstatePath": {
                            "runAfter": {
                                "Response": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "EstatePath",
                                        "type": "array",
                                        "value": []
                                    }
                                ]
                            }
                        },
                        "Response": {
                            "runAfter": {},
                            "type": "Response",
                            "kind": "Http",
                            "inputs": {
                                "statusCode": 200
                            },
                            "description": "Immediate response to logic app"
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azureblob": {
                                "connectionId": "[parameters('connections_azureblobproductionconnection_externalid')]",
                                "connectionName": "azureblobproductionconnection",
                                "id": "/subscriptions/bc58fa9e-b6f0-47bf-a58f-f8b9f944407e/providers/Microsoft.Web/locations/northeurope/managedApis/azureblob"
                            },
                            "sftpwithssh": {
                                "connectionId": "[parameters('connections_sftpwithsshproductionconnection_externalid')]",
                                "connectionName": "sftpwithsshproductionconnection",
                                "id": "/subscriptions/bc58fa9e-b6f0-47bf-a58f-f8b9f944407e/providers/Microsoft.Web/locations/northeurope/managedApis/sftpwithssh"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_DNBE_Vitec_Consent_Push_Production_name')]",
            "location": "northeurope",
            "tags": {
                "contactEmail": "XXXXXXXXXXXXXX",
                "costAllocation": "XXXXXXXXXXXXXX",
                "environment": "Production"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "InstallationId": {
                            "defaultValue": "MSDNB",
                            "type": "String"
                        },
                        "Password": {
                            "defaultValue": "XXXXXXXXXXXXXX",
                            "type": "SecureString"
                        },
                        "Username": {
                            "defaultValue": "XXXXXXXXXXXXXX",
                            "type": "SecureString"
                        },
                        "Vitec Base URL": {
                            "defaultValue": "https://hub.megler.vitec.net/",
                            "type": "String"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "changedBy": {
                                                "type": "string"
                                            },
                                            "changedDate": {
                                                "type": "string"
                                            },
                                            "contactId": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "integer"
                                            },
                                            "value": {
                                                "type": "boolean"
                                            }
                                        },
                                        "required": [
                                            "changedBy",
                                            "changedDate",
                                            "contactId",
                                            "type",
                                            "value"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "actions": {
                        "For_each_Contact": {
                            "foreach": "@body('Parse_JSON')",
                            "actions": {
                                "Push_Consents_by_ContactId": {
                                    "runAfter": {},
                                    "type": "Http",
                                    "inputs": {
                                        "authentication": {
                                            "password": "@parameters('Password')",
                                            "type": "Basic",
                                            "username": "@parameters('Username')"
                                        },
                                        "body": "@items('For_each_Contact')['consents']",
                                        "method": "PUT",
                                        "uri": "@{parameters('Vitec Base URL')}/@{parameters('InstallationId')}/Contacts/@{items('For_each_Contact')['contactId']}/Consent"
                                    }
                                }
                            },
                            "runAfter": {
                                "Parse_JSON": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach",
                            "runtimeConfiguration": {
                                "concurrency": {
                                    "repetitions": 1
                                }
                            }
                        },
                        "Get_Consents_By_Contact_Id": {
                            "runAfter": {},
                            "type": "Http",
                            "inputs": {
                                "body": "@triggerBody()",
                                "headers": {
                                    "Content-Type": "application/json"
                                },
                                "method": "POST",
                                "uri": "https://dnbefunctionsproductionnew.azurewebsites.net/api/GetConsentsByContactId"
                            }
                        },
                        "Parse_JSON": {
                            "runAfter": {
                                "Get_Consents_By_Contact_Id": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@body('Get_Consents_By_Contact_Id')",
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "consents": {
                                                "items": {
                                                    "properties": {
                                                        "changedBy": {
                                                            "type": "string"
                                                        },
                                                        "changedDate": {
                                                            "type": "string"
                                                        },
                                                        "type": {
                                                            "type": "integer"
                                                        },
                                                        "value": {
                                                            "type": "boolean"
                                                        }
                                                    },
                                                    "required": [
                                                        "changedBy",
                                                        "changedDate",
                                                        "type",
                                                        "value"
                                                    ],
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "contactId": {
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "contactId",
                                            "consents"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "Response": {
                            "runAfter": {
                                "For_each_Contact": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Response",
                            "kind": "Http",
                            "inputs": {
                                "statusCode": 200
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {}
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_DNBE_Vitec_Delta_Load_Pull_Checklist_Production_name')]",
            "location": "northeurope",
            "tags": {
                "CostAllocation": "XXXXXXXXXXXXXX"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        },
                        "AlertEmail": {
                            "defaultValue": "XXXXXXXXXXXXXX",
                            "type": "String"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "method": "POST",
                                "schema": {
                                    "properties": {
                                        "Data": {
                                            "type": "string"
                                        },
                                        "EventType": {
                                            "type": "integer"
                                        },
                                        "InstallationId": {
                                            "type": "string"
                                        },
                                        "ObjectId": {
                                            "type": "string"
                                        },
                                        "ObjectType": {
                                            "type": "integer"
                                        },
                                        "Reference": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "actions": {
                        "Condition": {
                            "actions": {
                                "Scope": {
                                    "actions": {
                                        "Check_for_array_length": {
                                            "actions": {
                                                "Compose": {
                                                    "runAfter": {},
                                                    "type": "Compose",
                                                    "inputs": {
                                                        "date": "@utcNow()",
                                                        "id": "@{triggerBody()?['ObjectId']}-@{triggerBody()?['ObjectType']}",
                                                        "isprocessed": false,
                                                        "update": {
                                                            "Data": "{\"checkListItems\":@{body('Filter_array')}}",
                                                            "EventType": "@triggerBody()?['EventType']",
                                                            "InstallationId": "@{triggerBody()?['InstallationId']}",
                                                            "ObjectId": "@{triggerBody()?['ObjectId']}",
                                                            "ObjectType": "@triggerBody()?['ObjectType']",
                                                            "Reference": "@{triggerBody()?['Reference']}"
                                                        }
                                                    }
                                                },
                                                "Create_or_update_document": {
                                                    "runAfter": {
                                                        "Compose": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "body": "@outputs('Compose')",
                                                        "headers": {
                                                            "x-ms-documentdb-is-upsert": true,
                                                            "x-ms-documentdb-raw-partitionkey": "@{triggerBody()?['ObjectId']}-@{triggerBody()?['ObjectType']}"
                                                        },
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['documentdb']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "path": "/v2/cosmosdb/@{encodeURIComponent('AccountNameFromSettings')}/dbs/@{encodeURIComponent('next-db')}/colls/@{encodeURIComponent('next-updates')}/docs"
                                                    }
                                                },
                                                "Response_OK_-_Inserted": {
                                                    "runAfter": {
                                                        "Create_or_update_document": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Response",
                                                    "kind": "Http",
                                                    "inputs": {
                                                        "body": "OK",
                                                        "statusCode": 200
                                                    }
                                                }
                                            },
                                            "runAfter": {
                                                "Filter_array": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "else": {
                                                "actions": {
                                                    "Response_OK_-_Not_inserted": {
                                                        "runAfter": {},
                                                        "type": "Response",
                                                        "kind": "Http",
                                                        "inputs": {
                                                            "body": "NO_INSERT",
                                                            "statusCode": 204
                                                        }
                                                    }
                                                }
                                            },
                                            "expression": {
                                                "and": [
                                                    {
                                                        "greater": [
                                                            "@length(body('Filter_array'))",
                                                            0
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": "If"
                                        },
                                        "Filter_array": {
                                            "runAfter": {
                                                "Parse_JSON": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Query",
                                            "inputs": {
                                                "from": "@body('Parse_JSON')?['checkListItems']",
                                                "where": "@or(contains(item()?['tags'], 'PRODUKT_FORSPRANGET'), contains(item()?['tags'], 'MAIL_TIL_KFS'))"
                                            }
                                        },
                                        "Parse_JSON": {
                                            "runAfter": {},
                                            "type": "ParseJson",
                                            "inputs": {
                                                "content": "@triggerBody()?['Data']",
                                                "schema": {
                                                    "properties": {
                                                        "checkListItems": {
                                                            "items": {
                                                                "properties": {
                                                                    "changedBy": {
                                                                        "type": [
                                                                            "string",
                                                                            "null"
                                                                        ]
                                                                    },
                                                                    "changedDate": {
                                                                        "type": "string"
                                                                    },
                                                                    "tags": {
                                                                        "items": {
                                                                            "type": "string"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "value": {
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "tags",
                                                                    "value",
                                                                    "changedBy",
                                                                    "changedDate"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "lastChanged": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            }
                                        }
                                    },
                                    "runAfter": {},
                                    "type": "Scope"
                                }
                            },
                            "runAfter": {},
                            "else": {
                                "actions": {
                                    "Response": {
                                        "runAfter": {},
                                        "type": "Response",
                                        "kind": "Http",
                                        "inputs": {
                                            "statusCode": 204
                                        }
                                    }
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "not": {
                                            "equals": [
                                                "@triggerBody()?['Data']",
                                                null
                                            ]
                                        }
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Create_blob": {
                            "runAfter": {
                                "Send_error_email": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "@result('Scope')",
                                "headers": {
                                    "ReadFileMetadataFromServer": true
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('AccountNameFromSettings'))}/files",
                                "queries": {
                                    "folderPath": "/adobepushfiles",
                                    "name": "[concat('LogError-', parameters('workflows_DNBE_Vitec_Delta_Load_Pull_Checklist_Production_name'), '-@{utcNow()}')]",
                                    "queryParametersSingleEncoded": true
                                }
                            },
                            "runtimeConfiguration": {
                                "contentTransfer": {
                                    "transferMode": "Chunked"
                                }
                            }
                        },
                        "Response_2": {
                            "runAfter": {
                                "Create_blob": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Response",
                            "kind": "Http",
                            "inputs": {
                                "statusCode": 500
                            }
                        },
                        "Send_error_email": {
                            "runAfter": {
                                "Condition": [
                                    "Failed"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "Body": "[concat('<p>Error in ', parameters('workflows_DNBE_Vitec_Delta_Load_Pull_Checklist_Production_name'), '</p>')]",
                                    "Importance": "Normal",
                                    "Subject": "[concat('Error in ', parameters('workflows_DNBE_Vitec_Delta_Load_Pull_Checklist_Production_name'))]",
                                    "To": "@parameters('AlertEmail')"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['office365']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/v2/Mail"
                            }
                        },
                        "Terminate": {
                            "runAfter": {
                                "Response_2": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Terminate",
                            "inputs": {
                                "runStatus": "Failed"
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azureblob": {
                                "connectionId": "[parameters('connections_azureblobproductionconnection_externalid')]",
                                "connectionName": "azureblobproductionconnection",
                                "id": "/subscriptions/bc58fa9e-b6f0-47bf-a58f-f8b9f944407e/providers/Microsoft.Web/locations/northeurope/managedApis/azureblob"
                            },
                            "documentdb": {
                                "connectionId": "[parameters('connections_documentdbproductionconnection_externalid')]",
                                "connectionName": "documentdbproductionconnection",
                                "id": "/subscriptions/bc58fa9e-b6f0-47bf-a58f-f8b9f944407e/providers/Microsoft.Web/locations/northeurope/managedApis/documentdb"
                            },
                            "office365": {
                                "connectionId": "[parameters('connections_office365_externalid')]",
                                "connectionName": "office365",
                                "id": "/subscriptions/bc58fa9e-b6f0-47bf-a58f-f8b9f944407e/providers/Microsoft.Web/locations/northeurope/managedApis/office365"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_DNBE_Vitec_Delta_Load_Pull_Production_name')]",
            "location": "northeurope",
            "tags": {
                "contactEmail": "XXXXXXXXXXXXXX",
                "costAllocation": "XXXXXXXXXXXXXX",
                "environment": "Production"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        },
                        "AlertEmail": {
                            "defaultValue": "XXXXXXXXXXXXXX",
                            "type": "String"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "method": "POST",
                                "schema": {
                                    "properties": {
                                        "Data": {
                                            "type": "string"
                                        },
                                        "EventType": {
                                            "type": "integer"
                                        },
                                        "InstallationId": {
                                            "type": "string"
                                        },
                                        "ObjectId": {
                                            "type": "string"
                                        },
                                        "ObjectType": {
                                            "type": "integer"
                                        },
                                        "Reference": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "actions": {
                        "Create_blob": {
                            "runAfter": {
                                "Send_an_email_(V2)": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "@result('Scope')",
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/datasets/default/files",
                                "queries": {
                                    "folderPath": "/adobepushfiles",
                                    "name": "[concat('LogError-', parameters('workflows_DNBE_Vitec_Delta_Load_Pull_Production_name'), '-@{utcNow()}')]",
                                    "queryParametersSingleEncoded": true
                                }
                            },
                            "runtimeConfiguration": {
                                "contentTransfer": {
                                    "transferMode": "Chunked"
                                }
                            }
                        },
                        "Response_OK": {
                            "runAfter": {
                                "Scope": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Response",
                            "kind": "Http",
                            "inputs": {
                                "statusCode": 200
                            }
                        },
                        "Response_error": {
                            "runAfter": {
                                "Create_blob": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Response",
                            "kind": "Http",
                            "inputs": {
                                "statusCode": 500
                            }
                        },
                        "Scope": {
                            "actions": {
                                "Compose": {
                                    "runAfter": {},
                                    "type": "Compose",
                                    "inputs": {
                                        "date": "@utcNow()",
                                        "id": "@{replace(replace(replace(replace(triggerBody()?['ObjectId'], 'Å', 'AA'), 'Ü', 'UE'), 'Æ', 'AE'), 'Ø', 'OE')}-@{triggerBody()?['ObjectType']}",
                                        "isprocessed": false,
                                        "update": "@triggerBody()"
                                    }
                                },
                                "Create_or_update_document": {
                                    "runAfter": {
                                        "Compose": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": "@outputs('Compose')",
                                        "headers": {
                                            "x-ms-documentdb-is-upsert": true,
                                            "x-ms-documentdb-raw-partitionkey": " \"@{replace(replace(replace(replace(triggerBody()?['ObjectId'], 'Å', 'AA'), 'Ü', 'UE'), 'Æ', 'AE'), 'Ø', 'OE')}-@{triggerBody()?['ObjectType']}\""
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['documentdb']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/dbs/@{encodeURIComponent('next-db')}/colls/@{encodeURIComponent('next-updates')}/docs"
                                    }
                                }
                            },
                            "runAfter": {},
                            "type": "Scope"
                        },
                        "Send_an_email_(V2)": {
                            "runAfter": {
                                "Scope": [
                                    "TimedOut",
                                    "Skipped",
                                    "Failed"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "Body": "<p><br></p>",
                                    "Subject": "[concat('Error in ', parameters('workflows_DNBE_Vitec_Delta_Load_Pull_Production_name'))]",
                                    "To": "@parameters('AlertEmail')"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['office365_1']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/v2/Mail"
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azureblob": {
                                "connectionId": "[parameters('connections_azureblobproductionconnection_externalid')]",
                                "connectionName": "azureblobproductionconnection",
                                "id": "/subscriptions/6628b4ea-c2aa-41a7-bb87-1998fb75fb46/providers/Microsoft.Web/locations/northeurope/managedApis/azureblob"
                            },
                            "documentdb": {
                                "connectionId": "[parameters('connections_documentdbproductionconnection_externalid')]",
                                "connectionName": "documentdbproductionconnection",
                                "id": "/subscriptions/6628b4ea-c2aa-41a7-bb87-1998fb75fb46/providers/Microsoft.Web/locations/northeurope/managedApis/documentdb"
                            },
                            "office365_1": {
                                "connectionId": "[parameters('connections_office365_externalid')]",
                                "connectionName": "office365",
                                "id": "/subscriptions/6628b4ea-c2aa-41a7-bb87-1998fb75fb46/providers/Microsoft.Web/locations/northeurope/managedApis/office365"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_DNBE_Adobe_Pull_Production_name')]",
            "location": "northeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Logic/workflows', parameters('workflows_DNBE_Vitec_Consent_Push_Production_name'))]"
            ],
            "tags": {
                "contactEmail": "XXXXXXXXXXXXXX",
                "costAllocation": "XXXXXXXXXXXXXX",
                "environment": "Production"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "Recurrence": {
                            "recurrence": {
                                "frequency": "Day",
                                "interval": 1,
                                "schedule": {
                                    "hours": [
                                        "6"
                                    ],
                                    "minutes": [
                                        0
                                    ]
                                }
                            },
                            "type": "Recurrence"
                        }
                    },
                    "actions": {
                        "Condition": {
                            "actions": {
                                "Create_blob": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": "@body('Get_file_content')",
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azureblob']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/datasets/default/files",
                                        "queries": {
                                            "folderPath": "/adobepullfiles",
                                            "name": "I021_ACS_Next_consents_contactsConsent_@{utcNow()}.csv",
                                            "queryParametersSingleEncoded": true
                                        }
                                    },
                                    "runtimeConfiguration": {
                                        "contentTransfer": {
                                            "transferMode": "Chunked"
                                        }
                                    }
                                },
                                "DNB_Vitec_Consent_Push": {
                                    "runAfter": {
                                        "Parse_CSV_": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Workflow",
                                    "inputs": {
                                        "body": "@body('Parse_CSV_')['rows']",
                                        "host": {
                                            "triggerName": "manual",
                                            "workflow": {
                                                "id": "[resourceId('Microsoft.Logic/workflows', parameters('workflows_DNBE_Vitec_Consent_Push_Production_name'))]"
                                            }
                                        }
                                    }
                                },
                                "Parse_CSV_": {
                                    "runAfter": {
                                        "Create_blob": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Http",
                                    "inputs": {
                                        "body": "@body('Get_file_content')",
                                        "method": "POST",
                                        "queries": {
                                            "fileName": "ConsentsUpdates",
                                            "rowsToSkip": "1"
                                        },
                                        "uri": "https://dnbefunctionsproductionnew.azurewebsites.net/api/CsvToJson"
                                    }
                                }
                            },
                            "runAfter": {
                                "Delete_file": [
                                    "Succeeded"
                                ]
                            },
                            "else": {
                                "actions": {
                                    "Send_an_email_(V2)_2": {
                                        "runAfter": {},
                                        "type": "ApiConnection",
                                        "inputs": {
                                            "body": {
                                                "Body": "<p>There was an error importing the file contents - file seems to be empty</p>",
                                                "Subject": "DNB / Import failed",
                                                "To": "alexander.wulfsberg@dnbeiendom.no;XXXXXXXXXXXXXX;kristian.bjorna@emea.merkleinc.com"
                                            },
                                            "host": {
                                                "connection": {
                                                    "name": "@parameters('$connections')['office365_2']['connectionId']"
                                                }
                                            },
                                            "method": "post",
                                            "path": "/v2/Mail"
                                        }
                                    }
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "not": {
                                            "equals": [
                                                "@length(body('Get_file_content'))",
                                                0
                                            ]
                                        }
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Delete_file": {
                            "runAfter": {
                                "Get_file_content": [
                                    "Succeeded"
                                ]
                            },
                            "metadata": {
                                "L2luY29taW5nL0FDU19GaWxlcy9JMDIxX0FDU19OZXh0X2NvbnNlbnRzX2NvbnRhY3RzQ29uc2VudC5jc3Y=": "/incoming/ACS_Files/I021_ACS_Next_consents_contactsConsent.csv"
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "headers": {
                                    "SkipDeleteIfFileNotFoundOnServer": true
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['sftpwithssh']['connectionId']"
                                    }
                                },
                                "method": "delete",
                                "path": "/datasets/default/files/@{encodeURIComponent(encodeURIComponent('L2luY29taW5nL0FDU19GaWxlcy9JMDIxX0FDU19OZXh0X2NvbnNlbnRzX2NvbnRhY3RzQ29uc2VudC5jc3Y='))}"
                            }
                        },
                        "File_no_existent_in_ACS": {
                            "runAfter": {
                                "Get_file_content": [
                                    "Failed"
                                ]
                            },
                            "type": "Terminate",
                            "inputs": {
                                "runStatus": "Succeeded"
                            }
                        },
                        "Get_file_content": {
                            "runAfter": {},
                            "metadata": {
                                "L2luY29taW5nL0FDU19GaWxlcy9JMDIxX0FDU19OZXh0X2NvbnNlbnRzX2NvbnRhY3RzQ29uc2VudC5jc3Y=": "/incoming/ACS_Files/I021_ACS_Next_consents_contactsConsent.csv",
                                "L2luY29taW5nL21vbGxlcl9jc3Zfc2FtcGxlLmNzdg==": "/incoming/moller_csv_sample.csv"
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['sftpwithssh']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/datasets/default/files/@{encodeURIComponent(encodeURIComponent('L2luY29taW5nL0FDU19GaWxlcy9JMDIxX0FDU19OZXh0X2NvbnNlbnRzX2NvbnRhY3RzQ29uc2VudC5jc3Y='))}/content",
                                "queries": {
                                    "inferContentType": true
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azureblob": {
                                "connectionId": "[parameters('connections_azureblobproductionconnection_externalid')]",
                                "connectionName": "azureblobproductionconnection",
                                "id": "/subscriptions/6628b4ea-c2aa-41a7-bb87-1998fb75fb46/providers/Microsoft.Web/locations/northeurope/managedApis/azureblob"
                            },
                            "office365_2": {
                                "connectionId": "[parameters('connections_office365_externalid')]",
                                "connectionName": "office365",
                                "id": "/subscriptions/6628b4ea-c2aa-41a7-bb87-1998fb75fb46/providers/Microsoft.Web/locations/northeurope/managedApis/office365"
                            },
                            "sftpwithssh": {
                                "connectionId": "[parameters('connections_sftpwithsshproductionconnection_externalid')]",
                                "connectionName": "sftpwithsshproductionconnection",
                                "id": "/subscriptions/6628b4ea-c2aa-41a7-bb87-1998fb75fb46/providers/Microsoft.Web/locations/northeurope/managedApis/sftpwithssh"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_DNBE_CreateEstatesUpdatesFile_Production_name')]",
            "location": "northeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Logic/workflows', parameters('workflows_DNBE_CreateVitecUrl_Production_name'))]"
            ],
            "tags": {
                "contactEmail": "XXXXXXXXXXXXXX",
                "costAllocation": "XXXXXXXXXXXXXX",
                "environment": "Production"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "method": "POST",
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "address": {
                                                "properties": {
                                                    "apartmentNumber": {
                                                        "type": [
                                                            "string",
                                                            "null"
                                                        ]
                                                    },
                                                    "city": {
                                                        "type": [
                                                            "string",
                                                            "null"
                                                        ]
                                                    },
                                                    "streetAdress": {
                                                        "type": [
                                                            "string",
                                                            "null"
                                                        ]
                                                    },
                                                    "zipCode": {
                                                        "type": [
                                                            "string",
                                                            "null"
                                                        ]
                                                    }
                                                },
                                                "type": [
                                                    "object",
                                                    "null"
                                                ]
                                            },
                                            "appraiserContactId": {},
                                            "areaId": {},
                                            "assignmentNum": {
                                                "type": [
                                                    "string",
                                                    "null"
                                                ]
                                            },
                                            "assignmentType": {
                                                "type": [
                                                    "integer",
                                                    "null"
                                                ]
                                            },
                                            "availableDate": {},
                                            "brokersIdWithRoles": {
                                                "items": {
                                                    "properties": {
                                                        "brokerRole": {
                                                            "type": [
                                                                "integer",
                                                                "null"
                                                            ]
                                                        },
                                                        "employeeId": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        }
                                                    },
                                                    "required": [
                                                        "employeeId",
                                                        "brokerRole"
                                                    ],
                                                    "type": [
                                                        "object",
                                                        "null"
                                                    ]
                                                },
                                                "type": "array"
                                            },
                                            "buildings": {
                                                "type": "array"
                                            },
                                            "changedDate": {
                                                "type": [
                                                    "string",
                                                    "null"
                                                ]
                                            },
                                            "commissionAcceptedDate": {
                                                "type": [
                                                    "string",
                                                    "null"
                                                ]
                                            },
                                            "completionCertificateDate": {},
                                            "constructionYear": {
                                                "type": [
                                                    "integer",
                                                    "null"
                                                ]
                                            },
                                            "contractMeetingDate": {
                                                "type": [
                                                    "string",
                                                    "null"
                                                ]
                                            },
                                            "createdDate": {
                                                "type": [
                                                    "string",
                                                    "null"
                                                ]
                                            },
                                            "customerPortal": {
                                                "type": "boolean"
                                            },
                                            "departmentId": {
                                                "type": [
                                                    "integer",
                                                    "null"
                                                ]
                                            },
                                            "energyColorCode": {
                                                "type": [
                                                    "integer",
                                                    "null"
                                                ]
                                            },
                                            "energyLetter": {
                                                "type": [
                                                    "integer",
                                                    "null"
                                                ]
                                            },
                                            "estateBaseType": {
                                                "type": [
                                                    "integer",
                                                    "null"
                                                ]
                                            },
                                            "estateId": {
                                                "type": [
                                                    "string",
                                                    "null"
                                                ]
                                            },
                                            "estatePreferences": {
                                                "type": "array"
                                            },
                                            "estatePrice": {
                                                "properties": {
                                                    "additionalAgreementOptions": {},
                                                    "collectiveAssets": {},
                                                    "collectiveDebt": {},
                                                    "communityTax": {},
                                                    "communityTaxYear": {},
                                                    "estimatedValue": {},
                                                    "leasingPartyTransportFee": {},
                                                    "loanFare": {},
                                                    "originalAgreementPrice": {},
                                                    "originalExpensesPrice": {},
                                                    "priceSuggestion": {},
                                                    "purchaseCostsAmount": {},
                                                    "rent": {
                                                        "properties": {
                                                            "rentIncludes": {},
                                                            "rentPrMonth": {}
                                                        },
                                                        "type": [
                                                            "object",
                                                            "null"
                                                        ]
                                                    },
                                                    "salesCostDescription": {},
                                                    "soldPrice": {
                                                        "type": [
                                                            "integer",
                                                            "null"
                                                        ]
                                                    },
                                                    "totalPrice": {},
                                                    "transportAgreementCosts": {},
                                                    "waterRate": {},
                                                    "waterRateDescription": {},
                                                    "waterRateYear": {},
                                                    "yearlyLeaseFee": {},
                                                    "yearlySocietyTax": {}
                                                },
                                                "type": [
                                                    "object",
                                                    "null"
                                                ]
                                            },
                                            "estateSize": {
                                                "properties": {
                                                    "grossArea": {},
                                                    "primaryRoomArea": {},
                                                    "primaryRoomAreaDescription": {
                                                        "type": [
                                                            "string",
                                                            "null"
                                                        ]
                                                    },
                                                    "usableArea": {
                                                        "type": [
                                                            "number",
                                                            "null"
                                                        ]
                                                    }
                                                },
                                                "type": [
                                                    "object",
                                                    "null"
                                                ]
                                            },
                                            "estateType": {
                                                "type": [
                                                    "string",
                                                    "null"
                                                ]
                                            },
                                            "estateTypeExternal": {
                                                "type": [
                                                    "integer",
                                                    "null"
                                                ]
                                            },
                                            "estateTypeId": {
                                                "type": [
                                                    "string",
                                                    "null"
                                                ]
                                            },
                                            "expireDate": {
                                                "type": [
                                                    "string",
                                                    "null"
                                                ]
                                            },
                                            "facilities": {
                                                "type": "array"
                                            },
                                            "finnCode": {},
                                            "finnExpireDate": {},
                                            "finnPublishDate": {},
                                            "floor": {},
                                            "heading": {
                                                "type": [
                                                    "string",
                                                    "null"
                                                ]
                                            },
                                            "landOwnerEstateDocumentDate": {},
                                            "lastDocumentChangeDate": {
                                                "type": [
                                                    "string",
                                                    "null"
                                                ]
                                            },
                                            "lastImageChangeDate": {},
                                            "latitude": {
                                                "type": [
                                                    "number",
                                                    "null"
                                                ]
                                            },
                                            "leasingContractDate": {},
                                            "links": {
                                                "type": "array"
                                            },
                                            "liveAndManagementDuty": {
                                                "type": "boolean"
                                            },
                                            "longitude": {
                                                "type": [
                                                    "number",
                                                    "null"
                                                ]
                                            },
                                            "matrikkel": {
                                                "items": {
                                                    "properties": {
                                                        "bnr": {
                                                            "type": [
                                                                "integer",
                                                                "null"
                                                            ]
                                                        },
                                                        "fnr": {
                                                            "type": [
                                                                "integer",
                                                                "null"
                                                            ]
                                                        },
                                                        "gnr": {
                                                            "type": [
                                                                "integer",
                                                                "null"
                                                            ]
                                                        },
                                                        "knr": {
                                                            "type": [
                                                                "integer",
                                                                "null"
                                                            ]
                                                        },
                                                        "ownPart": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        },
                                                        "snr": {
                                                            "type": [
                                                                "integer",
                                                                "null"
                                                            ]
                                                        }
                                                    },
                                                    "required": [
                                                        "knr",
                                                        "gnr",
                                                        "bnr",
                                                        "fnr",
                                                        "snr",
                                                        "ownPart"
                                                    ],
                                                    "type": [
                                                        "object",
                                                        "null"
                                                    ]
                                                },
                                                "type": "array"
                                            },
                                            "municipality": {
                                                "type": [
                                                    "string",
                                                    "null"
                                                ]
                                            },
                                            "municipalityId": {
                                                "type": [
                                                    "string",
                                                    "null"
                                                ]
                                            },
                                            "noOfBedRooms": {
                                                "type": [
                                                    "integer",
                                                    "null"
                                                ]
                                            },
                                            "noOfRooms": {},
                                            "odel": {
                                                "type": "boolean"
                                            },
                                            "ownAssignmentType": {
                                                "type": [
                                                    "string",
                                                    "null"
                                                ]
                                            },
                                            "ownership": {
                                                "type": [
                                                    "integer",
                                                    "null"
                                                ]
                                            },
                                            "partOwnership": {
                                                "properties": {
                                                    "accountingBudgeting": {},
                                                    "amountYearsInstallmentFree": {},
                                                    "animals": {},
                                                    "boardApproval": {},
                                                    "businessManagerContactId": {},
                                                    "changeOfOwnershipFee": {},
                                                    "contactId": {},
                                                    "deposit": {},
                                                    "estateCorporationPartialBondNumber": {},
                                                    "estateCorporationPartialDenominatedBond": {},
                                                    "estateHousingCooperativeNominalStockValue": {},
                                                    "estateHousingCooperativeStockNumber": {
                                                        "type": [
                                                            "string",
                                                            "null"
                                                        ]
                                                    },
                                                    "estateJointOwnershipFraction": {
                                                        "type": [
                                                            "string",
                                                            "null"
                                                        ]
                                                    },
                                                    "guaranteeFund": {},
                                                    "interestGracePeriod": {},
                                                    "joinCostAfterGracePeriod": {},
                                                    "jointDebtDescription": {},
                                                    "jointDebtInstallment": {},
                                                    "jointDebtInterest": {},
                                                    "loanTermsCollectiveDebt": {},
                                                    "partName": {},
                                                    "partNumber": {},
                                                    "partOrgNumber": {},
                                                    "preEmptiveDeadline": {},
                                                    "preemptive": {},
                                                    "residentCommitments": {},
                                                    "shareJointCapital": {},
                                                    "shareJointCapitalDate": {},
                                                    "shareJointDebtToDate": {},
                                                    "shareJointDebtYear": {},
                                                    "statutes": {}
                                                },
                                                "type": [
                                                    "object",
                                                    "null"
                                                ]
                                            },
                                            "plot": {
                                                "properties": {
                                                    "description": {},
                                                    "owned": {
                                                        "type": "boolean"
                                                    },
                                                    "size": {
                                                        "type": [
                                                            "number",
                                                            "null"
                                                        ]
                                                    }
                                                },
                                                "type": [
                                                    "object",
                                                    "null"
                                                ]
                                            },
                                            "projectId": {},
                                            "projectRelation": {
                                                "type": [
                                                    "integer",
                                                    "null"
                                                ]
                                            },
                                            "publicApartmentNumber": {
                                                "type": [
                                                    "string",
                                                    "null"
                                                ]
                                            },
                                            "rentalCost": {},
                                            "rentalTimeSpan": {},
                                            "requiresConcession": {
                                                "type": "boolean"
                                            },
                                            "settleDepartmentId": {
                                                "type": [
                                                    "integer",
                                                    "null"
                                                ]
                                            },
                                            "showingNote": {},
                                            "showings": {
                                                "type": "array"
                                            },
                                            "soldDate": {
                                                "type": [
                                                    "string",
                                                    "null"
                                                ]
                                            },
                                            "status": {
                                                "type": [
                                                    "integer",
                                                    "null"
                                                ]
                                            },
                                            "systemId": {
                                                "type": [
                                                    "string",
                                                    "null"
                                                ]
                                            },
                                            "tag": {
                                                "type": [
                                                    "string",
                                                    "null"
                                                ]
                                            },
                                            "takeOverDate": {},
                                            "takeoverComment": {},
                                            "textFields": {
                                                "properties": {
                                                    "aboutTheUnit": {},
                                                    "additionalDeliveryInfo": {},
                                                    "adgangForUtleie": {},
                                                    "adkomst": {},
                                                    "barnehageSkoleFritid": {},
                                                    "bathroomDeliveryDescription": {},
                                                    "bebyggelse": {},
                                                    "beliggenhet": {},
                                                    "biddingInfo": {},
                                                    "communityFee": {},
                                                    "constructionMethod": {},
                                                    "contractPosition": {},
                                                    "contractPositionGuarantees": {},
                                                    "descriptionItemRenovated": {},
                                                    "diverse": {},
                                                    "dodsbo": {},
                                                    "eierskifteforsikring": {},
                                                    "electricalUsage": {},
                                                    "energyMarking": {},
                                                    "ferdigattest": {},
                                                    "financing": {},
                                                    "fulfillmentBond": {},
                                                    "homeOwnersInsurance": {},
                                                    "hvitevarer": {},
                                                    "importantInfo": {},
                                                    "innhold": {},
                                                    "insuranceCompany": {
                                                        "type": [
                                                            "string",
                                                            "null"
                                                        ]
                                                    },
                                                    "insurancePolicy": {
                                                        "type": [
                                                            "string",
                                                            "null"
                                                        ]
                                                    },
                                                    "kitchenDeliveryDescription": {},
                                                    "kommentarBoDriveplikt": {},
                                                    "kommentarKonsesjon": {},
                                                    "kommentarOdelsrett": {},
                                                    "leasePeriod": {},
                                                    "legalpant": {},
                                                    "livingroomDescription": {},
                                                    "localAreaName": {
                                                        "type": [
                                                            "string",
                                                            "null"
                                                        ]
                                                    },
                                                    "meglersVederlag": {},
                                                    "moneyLaunderingRules": {},
                                                    "offentligKommunikasjon": {},
                                                    "oppvarming": {},
                                                    "originalAdvanceAgreement": {},
                                                    "outsideAreaType": {},
                                                    "parkering": {},
                                                    "paymentConditions": {},
                                                    "personalDataAct": {},
                                                    "propertyTaxComments": {},
                                                    "purchaseContractAttachment": {},
                                                    "purchaseCosts": {},
                                                    "radonmåling": {},
                                                    "redemptionTerms": {},
                                                    "regulationOfLeaseExpense": {},
                                                    "reguleringsplan": {},
                                                    "renovert": {},
                                                    "sellersDeclaration": {},
                                                    "sentraleLoverAsIs": {},
                                                    "servitutter": {},
                                                    "servitutterErklaeringer": {},
                                                    "skolekrets": {},
                                                    "standard": {},
                                                    "tekniskeInstallasjoner": {},
                                                    "vedlegg": {},
                                                    "veiVannAvlop": {},
                                                    "velforening": {}
                                                },
                                                "type": [
                                                    "object",
                                                    "null"
                                                ]
                                            },
                                            "valuationTax": {
                                                "properties": {
                                                    "comment": {},
                                                    "primaryValue": {
                                                        "type": [
                                                            "integer",
                                                            "null"
                                                        ]
                                                    },
                                                    "primaryYear": {},
                                                    "propertyTaxAmount": {},
                                                    "propertyTaxYear": {},
                                                    "secondaryValue": {
                                                        "type": [
                                                            "integer",
                                                            "null"
                                                        ]
                                                    },
                                                    "secondaryYear": {},
                                                    "valuationDate": {},
                                                    "valuationType": {
                                                        "type": [
                                                            "string",
                                                            "null"
                                                        ]
                                                    }
                                                },
                                                "type": [
                                                    "object",
                                                    "null"
                                                ]
                                            }
                                        },
                                        "type": [
                                            "object",
                                            "null"
                                        ]
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "actions": {
                        "Condition_BrokersIdWithRoles": {
                            "actions": {
                                "Create_CSV_table_BrokersIdWithRoles": {
                                    "runAfter": {},
                                    "type": "Table",
                                    "inputs": {
                                        "format": "CSV",
                                        "from": "@variables('BrokersIdWithRoles')"
                                    }
                                },
                                "Create_blob_BrokersIdWithRoles": {
                                    "runAfter": {
                                        "Create_CSV_table_BrokersIdWithRoles": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": "@body('Create_CSV_table_BrokersIdWithRoles')",
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azureblob']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/datasets/default/files",
                                        "queries": {
                                            "folderPath": "/adobepushfiles",
                                            "name": "I0018_Next_ACS_EstateBrokersIdWithRoles_EstateBrokersIdWithRoles_@{utcNow()}.csv",
                                            "queryParametersSingleEncoded": true
                                        }
                                    },
                                    "runtimeConfiguration": {
                                        "contentTransfer": {
                                            "transferMode": "Chunked"
                                        }
                                    }
                                },
                                "Create_file_BrokersIdWithRoles": {
                                    "runAfter": {
                                        "Create_blob_BrokersIdWithRoles": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": "@body('Create_CSV_table_BrokersIdWithRoles')",
                                        "headers": {
                                            "ReadFileMetadataFromServer": true
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['sftpwithssh']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/datasets/default/files",
                                        "queries": {
                                            "folderPath": "/incoming/AzureFiles",
                                            "name": "I0018_Next_ACS_EstateBrokersIdWithRoles_EstateBrokersIdWithRoles_@{utcNow()}.csv",
                                            "queryParametersSingleEncoded": true
                                        }
                                    },
                                    "runtimeConfiguration": {
                                        "contentTransfer": {
                                            "transferMode": "Chunked"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "For_each_EstateUpdate": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "greater": [
                                            "@length(variables('BrokersIdWithRoles'))",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Condition_LinkAttributesExport": {
                            "actions": {
                                "Create_CSV_table_LinkAttributesExport": {
                                    "runAfter": {},
                                    "type": "Table",
                                    "inputs": {
                                        "format": "CSV",
                                        "from": "@variables('LinkAttributesExport')"
                                    }
                                },
                                "Create_blob_LinkAttributesExport": {
                                    "runAfter": {
                                        "Create_CSV_table_LinkAttributesExport": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": "@body('Create_CSV_table_LinkAttributesExport')",
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azureblob']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/datasets/default/files",
                                        "queries": {
                                            "folderPath": "/adobepushfiles",
                                            "name": "I0020_Next_ACS_EstateLinkAttributeExport_EstateLinkAttributeExport_@{utcNow()}.csv",
                                            "queryParametersSingleEncoded": true
                                        }
                                    },
                                    "runtimeConfiguration": {
                                        "contentTransfer": {
                                            "transferMode": "Chunked"
                                        }
                                    }
                                },
                                "Create_file_LinkAttributesExport": {
                                    "runAfter": {
                                        "Create_blob_LinkAttributesExport": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": "@body('Create_CSV_table_LinkAttributesExport')",
                                        "headers": {
                                            "ReadFileMetadataFromServer": true
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['sftpwithssh']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/datasets/default/files",
                                        "queries": {
                                            "folderPath": "/incoming/AzureFiles",
                                            "name": "I0020_Next_ACS_EstateLinkAttributeExport_EstateLinkAttributeExport_@{utcNow()}.csv",
                                            "queryParametersSingleEncoded": true
                                        }
                                    },
                                    "runtimeConfiguration": {
                                        "contentTransfer": {
                                            "transferMode": "Chunked"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "For_each_EstateUpdate": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "greater": [
                                            "@length(variables('LinkAttributesExport'))",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Condition_Showings": {
                            "actions": {
                                "Create_CSV_table_Showings": {
                                    "runAfter": {},
                                    "type": "Table",
                                    "inputs": {
                                        "format": "CSV",
                                        "from": "@variables('Showings')"
                                    }
                                },
                                "Create_blob_Showings": {
                                    "runAfter": {
                                        "Create_CSV_table_Showings": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": "@body('Create_CSV_table_Showings')",
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azureblob']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/datasets/default/files",
                                        "queries": {
                                            "folderPath": "/adobepushfiles",
                                            "name": "I0019_Next_ACS_EstateShowings_EstateShowings_@{utcNow()}.csv",
                                            "queryParametersSingleEncoded": true
                                        }
                                    },
                                    "runtimeConfiguration": {
                                        "contentTransfer": {
                                            "transferMode": "Chunked"
                                        }
                                    }
                                },
                                "Create_file_Showings": {
                                    "runAfter": {
                                        "Create_blob_Showings": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": "@body('Create_CSV_table_Showings')",
                                        "headers": {
                                            "ReadFileMetadataFromServer": true
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['sftpwithssh']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/datasets/default/files",
                                        "queries": {
                                            "folderPath": "/incoming/AzureFiles",
                                            "name": "I0019_Next_ACS_EstateShowings_EstateShowings_@{utcNow()}.csv",
                                            "queryParametersSingleEncoded": true
                                        }
                                    },
                                    "runtimeConfiguration": {
                                        "contentTransfer": {
                                            "transferMode": "Chunked"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "For_each_EstateUpdate": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "greater": [
                                            "@length(variables('Showings'))",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Create_CSV_table_EstatesUpdates": {
                            "runAfter": {
                                "DNBE_CreateVitecUrl_Production": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Table",
                            "inputs": {
                                "columns": [
                                    {
                                        "header": "estateId",
                                        "value": "@item()['estateId']"
                                    },
                                    {
                                        "header": "createdDate",
                                        "value": "@item()['createdDate']"
                                    },
                                    {
                                        "header": "expireDate",
                                        "value": "@item()['expireDate']"
                                    },
                                    {
                                        "header": "heading",
                                        "value": "@item()['heading']"
                                    },
                                    {
                                        "header": "assignmentNum",
                                        "value": "@item()['assignmentNum']"
                                    },
                                    {
                                        "header": "systemId",
                                        "value": "@item()['systemId']"
                                    },
                                    {
                                        "header": "departmentId",
                                        "value": "@item()['departmentId']"
                                    },
                                    {
                                        "header": "settleDepartmentId",
                                        "value": "@item()['settleDepartmentId']"
                                    },
                                    {
                                        "header": "status",
                                        "value": "@item()['status']"
                                    },
                                    {
                                        "header": "assignmentType",
                                        "value": "@item()['assignmentType']"
                                    },
                                    {
                                        "header": "ownership",
                                        "value": "@item()['ownership']"
                                    },
                                    {
                                        "header": "estateTypeExternal",
                                        "value": "@item()['estateTypeExternal']"
                                    },
                                    {
                                        "header": "estateBaseType",
                                        "value": "@item()['estateBaseType']"
                                    },
                                    {
                                        "header": "showingNote",
                                        "value": "@item()['showingNote']"
                                    },
                                    {
                                        "header": "noOfRooms",
                                        "value": "@item()['noOfRooms']"
                                    },
                                    {
                                        "header": "noOfBedRooms",
                                        "value": "@item()['noOfBedRooms']"
                                    },
                                    {
                                        "header": "floor",
                                        "value": "@item()['floor']"
                                    },
                                    {
                                        "header": "constructionYear",
                                        "value": "@item()['constructionYear']"
                                    },
                                    {
                                        "header": "energyLetter",
                                        "value": "@item()['energyLetter']"
                                    },
                                    {
                                        "header": "energyColorCode",
                                        "value": "@item()['energyColorCode']"
                                    },
                                    {
                                        "header": "availableDate",
                                        "value": "@item()['availableDate']"
                                    },
                                    {
                                        "header": "soldDate",
                                        "value": "@item()['soldDate']"
                                    },
                                    {
                                        "header": "commissionAcceptedDate",
                                        "value": "@item()['commissionAcceptedDate']"
                                    },
                                    {
                                        "header": "takeOverDate",
                                        "value": "@item()['takeOverDate']"
                                    },
                                    {
                                        "header": "contractMeetingDate",
                                        "value": "@item()['contractMeetingDate']"
                                    },
                                    {
                                        "header": "finnCode",
                                        "value": "@item()['finnCode']"
                                    },
                                    {
                                        "header": "finnPublishDate",
                                        "value": "@item()['finnPublishDate']"
                                    },
                                    {
                                        "header": "finnExpireDate",
                                        "value": "@item()['finnExpireDate']"
                                    },
                                    {
                                        "header": "leasingContractDate",
                                        "value": "@item()['leasingContractDate']"
                                    },
                                    {
                                        "header": "municipality",
                                        "value": "@item()['municipality']"
                                    },
                                    {
                                        "header": "municipalityId",
                                        "value": "@item()['municipalityId']"
                                    },
                                    {
                                        "header": "projectId",
                                        "value": "@item()['projectId']"
                                    },
                                    {
                                        "header": "projectRelation",
                                        "value": "@item()['projectRelation']"
                                    },
                                    {
                                        "header": "publicApartmentNumber",
                                        "value": "@item()['publicApartmentNumber']"
                                    },
                                    {
                                        "header": "customerPortal",
                                        "value": "@item()['customerPortal']"
                                    },
                                    {
                                        "header": "estateTypeId",
                                        "value": "@item()['estateTypeId']"
                                    },
                                    {
                                        "header": "estateType",
                                        "value": "@item()['estateType']"
                                    },
                                    {
                                        "header": "longitude",
                                        "value": "@item()['longitude']"
                                    },
                                    {
                                        "header": "latitude",
                                        "value": "@item()['latitude']"
                                    },
                                    {
                                        "header": "takeoverComment",
                                        "value": "@item()['takeoverComment']"
                                    },
                                    {
                                        "header": "appraiserContactId",
                                        "value": "@item()['appraiserContactId']"
                                    },
                                    {
                                        "header": "areaId",
                                        "value": "@item()['areaId']"
                                    },
                                    {
                                        "header": "completionCertificateDate",
                                        "value": "@item()['completionCertificateDate']"
                                    },
                                    {
                                        "header": "landOwnerEstateDocumentDate",
                                        "value": "@item()['landOwnerEstateDocumentDate']"
                                    },
                                    {
                                        "header": "liveAndManagementDuty",
                                        "value": "@item()['liveAndManagementDuty']"
                                    },
                                    {
                                        "header": "odel",
                                        "value": "@item()['odel']"
                                    },
                                    {
                                        "header": "ownAssignmentType",
                                        "value": "@item()['ownAssignmentType']"
                                    },
                                    {
                                        "header": "requiresConcession",
                                        "value": "@item()['requiresConcession']"
                                    },
                                    {
                                        "header": "tag",
                                        "value": "@item()['tag']"
                                    },
                                    {
                                        "header": "lastDocumentChangeDate",
                                        "value": "@item()['lastDocumentChangeDate']"
                                    },
                                    {
                                        "header": "lastImageChangeDate",
                                        "value": "@item()['lastImageChangeDate']"
                                    },
                                    {
                                        "header": "changedDate",
                                        "value": "@item()['changedDate']"
                                    },
                                    {
                                        "header": "address_apartmentNumber",
                                        "value": "@if(equals(item()['address'], null), null, item()['address']['apartmentNumber'])"
                                    },
                                    {
                                        "header": "address_streetAddress",
                                        "value": "@if(equals(item()['address'], null), null, item()['address']['streetAdress'])"
                                    },
                                    {
                                        "header": "address_zipCode",
                                        "value": "@if(equals(item()['address'], null), null, item()['address']['zipCode'])"
                                    },
                                    {
                                        "header": "address_city",
                                        "value": "@if(equals(item()['address'], null), null, item()['address']['city'])"
                                    },
                                    {
                                        "header": "rentalCost_perYear",
                                        "value": "@if(equals(item()['rentalCost'], null), null, item()['rentalCost']['perYear'])"
                                    },
                                    {
                                        "header": "rentalCost_perMonth",
                                        "value": "@if(equals(item()['rentalCost'], null), null, item()['rentalCost']['perMonth'])"
                                    },
                                    {
                                        "header": "rentalCost_perWeek",
                                        "value": "@if(equals(item()['rentalCost'], null), null, item()['rentalCost']['perWeek'])"
                                    },
                                    {
                                        "header": "rentalCost_perDay",
                                        "value": "@if(equals(item()['rentalCost'], null), null, item()['rentalCost']['perDay'])"
                                    },
                                    {
                                        "header": "rentalCost_deposit",
                                        "value": "@if(equals(item()['rentalCost'], null), null, item()['rentalCost']['deposit'])"
                                    },
                                    {
                                        "header": "rentalCost_includes",
                                        "value": "@if(equals(item()['rentalCost'], null), null, item()['rentalCost']['includes'])"
                                    },
                                    {
                                        "header": "rentalTimeSpan_from",
                                        "value": "@if(equals(item()['rentalTimeSpan'], null), null, item()['rentalTimeSpan']['from'])"
                                    },
                                    {
                                        "header": "rentalTimeSpan_to",
                                        "value": "@if(equals(item()['rentalTimeSpan'], null), null, item()['rentalTimeSpan']['to'])"
                                    },
                                    {
                                        "header": "plot_owned",
                                        "value": "@if(equals(item()['plot'], null), null, item()['plot']['owned'])"
                                    },
                                    {
                                        "header": "plot_size",
                                        "value": "@if(equals(item()['plot'], null), null, item()['plot']['size'])"
                                    },
                                    {
                                        "header": "plot_description",
                                        "value": "@if(equals(item()['plot'], null), null, item()['plot']['description'])"
                                    },
                                    {
                                        "header": "partOwnership_partName",
                                        "value": "@if(equals(item()['partOwnership'], null), null, item()['partOwnership']['partName'])"
                                    },
                                    {
                                        "header": "partOwnership_partOrgNumber",
                                        "value": "@if(equals(item()['partOwnership'], null), null, item()['partOwnership']['partOrgNumber'])"
                                    },
                                    {
                                        "header": "partOwnership_partNumber",
                                        "value": "@if(equals(item()['partOwnership'], null), null, item()['partOwnership']['partNumber'])"
                                    },
                                    {
                                        "header": "partOwnership_contactId",
                                        "value": "@if(equals(item()['partOwnership'], null), null, item()['partOwnership']['contactId'])"
                                    },
                                    {
                                        "header": "partOwnership_businessManagerContactId",
                                        "value": "@if(equals(item()['partOwnership'], null), null, item()['partOwnership']['businessManagerContactId'])"
                                    },
                                    {
                                        "header": "partOwnership_preemptive",
                                        "value": "@if(equals(item()['partOwnership'], null), null, item()['partOwnership']['preemptive'])"
                                    },
                                    {
                                        "header": "partOwnership_animals",
                                        "value": "@if(equals(item()['partOwnership'], null), null, item()['partOwnership']['animals'])"
                                    },
                                    {
                                        "header": "partOwnership_guaranteeFund",
                                        "value": "@if(equals(item()['partOwnership'], null), null, item()['partOwnership']['guaranteeFund'])"
                                    },
                                    {
                                        "header": "partOwnership_loanTermsCollectiveDebt",
                                        "value": "@if(equals(item()['partOwnership'], null), null, item()['partOwnership']['loanTermsCollectiveDebt'])"
                                    },
                                    {
                                        "header": "partOwnership_accountingBudgeting",
                                        "value": "@if(equals(item()['partOwnership'], null), null, item()['partOwnership']['accountingBudgeting'])"
                                    },
                                    {
                                        "header": "partOwnership_amountYearsInstallmentFree",
                                        "value": "@if(equals(item()['partOwnership'], null), null, item()['partOwnership']['amountYearsInstallmentFree'])"
                                    },
                                    {
                                        "header": "partOwnership_boardApproval",
                                        "value": "@if(equals(item()['partOwnership'], null), null, item()['partOwnership']['boardApproval'])"
                                    },
                                    {
                                        "header": "partOwnership_changeOfOwnershipFee",
                                        "value": "@if(equals(item()['partOwnership'], null), null, item()['partOwnership']['changeOfOwnershipFee'])"
                                    },
                                    {
                                        "header": "partOwnership_deposit",
                                        "value": "@if(equals(item()['partOwnership'], null), null, item()['partOwnership']['deposit'])"
                                    },
                                    {
                                        "header": "partOwnership_estateCorporationPartialBondNumber",
                                        "value": "@if(equals(item()['partOwnership'], null), null, item()['partOwnership']['estateCorporationPartialBondNumber'])"
                                    },
                                    {
                                        "header": "partOwnership_estateCorporationPartialDenominatedBond",
                                        "value": "@if(equals(item()['partOwnership'], null), null, item()['partOwnership']['estateCorporationPartialDenominatedBond'])"
                                    },
                                    {
                                        "header": "partOwnership_interestGracePeriod",
                                        "value": "@if(equals(item()['partOwnership'], null), null, item()['partOwnership']['interestGracePeriod'])"
                                    },
                                    {
                                        "header": "partOwnership_joinCostAfterGracePeriod",
                                        "value": "@if(equals(item()['partOwnership'], null), null, item()['partOwnership']['joinCostAfterGracePeriod'])"
                                    },
                                    {
                                        "header": "partOwnership_joinDebtDescription",
                                        "value": "@if(equals(item()['partOwnership'], null), null, item()['partOwnership']['jointDebtDescription'])"
                                    },
                                    {
                                        "header": "partOwnership_joinDebtInstallment",
                                        "value": "@if(equals(item()['partOwnership'], null), null, item()['partOwnership']['jointDebtInstallment'])"
                                    },
                                    {
                                        "header": "partOwnership_joinDebtInterest",
                                        "value": "@if(equals(item()['partOwnership'], null), null, item()['partOwnership']['jointDebtInterest'])"
                                    },
                                    {
                                        "header": "partOwnership_preEmptiveDeadline",
                                        "value": "@if(equals(item()['partOwnership'], null), null, item()['partOwnership']['preEmptiveDeadline'])"
                                    },
                                    {
                                        "header": "partOwnership_residentCommitments",
                                        "value": "@if(equals(item()['partOwnership'], null), null, item()['partOwnership']['residentCommitments'])"
                                    },
                                    {
                                        "header": "partOwnership_shareJointCapital",
                                        "value": "@if(equals(item()['partOwnership'], null), null, item()['partOwnership']['shareJointCapital'])"
                                    },
                                    {
                                        "header": "partOwnership_shareJointCapitalDate",
                                        "value": "@if(equals(item()['partOwnership'], null), null, item()['partOwnership']['shareJointCapitalDate'])"
                                    },
                                    {
                                        "header": "partOwnership_shareJointDebtToDate",
                                        "value": "@if(equals(item()['partOwnership'], null), null, item()['partOwnership']['shareJointDebtToDate'])"
                                    },
                                    {
                                        "header": "partOwnership_shareJointDebtYear",
                                        "value": "@if(equals(item()['partOwnership'], null), null, item()['partOwnership']['shareJointDebtYear'])"
                                    },
                                    {
                                        "header": "partOwnership_statutes",
                                        "value": "@if(equals(item()['partOwnership'], null), null, item()['partOwnership']['statutes'])"
                                    },
                                    {
                                        "header": "partOwnership_estateJoinOwnershipFraction",
                                        "value": "@if(equals(item()['partOwnership'], null), null, item()['partOwnership']['estateJointOwnershipFraction'])"
                                    },
                                    {
                                        "header": "partOwnership_estateHousingCooperativeStockNumber",
                                        "value": "@if(equals(item()['partOwnership'], null), null, item()['partOwnership']['estateHousingCooperativeStockNumber'])"
                                    },
                                    {
                                        "header": "partOwnership_estateHousingCooperativeNominalStockValue",
                                        "value": "@if(equals(item()['partOwnership'], null), null, item()['partOwnership']['estateHousingCooperativeNominalStockValue'])"
                                    },
                                    {
                                        "header": "estatePrice_priceSuggestion",
                                        "value": "@if(equals(item()['estatePrice'], null), null, item()['estatePrice']['priceSuggestion'])"
                                    },
                                    {
                                        "header": "estatePrice_soldPrice",
                                        "value": "@if(equals(item()['estatePrice'], null), null, item()['estatePrice']['soldPrice'])"
                                    },
                                    {
                                        "header": "estatePrice_estimatedValue",
                                        "value": "@if(equals(item()['estatePrice'], null), null, item()['estatePrice']['estimatedValue'])"
                                    },
                                    {
                                        "header": "estatePrice_collectiveDebt",
                                        "value": "@if(equals(item()['estatePrice'], null), null, item()['estatePrice']['collectiveDebt'])"
                                    },
                                    {
                                        "header": "estatePrice_collectiveAssets",
                                        "value": "@if(equals(item()['estatePrice'], null), null, item()['estatePrice']['collectiveAssets'])"
                                    },
                                    {
                                        "header": "estatePrice_loanFare",
                                        "value": "@if(equals(item()['estatePrice'], null), null, item()['estatePrice']['loanFare'])"
                                    },
                                    {
                                        "header": "estatePrice_communityTax",
                                        "value": "@if(equals(item()['estatePrice'], null), null, item()['estatePrice']['communityTax'])"
                                    },
                                    {
                                        "header": "estatePrice_communityTaxYear",
                                        "value": "@if(equals(item()['estatePrice'], null), null, item()['estatePrice']['communityTaxYear'])"
                                    },
                                    {
                                        "header": "estatePrice_salesCostDescription",
                                        "value": "@if(equals(item()['estatePrice'], null), null, item()['estatePrice']['salesCostDescription'])"
                                    },
                                    {
                                        "header": "estatePrice_rent_rentPrMonth",
                                        "value": "@if(equals(item()['estatePrice'], null), null, item()['estatePrice']['rent']?['rentPrMonth'])"
                                    },
                                    {
                                        "header": "estatePrice_rent_rentIncludes",
                                        "value": "@if(equals(item()['estatePrice'], null), null, item()['estatePrice']['rent']?['rentIncludes'])"
                                    },
                                    {
                                        "header": "estatePrice_purchaseCostsAmount",
                                        "value": "@if(equals(item()['estatePrice'], null), null, item()['estatePrice']['purchaseCostsAmount'])"
                                    },
                                    {
                                        "header": "estatePrice_totalPrice",
                                        "value": "@if(equals(item()['estatePrice'], null), null, item()['estatePrice']['totalPrice'])"
                                    },
                                    {
                                        "header": "estatePrice_waterRate",
                                        "value": "@if(equals(item()['estatePrice'], null), null, item()['estatePrice']['waterRate'])"
                                    },
                                    {
                                        "header": "estatePrice_waterRateDescription",
                                        "value": "@if(equals(item()['estatePrice'], null), null, item()['estatePrice']['waterRateDescription'])"
                                    },
                                    {
                                        "header": "estatePrice_waterRateYear",
                                        "value": "@if(equals(item()['estatePrice'], null), null, item()['estatePrice']['waterRateYear'])"
                                    },
                                    {
                                        "header": "estatePrice_yearlySocietyTax",
                                        "value": "@if(equals(item()['estatePrice'], null), null, item()['estatePrice']['yearlySocietyTax'])"
                                    },
                                    {
                                        "header": "estatePrice_yearlyLeaseFee",
                                        "value": "@if(equals(item()['estatePrice'], null), null, item()['estatePrice']['yearlyLeaseFee'])"
                                    },
                                    {
                                        "header": "estatePrice_leasingPartyTransportFee",
                                        "value": "@if(equals(item()['estatePrice'], null), null, item()['estatePrice']['leasingPartyTransportFee'])"
                                    },
                                    {
                                        "header": "estatePrice_originalAgreementOptions",
                                        "value": "@if(equals(item()['estatePrice'], null), null, item()['estatePrice']['originalAgreementPrice'])"
                                    },
                                    {
                                        "header": "estatePrice_additionalAgreementOptions",
                                        "value": "@if(equals(item()['estatePrice'], null), null, item()['estatePrice']['additionalAgreementOptions'])"
                                    },
                                    {
                                        "header": "estatePrice_originalExpensesPrice",
                                        "value": "@if(equals(item()['estatePrice'], null), null, item()['estatePrice']['originalExpensesPrice'])"
                                    },
                                    {
                                        "header": "estatePrice_transportAgreementCosts",
                                        "value": "@if(equals(item()['estatePrice'], null), null, item()['estatePrice']['transportAgreementCosts'])"
                                    },
                                    {
                                        "header": "estateSize_primaryRoomArea",
                                        "value": "@if(equals(item()['estateSize'], null), null, item()['estateSize']['primaryRoomArea'])"
                                    },
                                    {
                                        "header": "estateSize_primaryRoomAreaDescription",
                                        "value": "@if(equals(item()['estateSize'], null), null, item()['estateSize']['primaryRoomAreaDescription'])"
                                    },
                                    {
                                        "header": "estateSize_grossArea",
                                        "value": "@if(equals(item()['estateSize'], null), null, item()['estateSize']['grossArea'])"
                                    },
                                    {
                                        "header": "estateSize_usableArea",
                                        "value": "@if(equals(item()['estateSize'], null), null, item()['estateSize']['usableArea'])"
                                    },
                                    {
                                        "header": "textFields_adkomst",
                                        "value": "@if(equals(item()['textFields'], null), null, item()['textFields']['adkomst'])"
                                    },
                                    {
                                        "header": "textFields_bebyggelse",
                                        "value": "@if(equals(item()['textFields'], null), null, item()['textFields']['bebyggelse'])"
                                    },
                                    {
                                        "header": "textFields_barnehageSkoleFritid",
                                        "value": "@if(equals(item()['textFields'], null), null, item()['textFields']['barnehageSkoleFritid'])"
                                    },
                                    {
                                        "header": "textFields_skolekrets",
                                        "value": "@if(equals(item()['textFields'], null), null, item()['textFields']['skolekrets'])"
                                    },
                                    {
                                        "header": "textFields_offentligKommunikasjon",
                                        "value": "@if(equals(item()['textFields'], null), null, item()['textFields']['offentligKommunikasjon'])"
                                    },
                                    {
                                        "header": "textFields_innhold",
                                        "value": "@if(equals(item()['textFields'], null), null, item()['textFields']['innhold'])"
                                    },
                                    {
                                        "header": "textFields_standard",
                                        "value": "@if(equals(item()['textFields'], null), null, item()['textFields']['standard'])"
                                    },
                                    {
                                        "header": "textFields_renovert",
                                        "value": "@if(equals(item()['textFields'], null), null, item()['textFields']['renovert'])"
                                    },
                                    {
                                        "header": "textFields_hvitevarer",
                                        "value": "@if(equals(item()['textFields'], null), null, item()['textFields']['hvitevarer'])"
                                    },
                                    {
                                        "header": "textFields_tekniskeInstallasjoner",
                                        "value": "@if(equals(item()['textFields'], null), null, item()['textFields']['tekniskeInstallasjoner'])"
                                    },
                                    {
                                        "header": "textFields_parkering",
                                        "value": "@if(equals(item()['textFields'], null), null, item()['textFields']['parkering'])"
                                    },
                                    {
                                        "header": "textFields_diverse",
                                        "value": "@if(equals(item()['textFields'], null), null, item()['textFields']['diverse'])"
                                    },
                                    {
                                        "header": "textFields_ferdigattest",
                                        "value": "@if(equals(item()['textFields'], null), null, item()['textFields']['ferdigattest'])"
                                    },
                                    {
                                        "header": "textFields_veiVannAvlop",
                                        "value": "@if(equals(item()['textFields'], null), null, item()['textFields']['veiVannAvlop'])"
                                    },
                                    {
                                        "header": "textFields_reguleringsplan",
                                        "value": "@if(equals(item()['textFields'], null), null, item()['textFields']['reguleringsplan'])"
                                    },
                                    {
                                        "header": "textFields_adgangForUtleie",
                                        "value": "@if(equals(item()['textFields'], null), null, item()['textFields']['adgangForUtleie'])"
                                    },
                                    {
                                        "header": "textFields_servitutterErklaeringer",
                                        "value": "@if(equals(item()['textFields'], null), null, item()['textFields']['servitutterErklaeringer'])"
                                    },
                                    {
                                        "header": "textFields_radonmåling",
                                        "value": "@if(equals(item()['textFields'], null), null, item()['textFields']['radonmåling'])"
                                    },
                                    {
                                        "header": "textFields_legalpant",
                                        "value": "@if(equals(item()['textFields'], null), null, item()['textFields']['legalpant'])"
                                    },
                                    {
                                        "header": "textFields_kommentarKonsesjon",
                                        "value": "@if(equals(item()['textFields'], null), null, item()['textFields']['kommentarKonsesjon'])"
                                    },
                                    {
                                        "header": "textFields_kommentarBoDriveplikt",
                                        "value": "@if(equals(item()['textFields'], null), null, item()['textFields']['kommentarBoDriveplikt'])"
                                    },
                                    {
                                        "header": "textFields_kommentarOdelsrett",
                                        "value": "@if(equals(item()['textFields'], null), null, item()['textFields']['kommentarOdelsrett'])"
                                    },
                                    {
                                        "header": "textFields_dodsbo",
                                        "value": "@if(equals(item()['textFields'], null), null, item()['textFields']['dodsbo'])"
                                    },
                                    {
                                        "header": "textFields_sentraleLoverAsIs",
                                        "value": "@if(equals(item()['textFields'], null), null, item()['textFields']['sentraleLoverAsIs'])"
                                    },
                                    {
                                        "header": "textFields_eierskifteforsikring",
                                        "value": "@if(equals(item()['textFields'], null), null, item()['textFields']['eierskifteforsikring'])"
                                    },
                                    {
                                        "header": "textFields_vedlegg",
                                        "value": "@if(equals(item()['textFields'], null), null, item()['textFields']['vedlegg'])"
                                    },
                                    {
                                        "header": "textFields_beliggenhet",
                                        "value": "@if(equals(item()['textFields'], null), null, item()['textFields']['beliggenhet'])"
                                    },
                                    {
                                        "header": "textFields_oppvarming",
                                        "value": "@if(equals(item()['textFields'], null), null, item()['textFields']['oppvarming'])"
                                    },
                                    {
                                        "header": "textFields_velforening",
                                        "value": "@if(equals(item()['textFields'], null), null, item()['textFields']['velforening'])"
                                    },
                                    {
                                        "header": "textFields_servitutter",
                                        "value": "@if(equals(item()['textFields'], null), null, item()['textFields']['servitutter'])"
                                    },
                                    {
                                        "header": "textFields_meglersVederlag",
                                        "value": "@if(equals(item()['textFields'], null), null, item()['textFields']['meglersVederlag'])"
                                    },
                                    {
                                        "header": "textFields_biddingInfo",
                                        "value": "@if(equals(item()['textFields'], null), null, item()['textFields']['biddingInfo'])"
                                    },
                                    {
                                        "header": "textFields_communityFee",
                                        "value": "@if(equals(item()['textFields'], null), null, item()['textFields']['communityFee'])"
                                    },
                                    {
                                        "header": "textFields_constructionMethod",
                                        "value": "@if(equals(item()['textFields'], null), null, item()['textFields']['constructionMethod'])"
                                    },
                                    {
                                        "header": "textFields_electricalUsage",
                                        "value": "@if(equals(item()['textFields'], null), null, item()['textFields']['electricalUsage'])"
                                    },
                                    {
                                        "header": "textFields_energyMarking",
                                        "value": "@if(equals(item()['textFields'], null), null, item()['textFields']['energyMarking'])"
                                    },
                                    {
                                        "header": "textFields_financing",
                                        "value": "@if(equals(item()['textFields'], null), null, item()['textFields']['financing'])"
                                    },
                                    {
                                        "header": "textFields_homeOwnersInsurance",
                                        "value": "@if(equals(item()['textFields'], null), null, item()['textFields']['homeOwnersInsurance'])"
                                    },
                                    {
                                        "header": "textFields_insuranceCompany",
                                        "value": "@if(equals(item()['textFields'], null), null, item()['textFields']['insuranceCompany'])"
                                    },
                                    {
                                        "header": "textFields_insurancePolicy",
                                        "value": "@if(equals(item()['textFields'], null), null, item()['textFields']['insurancePolicy'])"
                                    },
                                    {
                                        "header": "textFields_moneyLaunderingRules",
                                        "value": "@if(equals(item()['textFields'], null), null, item()['textFields']['moneyLaunderingRules'])"
                                    },
                                    {
                                        "header": "textFields_fulfillmentBond",
                                        "value": "@if(equals(item()['textFields'], null), null, item()['textFields']['fulfillmentBond'])"
                                    },
                                    {
                                        "header": "textFields_paymentConditions",
                                        "value": "@if(equals(item()['textFields'], null), null, item()['textFields']['paymentConditions'])"
                                    },
                                    {
                                        "header": "textFields_personalDataAct",
                                        "value": "@if(equals(item()['textFields'], null), null, item()['textFields']['personalDataAct'])"
                                    },
                                    {
                                        "header": "textFields_purchaseContractAttachment",
                                        "value": "@if(equals(item()['textFields'], null), null, item()['textFields']['purchaseContractAttachment'])"
                                    },
                                    {
                                        "header": "textFields_purchaseCosts",
                                        "value": "@if(equals(item()['textFields'], null), null, item()['textFields']['purchaseCosts'])"
                                    },
                                    {
                                        "header": "textFields_sellersDeclaration",
                                        "value": "@if(equals(item()['textFields'], null), null, item()['textFields']['sellersDeclaration'])"
                                    },
                                    {
                                        "header": "textFields_descriptionItemRenovated",
                                        "value": "@if(equals(item()['textFields'], null), null, item()['textFields']['descriptionItemRenovated'])"
                                    },
                                    {
                                        "header": "textFields_propertyTaxComments",
                                        "value": "@if(equals(item()['textFields'], null), null, item()['textFields']['propertyTaxComments'])"
                                    },
                                    {
                                        "header": "textFields_aboutTheUnit",
                                        "value": "@if(equals(item()['textFields'], null), null, item()['textFields']['aboutTheUnit'])"
                                    },
                                    {
                                        "header": "textFields_redemptionTerms",
                                        "value": "@if(equals(item()['textFields'], null), null, item()['textFields']['redemptionTerms'])"
                                    },
                                    {
                                        "header": "textFields_regulationOfLeaseExpense",
                                        "value": "@if(equals(item()['textFields'], null), null, item()['textFields']['regulationOfLeaseExpense'])"
                                    },
                                    {
                                        "header": "textFields_leasePeriod",
                                        "value": "@if(equals(item()['textFields'], null), null, item()['textFields']['leasePeriod'])"
                                    },
                                    {
                                        "header": "textFields_localAreaName",
                                        "value": "@if(equals(item()['textFields'], null), null, item()['textFields']['localAreaName'])"
                                    },
                                    {
                                        "header": "textFields_contractPosition",
                                        "value": "@if(equals(item()['textFields'], null), null, item()['textFields']['contractPosition'])"
                                    },
                                    {
                                        "header": "textFields_contractPositionGuarantees",
                                        "value": "@if(equals(item()['textFields'], null), null, item()['textFields']['contractPositionGuarantees'])"
                                    },
                                    {
                                        "header": "textFields_originalAdvanceAgreement",
                                        "value": "@if(equals(item()['textFields'], null), null, item()['textFields']['originalAdvanceAgreement'])"
                                    },
                                    {
                                        "header": "textFields_kitchenDeliveryDescription",
                                        "value": "@if(equals(item()['textFields'], null), null, item()['textFields']['kitchenDeliveryDescription'])"
                                    },
                                    {
                                        "header": "textFields_bathroomDeliveryDescription",
                                        "value": "@if(equals(item()['textFields'], null), null, item()['textFields']['bathroomDeliveryDescription'])"
                                    },
                                    {
                                        "header": "textFields_livingroomDescription",
                                        "value": "@if(equals(item()['textFields'], null), null, item()['textFields']['livingroomDescription'])"
                                    },
                                    {
                                        "header": "textFields_additionalDeliveryInfo",
                                        "value": "@if(equals(item()['textFields'], null), null, item()['textFields']['additionalDeliveryInfo'])"
                                    },
                                    {
                                        "header": "textFields_importantInfo",
                                        "value": "@if(equals(item()['textFields'], null), null, item()['textFields']['importantInfo'])"
                                    },
                                    {
                                        "header": "textFields_outsideAreaType",
                                        "value": "@if(equals(item()['textFields'], null), null, item()['textFields']['outsideAreaType'])"
                                    },
                                    {
                                        "header": "valuationTax_primaryValue",
                                        "value": "@if(equals(item()['valuationTax'], null), null, item()['valuationTax']['primaryValue'])"
                                    },
                                    {
                                        "header": "valuationTax_primaryYear",
                                        "value": "@if(equals(item()['valuationTax'], null), null, item()['valuationTax']['primaryYear'])"
                                    },
                                    {
                                        "header": "valuationTax_secondaryValue",
                                        "value": "@if(equals(item()['valuationTax'], null), null, item()['valuationTax']['secondaryValue'])"
                                    },
                                    {
                                        "header": "valuationTax_secondaryYear",
                                        "value": "@if(equals(item()['valuationTax'], null), null, item()['valuationTax']['secondaryYear'])"
                                    },
                                    {
                                        "header": "valuationTax_comment",
                                        "value": "@if(equals(item()['valuationTax'], null), null, item()['valuationTax']['comment'])"
                                    },
                                    {
                                        "header": "valuationTax_propertyTaxAmount",
                                        "value": "@if(equals(item()['valuationTax'], null), null, item()['valuationTax']['propertyTaxAmount'])"
                                    },
                                    {
                                        "header": "valuationTax_propertyTaxYear",
                                        "value": "@if(equals(item()['valuationTax'], null), null, item()['valuationTax']['propertyTaxYear'])"
                                    },
                                    {
                                        "header": "valuationTax_valuationDate",
                                        "value": "@if(equals(item()['valuationTax'], null), null, item()['valuationTax']['valuationDate'])"
                                    },
                                    {
                                        "header": "valuationTax_valuationType",
                                        "value": "@if(equals(item()['valuationTax'], null), null, item()['valuationTax']['valuationType'])"
                                    },
                                    {
                                        "header": "facilities_lift",
                                        "value": "@contains(item()['facilities'], 1)"
                                    },
                                    {
                                        "header": "facilities_garage",
                                        "value": "@contains(item()['facilities'], 2)"
                                    },
                                    {
                                        "header": "facilities_veranda",
                                        "value": "@contains(item()['facilities'], 3)"
                                    }
                                ],
                                "format": "CSV",
                                "from": "@triggerBody()"
                            }
                        },
                        "Create_blob_EstatesUpdates": {
                            "runAfter": {
                                "Create_CSV_table_EstatesUpdates": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "@body('Create_CSV_table_EstatesUpdates')",
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/datasets/default/files",
                                "queries": {
                                    "folderPath": "/adobepushfiles",
                                    "name": "I002_Next_ACS_Estates_Estates_@{utcNow()}.csv",
                                    "queryParametersSingleEncoded": true
                                }
                            },
                            "runtimeConfiguration": {
                                "contentTransfer": {
                                    "transferMode": "Chunked"
                                }
                            }
                        },
                        "Create_file_EstatesUpdates": {
                            "runAfter": {
                                "Create_blob_EstatesUpdates": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "@body('Create_CSV_table_EstatesUpdates')",
                                "headers": {
                                    "ReadFileMetadataFromServer": true
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['sftpwithssh']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/datasets/default/files",
                                "queries": {
                                    "folderPath": "/incoming/AzureFiles",
                                    "name": "I002_Next_ACS_Estates_Estates_@{utcNow()}.csv",
                                    "queryParametersSingleEncoded": true
                                }
                            },
                            "runtimeConfiguration": {
                                "contentTransfer": {
                                    "transferMode": "Chunked"
                                }
                            }
                        },
                        "DNBE_CreateVitecUrl_Production": {
                            "runAfter": {
                                "For_each_EstateUpdate": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Workflow",
                            "inputs": {
                                "body": "@triggerBody()",
                                "host": {
                                    "triggerName": "manual",
                                    "workflow": {
                                        "id": "[resourceId('Microsoft.Logic/workflows', parameters('workflows_DNBE_CreateVitecUrl_Production_name'))]"
                                    }
                                }
                            }
                        },
                        "For_each_EstateUpdate": {
                            "foreach": "@triggerBody()",
                            "actions": {
                                "For_each_BrokerIdWithRoles": {
                                    "foreach": "@items('For_each_EstateUpdate')['brokersIdWithRoles']",
                                    "actions": {
                                        "Append_to_array_variable_BrokersIdWithRoles": {
                                            "runAfter": {},
                                            "type": "AppendToArrayVariable",
                                            "inputs": {
                                                "name": "BrokersIdWithRoles",
                                                "value": {
                                                    "brokerRole": "@items('For_each_BrokerIdWithRoles')['brokerRole']",
                                                    "employeeId": "@items('For_each_BrokerIdWithRoles')['employeeId']",
                                                    "estateId": "@variables('EstateId')"
                                                }
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Set_variable_EstateId": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Foreach"
                                },
                                "For_each_LinkAtrributesExport": {
                                    "foreach": "@items('For_each_EstateUpdate')['links']",
                                    "actions": {
                                        "Append_to_array_variable_LinkAttributesExport": {
                                            "runAfter": {},
                                            "type": "AppendToArrayVariable",
                                            "inputs": {
                                                "name": "LinkAttributesExport",
                                                "value": {
                                                    "estateId": "@variables('EstateId')",
                                                    "linkType": "@item()['linkType']",
                                                    "text": "@item()['text']",
                                                    "url": "@item()['url']"
                                                }
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Set_variable_EstateId": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Foreach"
                                },
                                "For_each_Showing": {
                                    "foreach": "@items('For_each_EstateUpdate')['showings']",
                                    "actions": {
                                        "Append_to_array_variable_Showings": {
                                            "runAfter": {},
                                            "type": "AppendToArrayVariable",
                                            "inputs": {
                                                "name": "Showings",
                                                "value": {
                                                    "end": "@item()['end']",
                                                    "estateId": "@variables('EstateId')",
                                                    "showingId": "@item()['showingId']",
                                                    "start": "@item()['start']"
                                                }
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Set_variable_EstateId": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Foreach"
                                },
                                "Set_variable_EstateId": {
                                    "runAfter": {},
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "EstateId",
                                        "value": "@{items('For_each_EstateUpdate')['estateId']}"
                                    }
                                }
                            },
                            "runAfter": {
                                "Initialize_variable_EstateId": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach",
                            "runtimeConfiguration": {
                                "concurrency": {
                                    "repetitions": 1
                                }
                            }
                        },
                        "Initialize_variable_BrokersIdWithRoles": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "BrokersIdWithRoles",
                                        "type": "array",
                                        "value": []
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_EstateId": {
                            "runAfter": {
                                "Initialize_variable_BrokersIdWithRoles": [
                                    "Succeeded"
                                ],
                                "Initialize_variable_LinkAttributesExport": [
                                    "Succeeded"
                                ],
                                "Initialize_variable_Showings": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "EstateId",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_LinkAttributesExport": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "LinkAttributesExport",
                                        "type": "array",
                                        "value": []
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_Showings": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Showings",
                                        "type": "array",
                                        "value": []
                                    }
                                ]
                            }
                        },
                        "Response": {
                            "runAfter": {
                                "Condition_BrokersIdWithRoles": [
                                    "Succeeded"
                                ],
                                "Condition_LinkAttributesExport": [
                                    "Succeeded"
                                ],
                                "Condition_Showings": [
                                    "Succeeded"
                                ],
                                "Create_file_EstatesUpdates": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Response",
                            "kind": "Http",
                            "inputs": {
                                "statusCode": 200
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azureblob": {
                                "connectionId": "[parameters('connections_azureblobproductionconnection_externalid')]",
                                "connectionName": "azureblobproductionconnection",
                                "id": "/subscriptions/6628b4ea-c2aa-41a7-bb87-1998fb75fb46/providers/Microsoft.Web/locations/northeurope/managedApis/azureblob"
                            },
                            "sftpwithssh": {
                                "connectionId": "[parameters('connections_sftpwithsshproductionconnection_externalid')]",
                                "connectionName": "sftpwithsshproductionconnection",
                                "id": "/subscriptions/6628b4ea-c2aa-41a7-bb87-1998fb75fb46/providers/Microsoft.Web/locations/northeurope/managedApis/sftpwithssh"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_DNBE_Vitec_ContactRelations_Push_Production_name')]",
            "location": "northeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Logic/workflows', parameters('workflows_DNBE_Adobe_ContactRelations_PushCSV_Production_name'))]",
                "[resourceId('Microsoft.Logic/workflows', parameters('workflows_DNBE_CreateRemoveObjectsFile_Production_name'))]"
            ],
            "tags": {
                "contactEmail": "XXXXXXXXXXXXXX",
                "costAllocation": "XXXXXXXXXXXXXX",
                "environment": "Production"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "schema": {
                                    "properties": {
                                        "Data": {
                                            "type": "string"
                                        },
                                        "EventType": {
                                            "type": "integer"
                                        },
                                        "InstallationId": {
                                            "type": "string"
                                        },
                                        "ObjectId": {
                                            "type": "string"
                                        },
                                        "ObjectType": {
                                            "type": "integer"
                                        },
                                        "Reference": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "actions": {
                        "Compose_ContactRelations_object": {
                            "runAfter": {},
                            "type": "Compose",
                            "inputs": {
                                "date": "@utcNow()",
                                "id": "@{triggerBody()?['ObjectId']}-@{triggerBody()?['ObjectType']}",
                                "isprocessed": false,
                                "update": "@triggerBody()"
                            }
                        },
                        "Initialize_variable_CsvData": {
                            "runAfter": {
                                "Compose_ContactRelations_object": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "CsvData",
                                        "type": "array",
                                        "value": []
                                    }
                                ]
                            }
                        },
                        "Switch": {
                            "runAfter": {
                                "Initialize_variable_CsvData": [
                                    "Succeeded"
                                ]
                            },
                            "cases": {
                                "AddOrUpdate": {
                                    "case": 1,
                                    "actions": {
                                        "Create_ContactRelations_document": {
                                            "runAfter": {},
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "body": "@outputs('Compose_ContactRelations_object')",
                                                "headers": {
                                                    "x-ms-documentdb-is-upsert": true,
                                                    "x-ms-documentdb-raw-partitionkey": "\"@{triggerBody()?['ObjectId']}-@{triggerBody()?['ObjectType']}\""
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['documentdb']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/dbs/@{encodeURIComponent('next-db')}/colls/@{encodeURIComponent('next-updates')}/docs"
                                            }
                                        },
                                        "DNBE_Adobe_ContactRelations_PushCSV": {
                                            "runAfter": {
                                                "For_each_Contact": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Workflow",
                                            "inputs": {
                                                "body": "@variables('CsvData')",
                                                "host": {
                                                    "triggerName": "manual",
                                                    "workflow": {
                                                        "id": "[resourceId('Microsoft.Logic/workflows', parameters('workflows_DNBE_Adobe_ContactRelations_PushCSV_Production_name'))]"
                                                    }
                                                }
                                            }
                                        },
                                        "For_each_Contact": {
                                            "foreach": "@body('Parse_JSON_ContactRelations')?['contacts']",
                                            "actions": {
                                                "For_each": {
                                                    "foreach": "@items('For_each_Contact')?['contacts']",
                                                    "actions": {
                                                        "Append_to_array_variable": {
                                                            "runAfter": {
                                                                "Parse_JSON_Contact": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "AppendToArrayVariable",
                                                            "inputs": {
                                                                "name": "CsvData",
                                                                "value": {
                                                                    "contactId": "@body('Parse_JSON_Contact')?['contactId']",
                                                                    "estateId": "@triggerBody()?['ObjectId']",
                                                                    "proxyId": "@body('Parse_JSON_Contact')?['proxyId']",
                                                                    "relationType": "@items('For_each_Contact')?['type']"
                                                                }
                                                            }
                                                        },
                                                        "Parse_JSON_Contact": {
                                                            "runAfter": {},
                                                            "type": "ParseJson",
                                                            "inputs": {
                                                                "content": "@items('For_each')",
                                                                "schema": {
                                                                    "properties": {
                                                                        "comments": {
                                                                            "items": {
                                                                                "properties": {
                                                                                    "changedDate": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "comment": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "comment",
                                                                                    "changedDate"
                                                                                ],
                                                                                "type": "object"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "contactId": {
                                                                            "type": "string"
                                                                        },
                                                                        "proxyId": {
                                                                            "type": [
                                                                                "string",
                                                                                "null"
                                                                            ]
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "runAfter": {},
                                                    "type": "Foreach"
                                                }
                                            },
                                            "runAfter": {
                                                "Parse_JSON_ContactRelations": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Foreach",
                                            "runtimeConfiguration": {
                                                "concurrency": {
                                                    "repetitions": 1
                                                }
                                            }
                                        },
                                        "Parse_JSON_ContactRelations": {
                                            "runAfter": {
                                                "Create_ContactRelations_document": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ParseJson",
                                            "inputs": {
                                                "content": "@triggerBody()?['Data']",
                                                "schema": {
                                                    "properties": {
                                                        "contacts": {
                                                            "items": {
                                                                "properties": {
                                                                    "contacts": {
                                                                        "items": {
                                                                            "properties": {
                                                                                "comments": {
                                                                                    "items": {
                                                                                        "properties": {
                                                                                            "changedDate": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "comment": {
                                                                                                "type": "string"
                                                                                            }
                                                                                        },
                                                                                        "required": [
                                                                                            "comment",
                                                                                            "changedDate"
                                                                                        ],
                                                                                        "type": "object"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "contactId": {
                                                                                    "type": "string"
                                                                                },
                                                                                "proxyId": {
                                                                                    "type": [
                                                                                        "string",
                                                                                        "null"
                                                                                    ]
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "contactId",
                                                                                "comments",
                                                                                "proxyId"
                                                                            ],
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "type": {
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "type",
                                                                    "contacts"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            }
                                        },
                                        "Update_isprocessed_flag": {
                                            "runAfter": {
                                                "DNBE_Adobe_ContactRelations_PushCSV": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "body": {
                                                    "date": "@utcNow()",
                                                    "id": "@{triggerBody()?['ObjectId']}-@{triggerBody()?['ObjectType']}",
                                                    "isprocessed": true,
                                                    "update": {
                                                        "Data": "@triggerBody()?['Data']",
                                                        "EventType": "@triggerBody()?['EventType']",
                                                        "InstallationId": "@triggerBody()?['InstallationId']",
                                                        "ObjectId": "@triggerBody()?['ObjectId']",
                                                        "ObjectType": "@triggerBody()?['ObjectType']",
                                                        "Reference": "@triggerBody()?['Reference']"
                                                    }
                                                },
                                                "headers": {
                                                    "x-ms-documentdb-is-upsert": true,
                                                    "x-ms-documentdb-raw-partitionkey": "\"@{triggerBody()?['ObjectId']}-@{triggerBody()?['ObjectType']}\""
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['documentdb']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/dbs/@{encodeURIComponent('next-db')}/colls/@{encodeURIComponent('next-updates')}/docs"
                                            }
                                        }
                                    }
                                },
                                "Remove": {
                                    "case": 2,
                                    "actions": {
                                        "DNBE_CreateRemoveObjectsFile_Production": {
                                            "runAfter": {},
                                            "type": "Workflow",
                                            "inputs": {
                                                "body": [
                                                    {
                                                        "objectId": "@triggerBody()?['ObjectId']",
                                                        "objectType": "@triggerBody()?['ObjectType']"
                                                    }
                                                ],
                                                "host": {
                                                    "triggerName": "manual",
                                                    "workflow": {
                                                        "id": "[resourceId('Microsoft.Logic/workflows', parameters('workflows_DNBE_CreateRemoveObjectsFile_Production_name'))]"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "default": {
                                "actions": {}
                            },
                            "expression": "@triggerBody()?['EventType']",
                            "type": "Switch"
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "documentdb": {
                                "connectionId": "[parameters('connections_documentdbproductionconnection_externalid')]",
                                "connectionName": "documentdbproductionconnection",
                                "id": "/subscriptions/6628b4ea-c2aa-41a7-bb87-1998fb75fb46/providers/Microsoft.Web/locations/northeurope/managedApis/documentdb"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_DNBE_Adobe_Push_Failed_Jobs_Production_name')]",
            "location": "northeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Logic/workflows', parameters('workflows_DNBE_CreateContactUpdateFiles_Production_name'))]",
                "[resourceId('Microsoft.Logic/workflows', parameters('workflows_DNBE_CreateContactsConsentUpdatesFile_Production_name'))]",
                "[resourceId('Microsoft.Logic/workflows', parameters('workflows_DNBE_CreateEmployeesUpdatesFile_Production_name'))]",
                "[resourceId('Microsoft.Logic/workflows', parameters('workflows_DNBE_CreateEstateContactsUpdatesFiles_Production_name'))]",
                "[resourceId('Microsoft.Logic/workflows', parameters('workflows_DNBE_CreateEstatesUpdatesFile_Production_name'))]",
                "[resourceId('Microsoft.Logic/workflows', parameters('workflows_DNBE_CreateOrdersUpdatesFile_Production_name'))]",
                "[resourceId('Microsoft.Logic/workflows', parameters('workflows_DNBE_CreateRemoveObjectsFile_Production_name'))]",
                "[resourceId('Microsoft.Logic/workflows', parameters('workflows_DNBE_CreateSearchProfileUpdatesFile_Production_name'))]"
            ],
            "tags": {
                "contactEmail": "XXXXXXXXXXXXXX",
                "costAllocation": "XXXXXXXXXXXXXX",
                "environment": "Production"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {}
                        }
                    },
                    "actions": {
                        "Condition_ContactUpdates": {
                            "actions": {
                                "DNB_CreateContactUpdateFiles": {
                                    "runAfter": {},
                                    "type": "Workflow",
                                    "inputs": {
                                        "body": "@variables('ContactsUpdates')",
                                        "headers": {
                                            "Content-Type": "application/json"
                                        },
                                        "host": {
                                            "triggerName": "manual",
                                            "workflow": {
                                                "id": "[resourceId('Microsoft.Logic/workflows', parameters('workflows_DNBE_CreateContactUpdateFiles_Production_name'))]"
                                            }
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "For_each_Document": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "greater": [
                                            "@length(variables('ContactsUpdates'))",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Condition_ContactsConsentsUpdates": {
                            "actions": {
                                "DNB_CreateContactsConsentUpdatesFile": {
                                    "runAfter": {},
                                    "type": "Workflow",
                                    "inputs": {
                                        "body": "@variables('ContactsConsentUpdates')",
                                        "headers": {
                                            "Content-Type": "application/json"
                                        },
                                        "host": {
                                            "triggerName": "manual",
                                            "workflow": {
                                                "id": "[resourceId('Microsoft.Logic/workflows', parameters('workflows_DNBE_CreateContactsConsentUpdatesFile_Production_name'))]"
                                            }
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "Condition_ContactUpdates": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "greater": [
                                            "@length(variables('ContactsConsentUpdates'))",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Condition_EmployeesUpdates": {
                            "actions": {
                                "DNB_CreateEmployeesUpdatesFile": {
                                    "runAfter": {},
                                    "type": "Workflow",
                                    "inputs": {
                                        "body": "@variables('EmployeesUpdates')",
                                        "headers": {
                                            "Content-Type": "application/json"
                                        },
                                        "host": {
                                            "triggerName": "manual",
                                            "workflow": {
                                                "id": "[resourceId('Microsoft.Logic/workflows', parameters('workflows_DNBE_CreateEmployeesUpdatesFile_Production_name'))]"
                                            }
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "For_each_Document": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "greater": [
                                            "@length(variables('EmployeesUpdates'))",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Condition_EstateContactsUpdates": {
                            "actions": {
                                "DNB_CreateEstateContactsUpdatesFiles": {
                                    "runAfter": {},
                                    "type": "Workflow",
                                    "inputs": {
                                        "body": "@variables('EstateContactsUpdates')",
                                        "headers": {
                                            "Content-Type": "application/json"
                                        },
                                        "host": {
                                            "triggerName": "manual",
                                            "workflow": {
                                                "id": "[resourceId('Microsoft.Logic/workflows', parameters('workflows_DNBE_CreateEstateContactsUpdatesFiles_Production_name'))]"
                                            }
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "For_each_Document": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "greater": [
                                            "@length(variables('EstateContactsUpdates'))",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Condition_EstatesUpdates": {
                            "actions": {
                                "DNB_CreateEstatesUpdatesFile": {
                                    "runAfter": {},
                                    "type": "Workflow",
                                    "inputs": {
                                        "body": "@variables('EstatesUpdates')",
                                        "headers": {
                                            "Content-Type": "application/json"
                                        },
                                        "host": {
                                            "triggerName": "manual",
                                            "workflow": {
                                                "id": "[resourceId('Microsoft.Logic/workflows', parameters('workflows_DNBE_CreateEstatesUpdatesFile_Production_name'))]"
                                            }
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "For_each_Document": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "greater": [
                                            "@length(variables('EstatesUpdates'))",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Condition_OrdersUpdates": {
                            "actions": {
                                "DNB_CreateOrdersUpdatesFile": {
                                    "runAfter": {},
                                    "type": "Workflow",
                                    "inputs": {
                                        "body": "@variables('OrdersUpdates')",
                                        "headers": {
                                            "Content-Type": "application/json"
                                        },
                                        "host": {
                                            "triggerName": "manual",
                                            "workflow": {
                                                "id": "[resourceId('Microsoft.Logic/workflows', parameters('workflows_DNBE_CreateOrdersUpdatesFile_Production_name'))]"
                                            }
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "For_each_Document": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "greater": [
                                            "@length(variables('OrdersUpdates'))",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Condition_RemoveUpdates": {
                            "actions": {
                                "DNB_CreateRemoveObjectsFile": {
                                    "runAfter": {},
                                    "type": "Workflow",
                                    "inputs": {
                                        "body": "@variables('RemoveUpdates')",
                                        "host": {
                                            "triggerName": "manual",
                                            "workflow": {
                                                "id": "[resourceId('Microsoft.Logic/workflows', parameters('workflows_DNBE_CreateRemoveObjectsFile_Production_name'))]"
                                            }
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "For_each_Document": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "greater": [
                                            "@length(variables('RemoveUpdates'))",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Condition_SearchProfileUpdates": {
                            "actions": {
                                "DNB_CreateSearchProfileUpdatesFile": {
                                    "runAfter": {},
                                    "type": "Workflow",
                                    "inputs": {
                                        "body": "@variables('SearchProfilesUpdates')",
                                        "host": {
                                            "triggerName": "manual",
                                            "workflow": {
                                                "id": "[resourceId('Microsoft.Logic/workflows', parameters('workflows_DNBE_CreateSearchProfileUpdatesFile_Production_name'))]"
                                            }
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "For_each_Document": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "greater": [
                                            "@length(variables('SearchProfilesUpdates'))",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "For_each_Document": {
                            "foreach": "@body('Query_documents_')?['value']",
                            "actions": {
                                "Parse_Document": {
                                    "runAfter": {},
                                    "type": "ParseJson",
                                    "inputs": {
                                        "content": "@items('For_each_Document')",
                                        "schema": {
                                            "properties": {
                                                "_attachments": {
                                                    "type": "string"
                                                },
                                                "_etag": {
                                                    "type": "string"
                                                },
                                                "_rid": {
                                                    "type": "string"
                                                },
                                                "_self": {
                                                    "type": "string"
                                                },
                                                "_ts": {
                                                    "type": "integer"
                                                },
                                                "date": {
                                                    "type": "string"
                                                },
                                                "id": {
                                                    "type": "string"
                                                },
                                                "isprocessed": {
                                                    "type": "boolean"
                                                },
                                                "update": {
                                                    "properties": {
                                                        "Data": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        },
                                                        "EventType": {
                                                            "type": "integer"
                                                        },
                                                        "InstallationId": {
                                                            "type": "string"
                                                        },
                                                        "ObjectId": {
                                                            "type": "string"
                                                        },
                                                        "ObjectType": {
                                                            "type": "integer"
                                                        },
                                                        "Reference": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "Switch_Event_Type": {
                                    "runAfter": {
                                        "Parse_Document": [
                                            "Succeeded"
                                        ]
                                    },
                                    "cases": {
                                        "Case_Add_or_Update": {
                                            "case": 1,
                                            "actions": {
                                                "Switch_Add_or_Update_Object_Type": {
                                                    "runAfter": {},
                                                    "cases": {
                                                        "Case_Add_or_Update_Contacts": {
                                                            "case": 5,
                                                            "actions": {
                                                                "Append_to_array_ContactsUpdates": {
                                                                    "runAfter": {},
                                                                    "type": "AppendToArrayVariable",
                                                                    "inputs": {
                                                                        "name": "ContactsUpdates",
                                                                        "value": "@json(body('Parse_Document')?['update']?['Data'])"
                                                                    }
                                                                },
                                                                "For_each_consent": {
                                                                    "foreach": "@body('Parse_JSON')?['consents']",
                                                                    "actions": {
                                                                        "Append_to_array_variable": {
                                                                            "runAfter": {
                                                                                "Compose_Consent": [
                                                                                    "Succeeded"
                                                                                ]
                                                                            },
                                                                            "type": "AppendToArrayVariable",
                                                                            "inputs": {
                                                                                "name": "ContactsConsentUpdates",
                                                                                "value": "@outputs('Compose_Consent')"
                                                                            }
                                                                        },
                                                                        "Compose_Consent": {
                                                                            "runAfter": {
                                                                                "Parse_JSON_Consent": [
                                                                                    "Succeeded"
                                                                                ]
                                                                            },
                                                                            "type": "Compose",
                                                                            "inputs": {
                                                                                "consent, changedBy": "@body('Parse_JSON_Consent')?['changedBy']",
                                                                                "consent_changedDate": "@body('Parse_JSON_Consent')?['changedDate']",
                                                                                "consent_type": "@body('Parse_JSON_Consent')?['type']",
                                                                                "consent_value": "@body('Parse_JSON_Consent')?['value']",
                                                                                "contactId": "@body('Parse_JSON')?['contactId']"
                                                                            }
                                                                        },
                                                                        "Parse_JSON_Consent": {
                                                                            "runAfter": {},
                                                                            "type": "ParseJson",
                                                                            "inputs": {
                                                                                "content": "@items('For_each_consent')",
                                                                                "schema": {
                                                                                    "properties": {
                                                                                        "changedBy": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "changedDate": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "type": {
                                                                                            "type": "integer"
                                                                                        },
                                                                                        "value": {
                                                                                            "type": "boolean"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "runAfter": {
                                                                        "Parse_JSON": [
                                                                            "Succeeded"
                                                                        ]
                                                                    },
                                                                    "type": "Foreach",
                                                                    "runtimeConfiguration": {
                                                                        "concurrency": {
                                                                            "repetitions": 1
                                                                        }
                                                                    }
                                                                },
                                                                "Parse_JSON": {
                                                                    "runAfter": {
                                                                        "Append_to_array_ContactsUpdates": [
                                                                            "Succeeded"
                                                                        ]
                                                                    },
                                                                    "type": "ParseJson",
                                                                    "inputs": {
                                                                        "content": "@body('Parse_Document')?['update']?['Data']",
                                                                        "schema": {
                                                                            "properties": {
                                                                                "address": {},
                                                                                "changedDate": {
                                                                                    "type": [
                                                                                        "string",
                                                                                        "null"
                                                                                    ]
                                                                                },
                                                                                "city": {
                                                                                    "type": [
                                                                                        "string",
                                                                                        "null"
                                                                                    ]
                                                                                },
                                                                                "companyName": {},
                                                                                "consents": {
                                                                                    "items": {
                                                                                        "properties": {
                                                                                            "changedBy": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "changedDate": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "type": {
                                                                                                "type": "integer"
                                                                                            },
                                                                                            "value": {
                                                                                                "type": "boolean"
                                                                                            }
                                                                                        },
                                                                                        "required": [
                                                                                            "type",
                                                                                            "value",
                                                                                            "changedDate",
                                                                                            "changedBy"
                                                                                        ],
                                                                                        "type": "object"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "contactId": {
                                                                                    "type": [
                                                                                        "string",
                                                                                        "null"
                                                                                    ]
                                                                                },
                                                                                "contactType": {
                                                                                    "type": [
                                                                                        "integer",
                                                                                        "null"
                                                                                    ]
                                                                                },
                                                                                "customerReview": {
                                                                                    "type": [
                                                                                        "string",
                                                                                        "null"
                                                                                    ]
                                                                                },
                                                                                "departmentId": {
                                                                                    "type": [
                                                                                        "integer",
                                                                                        "null"
                                                                                    ]
                                                                                },
                                                                                "email": {
                                                                                    "type": [
                                                                                        "string",
                                                                                        "null"
                                                                                    ]
                                                                                },
                                                                                "firstName": {
                                                                                    "type": [
                                                                                        "string",
                                                                                        "null"
                                                                                    ]
                                                                                },
                                                                                "lastName": {
                                                                                    "type": [
                                                                                        "string",
                                                                                        "null"
                                                                                    ]
                                                                                },
                                                                                "mobilePhone": {
                                                                                    "type": [
                                                                                        "string",
                                                                                        "null"
                                                                                    ]
                                                                                },
                                                                                "organisationNumber": {},
                                                                                "postalAddress": {
                                                                                    "type": [
                                                                                        "string",
                                                                                        "null"
                                                                                    ]
                                                                                },
                                                                                "postalCode": {
                                                                                    "type": [
                                                                                        "string",
                                                                                        "null"
                                                                                    ]
                                                                                },
                                                                                "privatePhone": {},
                                                                                "workPhone": {}
                                                                            },
                                                                            "type": "object"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "Case_Add_or_Update_Employees": {
                                                            "case": 18,
                                                            "actions": {
                                                                "Append_to_array_EmployeesUpdates": {
                                                                    "runAfter": {},
                                                                    "type": "AppendToArrayVariable",
                                                                    "inputs": {
                                                                        "name": "EmployeesUpdates",
                                                                        "value": "@json(body('Parse_Document')?['update']?['Data'])"
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "Case_Add_or_Update_Estate_Contacts": {
                                                            "case": 22,
                                                            "actions": {
                                                                "Append_to_array_EstateContactsUpdates": {
                                                                    "runAfter": {},
                                                                    "type": "AppendToArrayVariable",
                                                                    "inputs": {
                                                                        "name": "EstateContactsUpdates",
                                                                        "value": {
                                                                            "estateId": "@body('Parse_Document')?['update']?['ObjectId']",
                                                                            "update": "@json(body('Parse_Document')?['update']?['Data'])"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "Case_Add_or_Update_Estates": {
                                                            "case": 1,
                                                            "actions": {
                                                                "Append_to_array_EstatesUpdates": {
                                                                    "runAfter": {},
                                                                    "type": "AppendToArrayVariable",
                                                                    "inputs": {
                                                                        "name": "EstatesUpdates",
                                                                        "value": "@json(body('Parse_Document')?['update']?['Data'])"
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "Case_Add_or_Update_Orders": {
                                                            "case": 20,
                                                            "actions": {
                                                                "Append_to_array_OrdersUpdates": {
                                                                    "runAfter": {},
                                                                    "type": "AppendToArrayVariable",
                                                                    "inputs": {
                                                                        "name": "OrdersUpdates",
                                                                        "value": "@json(body('Parse_Document')?['update']?['Data'])"
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "Case_Add_or_Update_Search_Profiles": {
                                                            "case": 6,
                                                            "actions": {
                                                                "Append_to_array_SearchProfilesUpdates": {
                                                                    "runAfter": {},
                                                                    "type": "AppendToArrayVariable",
                                                                    "inputs": {
                                                                        "name": "SearchProfilesUpdates",
                                                                        "value": "@json(body('Parse_Document')?['update']?['Data'])"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "default": {
                                                        "actions": {}
                                                    },
                                                    "expression": "@body('Parse_Document')?['update']?['ObjectType']",
                                                    "type": "Switch"
                                                }
                                            }
                                        },
                                        "Case_Remove": {
                                            "case": 2,
                                            "actions": {
                                                "Append_to_array_RemoveUpdates": {
                                                    "runAfter": {},
                                                    "type": "AppendToArrayVariable",
                                                    "inputs": {
                                                        "name": "RemoveUpdates",
                                                        "value": {
                                                            "objectId": "@body('Parse_Document')?['update']?['ObjectId']",
                                                            "objectType": "@body('Parse_Document')?['update']?['ObjectType']"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "default": {
                                        "actions": {}
                                    },
                                    "expression": "@body('Parse_Document')?['update']?['EventType']",
                                    "type": "Switch"
                                },
                                "Update_processed_update": {
                                    "runAfter": {
                                        "Switch_Event_Type": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "date": "@body('Parse_Document')?['date']",
                                            "id": "@body('Parse_Document')?['id']",
                                            "isprocessed": true,
                                            "update": {
                                                "Data": "@body('Parse_Document')?['update']?['Data']",
                                                "EventType": "@body('Parse_Document')?['update']?['EventType']",
                                                "InstallationId": "@body('Parse_Document')?['update']?['InstallationId']",
                                                "ObjectId": "@body('Parse_Document')?['update']?['ObjectId']",
                                                "ObjectType": "@body('Parse_Document')?['update']?['ObjectType']",
                                                "Reference": "@body('Parse_Document')?['update']?['Reference']"
                                            }
                                        },
                                        "headers": {
                                            "x-ms-documentdb-is-upsert": true,
                                            "x-ms-documentdb-raw-partitionkey": "\"@{body('Parse_Document')?['id']}\""
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['documentdb']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/dbs/@{encodeURIComponent('next-db')}/colls/@{encodeURIComponent('next-updates')}/docs"
                                    }
                                }
                            },
                            "runAfter": {
                                "Query_documents_": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach",
                            "runtimeConfiguration": {
                                "concurrency": {
                                    "repetitions": 1
                                }
                            }
                        },
                        "Initialize_variable_ContactsConsentUpdates": {
                            "runAfter": {
                                "Initialize_variable_ContactsUpdates": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "ContactsConsentUpdates",
                                        "type": "array",
                                        "value": []
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_ContactsUpdates": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "ContactsUpdates",
                                        "type": "array",
                                        "value": []
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_EmployeesUpdates": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "EmployeesUpdates",
                                        "type": "array",
                                        "value": []
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_EstateContactsUpdates": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "EstateContactsUpdates",
                                        "type": "array",
                                        "value": []
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_EstatesUpdates": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "EstatesUpdates",
                                        "type": "array",
                                        "value": []
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_OrdersUpdates": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "OrdersUpdates",
                                        "type": "array",
                                        "value": []
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_RemoveUpdates": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "RemoveUpdates",
                                        "type": "array",
                                        "value": []
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_SearchProfilesUpdates": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "SearchProfilesUpdates",
                                        "type": "array",
                                        "value": []
                                    }
                                ]
                            }
                        },
                        "Query_documents_": {
                            "runAfter": {
                                "Initialize_variable_ContactsConsentUpdates": [
                                    "Succeeded"
                                ],
                                "Initialize_variable_EmployeesUpdates": [
                                    "Succeeded"
                                ],
                                "Initialize_variable_EstateContactsUpdates": [
                                    "Succeeded"
                                ],
                                "Initialize_variable_EstatesUpdates": [
                                    "Succeeded"
                                ],
                                "Initialize_variable_OrdersUpdates": [
                                    "Succeeded"
                                ],
                                "Initialize_variable_RemoveUpdates": [
                                    "Succeeded"
                                ],
                                "Initialize_variable_SearchProfilesUpdates": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['documentdb']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/v3/dbs/@{encodeURIComponent('next-db')}/colls/@{encodeURIComponent('next-updates')}/query",
                                "queries": {
                                    "queryText": " SELECT * FROM c WHERE c.date >= \"2022-03-24T22*\" AND c.date <=\n\"2022-03-28T09*\""
                                }
                            },
                            "runtimeConfiguration": {
                                "paginationPolicy": {
                                    "minimumItemCount": 100000
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "documentdb": {
                                "connectionId": "[parameters('connections_documentdbproductionconnection_externalid')]",
                                "connectionName": "documentdbproductionconnection",
                                "id": "/subscriptions/6628b4ea-c2aa-41a7-bb87-1998fb75fb46/providers/Microsoft.Web/locations/northeurope/managedApis/documentdb"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_DNBE_Adobe_Push_Production_name')]",
            "location": "northeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Logic/workflows', parameters('workflows_DNBE_CreateContactUpdateFiles_Production_name'))]",
                "[resourceId('Microsoft.Logic/workflows', parameters('workflows_DNBE_CreateContactsConsentUpdatesFile_Production_name'))]",
                "[resourceId('Microsoft.Logic/workflows', parameters('workflows_DNBE_CreateEmployeesUpdatesFile_Production_name'))]",
                "[resourceId('Microsoft.Logic/workflows', parameters('workflows_DNBE_CreateEstateContactsUpdatesFiles_Production_name'))]",
                "[resourceId('Microsoft.Logic/workflows', parameters('workflows_DNBE_CreateEstatesChecklistUpdatesFile_Production_name'))]",
                "[resourceId('Microsoft.Logic/workflows', parameters('workflows_DNBE_CreateEstatesUpdatesFile_Production_name'))]",
                "[resourceId('Microsoft.Logic/workflows', parameters('workflows_DNBE_CreateOrdersUpdatesFile_Production_name'))]",
                "[resourceId('Microsoft.Logic/workflows', parameters('workflows_DNBE_CreateRemoveObjectsFile_Production_name'))]",
                "[resourceId('Microsoft.Logic/workflows', parameters('workflows_DNBE_CreateSearchProfileUpdatesFile_Production_name'))]"
            ],
            "tags": {
                "contactEmail": "XXXXXXXXXXXXXX",
                "costAllocation": "XXXXXXXXXXXXXX",
                "environment": "Production"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "Recurrence": {
                            "recurrence": {
                                "frequency": "Minute",
                                "interval": 2,
                                "timeZone": "Romance Standard Time"
                            },
                            "evaluatedRecurrence": {
                                "frequency": "Minute",
                                "interval": 2,
                                "timeZone": "Romance Standard Time"
                            },
                            "type": "Recurrence"
                        }
                    },
                    "actions": {
                        "Condition_ContactUpdates": {
                            "actions": {
                                "DNB_CreateContactUpdateFiles": {
                                    "runAfter": {},
                                    "type": "Workflow",
                                    "inputs": {
                                        "body": "@variables('ContactsUpdates')",
                                        "headers": {
                                            "Content-Type": "application/json"
                                        },
                                        "host": {
                                            "triggerName": "manual",
                                            "workflow": {
                                                "id": "[resourceId('Microsoft.Logic/workflows', parameters('workflows_DNBE_CreateContactUpdateFiles_Production_name'))]"
                                            }
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "For_each_Document": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "greater": [
                                            "@length(variables('ContactsUpdates'))",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Condition_ContactsConsentsUpdates": {
                            "actions": {
                                "DNB_CreateContactsConsentUpdatesFile": {
                                    "runAfter": {},
                                    "type": "Workflow",
                                    "inputs": {
                                        "body": "@variables('ContactsConsentUpdates')",
                                        "headers": {
                                            "Content-Type": "application/json"
                                        },
                                        "host": {
                                            "triggerName": "manual",
                                            "workflow": {
                                                "id": "[resourceId('Microsoft.Logic/workflows', parameters('workflows_DNBE_CreateContactsConsentUpdatesFile_Production_name'))]"
                                            }
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "Condition_ContactUpdates": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "greater": [
                                            "@length(variables('ContactsConsentUpdates'))",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Condition_EmployeesUpdates": {
                            "actions": {
                                "DNB_CreateEmployeesUpdatesFile": {
                                    "runAfter": {},
                                    "type": "Workflow",
                                    "inputs": {
                                        "body": "@variables('EmployeesUpdates')",
                                        "headers": {
                                            "Content-Type": "application/json"
                                        },
                                        "host": {
                                            "triggerName": "manual",
                                            "workflow": {
                                                "id": "[resourceId('Microsoft.Logic/workflows', parameters('workflows_DNBE_CreateEmployeesUpdatesFile_Production_name'))]"
                                            }
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "For_each_Document": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "greater": [
                                            "@length(variables('EmployeesUpdates'))",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Condition_EstateContactsUpdates": {
                            "actions": {
                                "DNB_CreateEstateContactsUpdatesFiles": {
                                    "runAfter": {},
                                    "type": "Workflow",
                                    "inputs": {
                                        "body": "@variables('EstateContactsUpdates')",
                                        "headers": {
                                            "Content-Type": "application/json"
                                        },
                                        "host": {
                                            "triggerName": "manual",
                                            "workflow": {
                                                "id": "[resourceId('Microsoft.Logic/workflows', parameters('workflows_DNBE_CreateEstateContactsUpdatesFiles_Production_name'))]"
                                            }
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "For_each_Document": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "greater": [
                                            "@length(variables('EstateContactsUpdates'))",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Condition_EstatesChecklist": {
                            "actions": {
                                "DNBE_CreateEstatesChecklistUpdatesFile_Production": {
                                    "runAfter": {},
                                    "type": "Workflow",
                                    "inputs": {
                                        "body": "@variables('EstatesChecklist')",
                                        "host": {
                                            "triggerName": "manual",
                                            "workflow": {
                                                "id": "[resourceId('Microsoft.Logic/workflows', parameters('workflows_DNBE_CreateEstatesChecklistUpdatesFile_Production_name'))]"
                                            }
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "For_each_Document": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "greater": [
                                            "@length(variables('EstatesChecklist'))",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Condition_EstatesUpdates": {
                            "actions": {
                                "DNB_CreateEstatesUpdatesFile": {
                                    "runAfter": {},
                                    "type": "Workflow",
                                    "inputs": {
                                        "body": "@variables('EstatesUpdates')",
                                        "headers": {
                                            "Content-Type": "application/json"
                                        },
                                        "host": {
                                            "triggerName": "manual",
                                            "workflow": {
                                                "id": "[resourceId('Microsoft.Logic/workflows', parameters('workflows_DNBE_CreateEstatesUpdatesFile_Production_name'))]"
                                            }
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "For_each_Document": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "greater": [
                                            "@length(variables('EstatesUpdates'))",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Condition_OrdersUpdates": {
                            "actions": {
                                "DNB_CreateOrdersUpdatesFile": {
                                    "runAfter": {},
                                    "type": "Workflow",
                                    "inputs": {
                                        "body": "@variables('OrdersUpdates')",
                                        "headers": {
                                            "Content-Type": "application/json"
                                        },
                                        "host": {
                                            "triggerName": "manual",
                                            "workflow": {
                                                "id": "[resourceId('Microsoft.Logic/workflows', parameters('workflows_DNBE_CreateOrdersUpdatesFile_Production_name'))]"
                                            }
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "For_each_Document": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "greater": [
                                            "@length(variables('OrdersUpdates'))",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Condition_RemoveUpdates": {
                            "actions": {
                                "DNB_CreateRemoveObjectsFile": {
                                    "runAfter": {},
                                    "type": "Workflow",
                                    "inputs": {
                                        "body": "@variables('RemoveUpdates')",
                                        "host": {
                                            "triggerName": "manual",
                                            "workflow": {
                                                "id": "[resourceId('Microsoft.Logic/workflows', parameters('workflows_DNBE_CreateRemoveObjectsFile_Production_name'))]"
                                            }
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "For_each_Document": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "greater": [
                                            "@length(variables('RemoveUpdates'))",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Condition_SearchProfileUpdates": {
                            "actions": {
                                "DNB_CreateSearchProfileUpdatesFile": {
                                    "runAfter": {},
                                    "type": "Workflow",
                                    "inputs": {
                                        "body": "@variables('SearchProfilesUpdates')",
                                        "host": {
                                            "triggerName": "manual",
                                            "workflow": {
                                                "id": "[resourceId('Microsoft.Logic/workflows', parameters('workflows_DNBE_CreateSearchProfileUpdatesFile_Production_name'))]"
                                            }
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "For_each_Document": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "greater": [
                                            "@length(variables('SearchProfilesUpdates'))",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "For_each_Document": {
                            "foreach": "@body('Query_documents_')?['value']",
                            "actions": {
                                "Parse_Document": {
                                    "runAfter": {},
                                    "type": "ParseJson",
                                    "inputs": {
                                        "content": "@items('For_each_Document')",
                                        "schema": {
                                            "properties": {
                                                "_attachments": {
                                                    "type": "string"
                                                },
                                                "_etag": {
                                                    "type": "string"
                                                },
                                                "_rid": {
                                                    "type": "string"
                                                },
                                                "_self": {
                                                    "type": "string"
                                                },
                                                "_ts": {
                                                    "type": "integer"
                                                },
                                                "date": {
                                                    "type": "string"
                                                },
                                                "id": {
                                                    "type": "string"
                                                },
                                                "isprocessed": {
                                                    "type": "boolean"
                                                },
                                                "update": {
                                                    "properties": {
                                                        "Data": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        },
                                                        "EventType": {
                                                            "type": "integer"
                                                        },
                                                        "InstallationId": {
                                                            "type": "string"
                                                        },
                                                        "ObjectId": {
                                                            "type": "string"
                                                        },
                                                        "ObjectType": {
                                                            "type": "integer"
                                                        },
                                                        "Reference": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "Switch_Event_Type": {
                                    "runAfter": {
                                        "Parse_Document": [
                                            "Succeeded"
                                        ]
                                    },
                                    "cases": {
                                        "Case_Add_or_Update": {
                                            "case": 1,
                                            "actions": {
                                                "Switch_Add_or_Update_Object_Type": {
                                                    "runAfter": {},
                                                    "cases": {
                                                        "Case_Add_or_Update_Contacts": {
                                                            "case": 5,
                                                            "actions": {
                                                                "Append_to_array_ContactsUpdates": {
                                                                    "runAfter": {},
                                                                    "type": "AppendToArrayVariable",
                                                                    "inputs": {
                                                                        "name": "ContactsUpdates",
                                                                        "value": "@json(body('Parse_Document')?['update']?['Data'])"
                                                                    }
                                                                },
                                                                "For_each_consent": {
                                                                    "foreach": "@body('Parse_JSON')?['consents']",
                                                                    "actions": {
                                                                        "Append_to_array_variable": {
                                                                            "runAfter": {
                                                                                "Compose_Consent": [
                                                                                    "Succeeded"
                                                                                ]
                                                                            },
                                                                            "type": "AppendToArrayVariable",
                                                                            "inputs": {
                                                                                "name": "ContactsConsentUpdates",
                                                                                "value": "@outputs('Compose_Consent')"
                                                                            }
                                                                        },
                                                                        "Compose_Consent": {
                                                                            "runAfter": {
                                                                                "Parse_JSON_Consent": [
                                                                                    "Succeeded"
                                                                                ]
                                                                            },
                                                                            "type": "Compose",
                                                                            "inputs": {
                                                                                "consent, changedBy": "@body('Parse_JSON_Consent')?['changedBy']",
                                                                                "consent_changedDate": "@body('Parse_JSON_Consent')?['changedDate']",
                                                                                "consent_type": "@body('Parse_JSON_Consent')?['type']",
                                                                                "consent_value": "@body('Parse_JSON_Consent')?['value']",
                                                                                "contactId": "@body('Parse_JSON')?['contactId']"
                                                                            }
                                                                        },
                                                                        "Parse_JSON_Consent": {
                                                                            "runAfter": {},
                                                                            "type": "ParseJson",
                                                                            "inputs": {
                                                                                "content": "@items('For_each_consent')",
                                                                                "schema": {
                                                                                    "properties": {
                                                                                        "changedBy": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "changedDate": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "type": {
                                                                                            "type": "integer"
                                                                                        },
                                                                                        "value": {
                                                                                            "type": "boolean"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "runAfter": {
                                                                        "Parse_JSON": [
                                                                            "Succeeded"
                                                                        ]
                                                                    },
                                                                    "type": "Foreach"
                                                                },
                                                                "Parse_JSON": {
                                                                    "runAfter": {
                                                                        "Append_to_array_ContactsUpdates": [
                                                                            "Succeeded"
                                                                        ]
                                                                    },
                                                                    "type": "ParseJson",
                                                                    "inputs": {
                                                                        "content": "@body('Parse_Document')?['update']?['Data']",
                                                                        "schema": {
                                                                            "properties": {
                                                                                "address": {},
                                                                                "changedDate": {
                                                                                    "type": [
                                                                                        "string",
                                                                                        "null"
                                                                                    ]
                                                                                },
                                                                                "city": {
                                                                                    "type": [
                                                                                        "string",
                                                                                        "null"
                                                                                    ]
                                                                                },
                                                                                "companyName": {},
                                                                                "consents": {
                                                                                    "items": {
                                                                                        "properties": {
                                                                                            "changedBy": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "changedDate": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "type": {
                                                                                                "type": "integer"
                                                                                            },
                                                                                            "value": {
                                                                                                "type": "boolean"
                                                                                            }
                                                                                        },
                                                                                        "required": [
                                                                                            "type",
                                                                                            "value",
                                                                                            "changedDate",
                                                                                            "changedBy"
                                                                                        ],
                                                                                        "type": "object"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "contactId": {
                                                                                    "type": [
                                                                                        "string",
                                                                                        "null"
                                                                                    ]
                                                                                },
                                                                                "contactType": {
                                                                                    "type": [
                                                                                        "integer",
                                                                                        "null"
                                                                                    ]
                                                                                },
                                                                                "customerReview": {
                                                                                    "type": [
                                                                                        "string",
                                                                                        "null"
                                                                                    ]
                                                                                },
                                                                                "departmentId": {
                                                                                    "type": [
                                                                                        "integer",
                                                                                        "null"
                                                                                    ]
                                                                                },
                                                                                "email": {
                                                                                    "type": [
                                                                                        "string",
                                                                                        "null"
                                                                                    ]
                                                                                },
                                                                                "firstName": {
                                                                                    "type": [
                                                                                        "string",
                                                                                        "null"
                                                                                    ]
                                                                                },
                                                                                "lastName": {
                                                                                    "type": [
                                                                                        "string",
                                                                                        "null"
                                                                                    ]
                                                                                },
                                                                                "mobilePhone": {
                                                                                    "type": [
                                                                                        "string",
                                                                                        "null"
                                                                                    ]
                                                                                },
                                                                                "organisationNumber": {},
                                                                                "postalAddress": {
                                                                                    "type": [
                                                                                        "string",
                                                                                        "null"
                                                                                    ]
                                                                                },
                                                                                "postalCode": {
                                                                                    "type": [
                                                                                        "string",
                                                                                        "null"
                                                                                    ]
                                                                                },
                                                                                "privatePhone": {},
                                                                                "workPhone": {}
                                                                            },
                                                                            "type": "object"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "Case_Add_or_Update_Employees": {
                                                            "case": 18,
                                                            "actions": {
                                                                "Append_to_array_EmployeesUpdates": {
                                                                    "runAfter": {},
                                                                    "type": "AppendToArrayVariable",
                                                                    "inputs": {
                                                                        "name": "EmployeesUpdates",
                                                                        "value": "@json(body('Parse_Document')?['update']?['Data'])"
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "Case_Add_or_Update_Estate_Checklist": {
                                                            "case": 25,
                                                            "actions": {
                                                                "Append_to_array_EstatesChecklist": {
                                                                    "runAfter": {},
                                                                    "type": "AppendToArrayVariable",
                                                                    "inputs": {
                                                                        "name": "EstatesChecklist",
                                                                        "value": {
                                                                            "estateId": "@body('Parse_Document')?['update']?['ObjectId']",
                                                                            "update": "@json(body('Parse_Document')?['update']?['Data'])"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "Case_Add_or_Update_Estate_Contacts": {
                                                            "case": 22,
                                                            "actions": {
                                                                "Append_to_array_EstateContactsUpdates": {
                                                                    "runAfter": {},
                                                                    "type": "AppendToArrayVariable",
                                                                    "inputs": {
                                                                        "name": "EstateContactsUpdates",
                                                                        "value": {
                                                                            "estateId": "@body('Parse_Document')?['update']?['ObjectId']",
                                                                            "update": "@json(body('Parse_Document')?['update']?['Data'])"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "Case_Add_or_Update_Estates": {
                                                            "case": 1,
                                                            "actions": {
                                                                "Append_to_array_EstatesUpdates": {
                                                                    "runAfter": {},
                                                                    "type": "AppendToArrayVariable",
                                                                    "inputs": {
                                                                        "name": "EstatesUpdates",
                                                                        "value": "@json(body('Parse_Document')?['update']?['Data'])"
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "Case_Add_or_Update_Orders": {
                                                            "case": 20,
                                                            "actions": {
                                                                "Append_to_array_OrdersUpdates": {
                                                                    "runAfter": {},
                                                                    "type": "AppendToArrayVariable",
                                                                    "inputs": {
                                                                        "name": "OrdersUpdates",
                                                                        "value": "@json(body('Parse_Document')?['update']?['Data'])"
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "Case_Add_or_Update_Search_Profiles": {
                                                            "case": 6,
                                                            "actions": {
                                                                "Append_to_array_SearchProfilesUpdates": {
                                                                    "runAfter": {},
                                                                    "type": "AppendToArrayVariable",
                                                                    "inputs": {
                                                                        "name": "SearchProfilesUpdates",
                                                                        "value": "@json(body('Parse_Document')?['update']?['Data'])"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "default": {
                                                        "actions": {}
                                                    },
                                                    "expression": "@body('Parse_Document')?['update']?['ObjectType']",
                                                    "type": "Switch"
                                                }
                                            }
                                        },
                                        "Case_Remove": {
                                            "case": 2,
                                            "actions": {
                                                "Append_to_array_RemoveUpdates": {
                                                    "runAfter": {},
                                                    "type": "AppendToArrayVariable",
                                                    "inputs": {
                                                        "name": "RemoveUpdates",
                                                        "value": {
                                                            "objectId": "@body('Parse_Document')?['update']?['ObjectId']",
                                                            "objectType": "@body('Parse_Document')?['update']?['ObjectType']"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "default": {
                                        "actions": {}
                                    },
                                    "expression": "@body('Parse_Document')?['update']?['EventType']",
                                    "type": "Switch"
                                },
                                "Update_processed_update": {
                                    "runAfter": {
                                        "Switch_Event_Type": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "date": "@body('Parse_Document')?['date']",
                                            "id": "@body('Parse_Document')?['id']",
                                            "isprocessed": true,
                                            "update": {
                                                "Data": "@body('Parse_Document')?['update']?['Data']",
                                                "EventType": "@body('Parse_Document')?['update']?['EventType']",
                                                "InstallationId": "@body('Parse_Document')?['update']?['InstallationId']",
                                                "ObjectId": "@body('Parse_Document')?['update']?['ObjectId']",
                                                "ObjectType": "@body('Parse_Document')?['update']?['ObjectType']",
                                                "Reference": "@body('Parse_Document')?['update']?['Reference']"
                                            }
                                        },
                                        "headers": {
                                            "x-ms-documentdb-is-upsert": true,
                                            "x-ms-documentdb-raw-partitionkey": "\"@{body('Parse_Document')?['id']}\""
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['documentdb']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/dbs/@{encodeURIComponent('next-db')}/colls/@{encodeURIComponent('next-updates')}/docs"
                                    }
                                }
                            },
                            "runAfter": {
                                "Query_documents_": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach",
                            "runtimeConfiguration": {
                                "concurrency": {
                                    "repetitions": 1
                                }
                            }
                        },
                        "Initialize_variable_ContactsConsentUpdates": {
                            "runAfter": {
                                "Initialize_variable_ContactsUpdates": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "ContactsConsentUpdates",
                                        "type": "array",
                                        "value": []
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_ContactsUpdates": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "ContactsUpdates",
                                        "type": "array",
                                        "value": []
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_EmployeesUpdates": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "EmployeesUpdates",
                                        "type": "array",
                                        "value": []
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_EstateContactsUpdates": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "EstateContactsUpdates",
                                        "type": "array",
                                        "value": []
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_EstatesChecklist": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "EstatesChecklist",
                                        "type": "array",
                                        "value": []
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_EstatesUpdates": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "EstatesUpdates",
                                        "type": "array",
                                        "value": []
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_OrdersUpdates": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "OrdersUpdates",
                                        "type": "array",
                                        "value": []
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_RemoveUpdates": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "RemoveUpdates",
                                        "type": "array",
                                        "value": []
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_SearchProfilesUpdates": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "SearchProfilesUpdates",
                                        "type": "array",
                                        "value": []
                                    }
                                ]
                            }
                        },
                        "Query_documents_": {
                            "runAfter": {
                                "Initialize_variable_ContactsConsentUpdates": [
                                    "Succeeded"
                                ],
                                "Initialize_variable_EmployeesUpdates": [
                                    "Succeeded"
                                ],
                                "Initialize_variable_EstateContactsUpdates": [
                                    "Succeeded"
                                ],
                                "Initialize_variable_EstatesChecklist": [
                                    "Succeeded"
                                ],
                                "Initialize_variable_EstatesUpdates": [
                                    "Succeeded"
                                ],
                                "Initialize_variable_OrdersUpdates": [
                                    "Succeeded"
                                ],
                                "Initialize_variable_RemoveUpdates": [
                                    "Succeeded"
                                ],
                                "Initialize_variable_SearchProfilesUpdates": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['documentdb']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/v3/dbs/@{encodeURIComponent('next-db')}/colls/@{encodeURIComponent('next-updates')}/query",
                                "queries": {
                                    "queryText": "SELECT * FROM c WHERE c.isprocessed = false\n"
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "documentdb": {
                                "connectionId": "[parameters('connections_documentdbproductionconnection_externalid')]",
                                "connectionName": "documentdbproductionconnection",
                                "id": "/subscriptions/6628b4ea-c2aa-41a7-bb87-1998fb75fb46/providers/Microsoft.Web/locations/northeurope/managedApis/documentdb"
                            }
                        }
                    }
                }
            }
        }
    ]
}